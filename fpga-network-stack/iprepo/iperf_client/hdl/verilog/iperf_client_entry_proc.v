// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module iperf_client_entry_proc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        runExperiment,
        runExperiment_c_din,
        runExperiment_c_num_data_valid,
        runExperiment_c_fifo_cap,
        runExperiment_c_full_n,
        runExperiment_c_write,
        dualModeEn,
        dualModeEn_c_din,
        dualModeEn_c_num_data_valid,
        dualModeEn_c_fifo_cap,
        dualModeEn_c_full_n,
        dualModeEn_c_write,
        useConn,
        useConn_c_din,
        useConn_c_num_data_valid,
        useConn_c_fifo_cap,
        useConn_c_full_n,
        useConn_c_write,
        pkgWordCount,
        pkgWordCount_c_din,
        pkgWordCount_c_num_data_valid,
        pkgWordCount_c_fifo_cap,
        pkgWordCount_c_full_n,
        pkgWordCount_c_write,
        packetGap,
        packetGap_c_din,
        packetGap_c_num_data_valid,
        packetGap_c_fifo_cap,
        packetGap_c_full_n,
        packetGap_c_write,
        timeInSeconds,
        timeInSeconds_c_din,
        timeInSeconds_c_num_data_valid,
        timeInSeconds_c_fifo_cap,
        timeInSeconds_c_full_n,
        timeInSeconds_c_write,
        timeInCycles,
        timeInCycles_c_din,
        timeInCycles_c_num_data_valid,
        timeInCycles_c_fifo_cap,
        timeInCycles_c_full_n,
        timeInCycles_c_write,
        useIpAddr,
        useIpAddr_c_din,
        useIpAddr_c_num_data_valid,
        useIpAddr_c_fifo_cap,
        useIpAddr_c_full_n,
        useIpAddr_c_write,
        regIpAddress0,
        regIpAddress0_c_din,
        regIpAddress0_c_num_data_valid,
        regIpAddress0_c_fifo_cap,
        regIpAddress0_c_full_n,
        regIpAddress0_c_write,
        regIpAddress1,
        regIpAddress1_c_din,
        regIpAddress1_c_num_data_valid,
        regIpAddress1_c_fifo_cap,
        regIpAddress1_c_full_n,
        regIpAddress1_c_write,
        regIpAddress2,
        regIpAddress2_c_din,
        regIpAddress2_c_num_data_valid,
        regIpAddress2_c_fifo_cap,
        regIpAddress2_c_full_n,
        regIpAddress2_c_write,
        regIpAddress3,
        regIpAddress3_c_din,
        regIpAddress3_c_num_data_valid,
        regIpAddress3_c_fifo_cap,
        regIpAddress3_c_full_n,
        regIpAddress3_c_write,
        regIpAddress4,
        regIpAddress4_c_din,
        regIpAddress4_c_num_data_valid,
        regIpAddress4_c_fifo_cap,
        regIpAddress4_c_full_n,
        regIpAddress4_c_write,
        regIpAddress5,
        regIpAddress5_c_din,
        regIpAddress5_c_num_data_valid,
        regIpAddress5_c_fifo_cap,
        regIpAddress5_c_full_n,
        regIpAddress5_c_write,
        regIpAddress6,
        regIpAddress6_c_din,
        regIpAddress6_c_num_data_valid,
        regIpAddress6_c_fifo_cap,
        regIpAddress6_c_full_n,
        regIpAddress6_c_write,
        regIpAddress7,
        regIpAddress7_c_din,
        regIpAddress7_c_num_data_valid,
        regIpAddress7_c_fifo_cap,
        regIpAddress7_c_full_n,
        regIpAddress7_c_write,
        regIpAddress8,
        regIpAddress8_c_din,
        regIpAddress8_c_num_data_valid,
        regIpAddress8_c_fifo_cap,
        regIpAddress8_c_full_n,
        regIpAddress8_c_write,
        regIpAddress9,
        regIpAddress9_c_din,
        regIpAddress9_c_num_data_valid,
        regIpAddress9_c_fifo_cap,
        regIpAddress9_c_full_n,
        regIpAddress9_c_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] runExperiment;
output  [0:0] runExperiment_c_din;
input  [2:0] runExperiment_c_num_data_valid;
input  [2:0] runExperiment_c_fifo_cap;
input   runExperiment_c_full_n;
output   runExperiment_c_write;
input  [0:0] dualModeEn;
output  [0:0] dualModeEn_c_din;
input  [2:0] dualModeEn_c_num_data_valid;
input  [2:0] dualModeEn_c_fifo_cap;
input   dualModeEn_c_full_n;
output   dualModeEn_c_write;
input  [13:0] useConn;
output  [13:0] useConn_c_din;
input  [2:0] useConn_c_num_data_valid;
input  [2:0] useConn_c_fifo_cap;
input   useConn_c_full_n;
output   useConn_c_write;
input  [7:0] pkgWordCount;
output  [7:0] pkgWordCount_c_din;
input  [2:0] pkgWordCount_c_num_data_valid;
input  [2:0] pkgWordCount_c_fifo_cap;
input   pkgWordCount_c_full_n;
output   pkgWordCount_c_write;
input  [7:0] packetGap;
output  [7:0] packetGap_c_din;
input  [2:0] packetGap_c_num_data_valid;
input  [2:0] packetGap_c_fifo_cap;
input   packetGap_c_full_n;
output   packetGap_c_write;
input  [31:0] timeInSeconds;
output  [31:0] timeInSeconds_c_din;
input  [2:0] timeInSeconds_c_num_data_valid;
input  [2:0] timeInSeconds_c_fifo_cap;
input   timeInSeconds_c_full_n;
output   timeInSeconds_c_write;
input  [63:0] timeInCycles;
output  [63:0] timeInCycles_c_din;
input  [2:0] timeInCycles_c_num_data_valid;
input  [2:0] timeInCycles_c_fifo_cap;
input   timeInCycles_c_full_n;
output   timeInCycles_c_write;
input  [15:0] useIpAddr;
output  [15:0] useIpAddr_c_din;
input  [2:0] useIpAddr_c_num_data_valid;
input  [2:0] useIpAddr_c_fifo_cap;
input   useIpAddr_c_full_n;
output   useIpAddr_c_write;
input  [31:0] regIpAddress0;
output  [31:0] regIpAddress0_c_din;
input  [2:0] regIpAddress0_c_num_data_valid;
input  [2:0] regIpAddress0_c_fifo_cap;
input   regIpAddress0_c_full_n;
output   regIpAddress0_c_write;
input  [31:0] regIpAddress1;
output  [31:0] regIpAddress1_c_din;
input  [2:0] regIpAddress1_c_num_data_valid;
input  [2:0] regIpAddress1_c_fifo_cap;
input   regIpAddress1_c_full_n;
output   regIpAddress1_c_write;
input  [31:0] regIpAddress2;
output  [31:0] regIpAddress2_c_din;
input  [2:0] regIpAddress2_c_num_data_valid;
input  [2:0] regIpAddress2_c_fifo_cap;
input   regIpAddress2_c_full_n;
output   regIpAddress2_c_write;
input  [31:0] regIpAddress3;
output  [31:0] regIpAddress3_c_din;
input  [2:0] regIpAddress3_c_num_data_valid;
input  [2:0] regIpAddress3_c_fifo_cap;
input   regIpAddress3_c_full_n;
output   regIpAddress3_c_write;
input  [31:0] regIpAddress4;
output  [31:0] regIpAddress4_c_din;
input  [2:0] regIpAddress4_c_num_data_valid;
input  [2:0] regIpAddress4_c_fifo_cap;
input   regIpAddress4_c_full_n;
output   regIpAddress4_c_write;
input  [31:0] regIpAddress5;
output  [31:0] regIpAddress5_c_din;
input  [2:0] regIpAddress5_c_num_data_valid;
input  [2:0] regIpAddress5_c_fifo_cap;
input   regIpAddress5_c_full_n;
output   regIpAddress5_c_write;
input  [31:0] regIpAddress6;
output  [31:0] regIpAddress6_c_din;
input  [2:0] regIpAddress6_c_num_data_valid;
input  [2:0] regIpAddress6_c_fifo_cap;
input   regIpAddress6_c_full_n;
output   regIpAddress6_c_write;
input  [31:0] regIpAddress7;
output  [31:0] regIpAddress7_c_din;
input  [2:0] regIpAddress7_c_num_data_valid;
input  [2:0] regIpAddress7_c_fifo_cap;
input   regIpAddress7_c_full_n;
output   regIpAddress7_c_write;
input  [31:0] regIpAddress8;
output  [31:0] regIpAddress8_c_din;
input  [2:0] regIpAddress8_c_num_data_valid;
input  [2:0] regIpAddress8_c_fifo_cap;
input   regIpAddress8_c_full_n;
output   regIpAddress8_c_write;
input  [31:0] regIpAddress9;
output  [31:0] regIpAddress9_c_din;
input  [2:0] regIpAddress9_c_num_data_valid;
input  [2:0] regIpAddress9_c_fifo_cap;
input   regIpAddress9_c_full_n;
output   regIpAddress9_c_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg runExperiment_c_write;
reg dualModeEn_c_write;
reg useConn_c_write;
reg pkgWordCount_c_write;
reg packetGap_c_write;
reg timeInSeconds_c_write;
reg timeInCycles_c_write;
reg useIpAddr_c_write;
reg regIpAddress0_c_write;
reg regIpAddress1_c_write;
reg regIpAddress2_c_write;
reg regIpAddress3_c_write;
reg regIpAddress4_c_write;
reg regIpAddress5_c_write;
reg regIpAddress6_c_write;
reg regIpAddress7_c_write;
reg regIpAddress8_c_write;
reg regIpAddress9_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    runExperiment_c_blk_n;
reg    dualModeEn_c_blk_n;
reg    useConn_c_blk_n;
reg    pkgWordCount_c_blk_n;
reg    packetGap_c_blk_n;
reg    timeInSeconds_c_blk_n;
reg    timeInCycles_c_blk_n;
reg    useIpAddr_c_blk_n;
reg    regIpAddress0_c_blk_n;
reg    regIpAddress1_c_blk_n;
reg    regIpAddress2_c_blk_n;
reg    regIpAddress3_c_blk_n;
reg    regIpAddress4_c_blk_n;
reg    regIpAddress5_c_blk_n;
reg    regIpAddress6_c_blk_n;
reg    regIpAddress7_c_blk_n;
reg    regIpAddress8_c_blk_n;
reg    regIpAddress9_c_blk_n;
reg    ap_block_state1;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (*) begin
    if (((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        dualModeEn_c_blk_n = dualModeEn_c_full_n;
    end else begin
        dualModeEn_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        dualModeEn_c_write = 1'b1;
    end else begin
        dualModeEn_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        packetGap_c_blk_n = packetGap_c_full_n;
    end else begin
        packetGap_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        packetGap_c_write = 1'b1;
    end else begin
        packetGap_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        pkgWordCount_c_blk_n = pkgWordCount_c_full_n;
    end else begin
        pkgWordCount_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        pkgWordCount_c_write = 1'b1;
    end else begin
        pkgWordCount_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress0_c_blk_n = regIpAddress0_c_full_n;
    end else begin
        regIpAddress0_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress0_c_write = 1'b1;
    end else begin
        regIpAddress0_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress1_c_blk_n = regIpAddress1_c_full_n;
    end else begin
        regIpAddress1_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress1_c_write = 1'b1;
    end else begin
        regIpAddress1_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress2_c_blk_n = regIpAddress2_c_full_n;
    end else begin
        regIpAddress2_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress2_c_write = 1'b1;
    end else begin
        regIpAddress2_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress3_c_blk_n = regIpAddress3_c_full_n;
    end else begin
        regIpAddress3_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress3_c_write = 1'b1;
    end else begin
        regIpAddress3_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress4_c_blk_n = regIpAddress4_c_full_n;
    end else begin
        regIpAddress4_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress4_c_write = 1'b1;
    end else begin
        regIpAddress4_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress5_c_blk_n = regIpAddress5_c_full_n;
    end else begin
        regIpAddress5_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress5_c_write = 1'b1;
    end else begin
        regIpAddress5_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress6_c_blk_n = regIpAddress6_c_full_n;
    end else begin
        regIpAddress6_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress6_c_write = 1'b1;
    end else begin
        regIpAddress6_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress7_c_blk_n = regIpAddress7_c_full_n;
    end else begin
        regIpAddress7_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress7_c_write = 1'b1;
    end else begin
        regIpAddress7_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress8_c_blk_n = regIpAddress8_c_full_n;
    end else begin
        regIpAddress8_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress8_c_write = 1'b1;
    end else begin
        regIpAddress8_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress9_c_blk_n = regIpAddress9_c_full_n;
    end else begin
        regIpAddress9_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        regIpAddress9_c_write = 1'b1;
    end else begin
        regIpAddress9_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        runExperiment_c_blk_n = runExperiment_c_full_n;
    end else begin
        runExperiment_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        runExperiment_c_write = 1'b1;
    end else begin
        runExperiment_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        timeInCycles_c_blk_n = timeInCycles_c_full_n;
    end else begin
        timeInCycles_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        timeInCycles_c_write = 1'b1;
    end else begin
        timeInCycles_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        timeInSeconds_c_blk_n = timeInSeconds_c_full_n;
    end else begin
        timeInSeconds_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        timeInSeconds_c_write = 1'b1;
    end else begin
        timeInSeconds_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        useConn_c_blk_n = useConn_c_full_n;
    end else begin
        useConn_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        useConn_c_write = 1'b1;
    end else begin
        useConn_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        useIpAddr_c_blk_n = useIpAddr_c_full_n;
    end else begin
        useIpAddr_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        useIpAddr_c_write = 1'b1;
    end else begin
        useIpAddr_c_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((regIpAddress2_c_full_n == 1'b0) | (regIpAddress1_c_full_n == 1'b0) | (regIpAddress0_c_full_n == 1'b0) | (useIpAddr_c_full_n == 1'b0) | (timeInCycles_c_full_n == 1'b0) | (ap_start == 1'b0) | (timeInSeconds_c_full_n == 1'b0) | (packetGap_c_full_n == 1'b0) | (pkgWordCount_c_full_n == 1'b0) | (useConn_c_full_n == 1'b0) | (dualModeEn_c_full_n == 1'b0) | (runExperiment_c_full_n == 1'b0) | (regIpAddress9_c_full_n == 1'b0) | (regIpAddress8_c_full_n == 1'b0) | (regIpAddress7_c_full_n == 1'b0) | (regIpAddress6_c_full_n == 1'b0) | (regIpAddress5_c_full_n == 1'b0) | (regIpAddress4_c_full_n == 1'b0) | (ap_done_reg == 1'b1) | (regIpAddress3_c_full_n == 1'b0));
end

assign dualModeEn_c_din = dualModeEn;

assign packetGap_c_din = packetGap;

assign pkgWordCount_c_din = pkgWordCount;

assign regIpAddress0_c_din = regIpAddress0;

assign regIpAddress1_c_din = regIpAddress1;

assign regIpAddress2_c_din = regIpAddress2;

assign regIpAddress3_c_din = regIpAddress3;

assign regIpAddress4_c_din = regIpAddress4;

assign regIpAddress5_c_din = regIpAddress5;

assign regIpAddress6_c_din = regIpAddress6;

assign regIpAddress7_c_din = regIpAddress7;

assign regIpAddress8_c_din = regIpAddress8;

assign regIpAddress9_c_din = regIpAddress9;

assign runExperiment_c_din = runExperiment;

assign timeInCycles_c_din = timeInCycles;

assign timeInSeconds_c_din = timeInSeconds;

assign useConn_c_din = useConn;

assign useIpAddr_c_din = useIpAddr;

endmodule //iperf_client_entry_proc
