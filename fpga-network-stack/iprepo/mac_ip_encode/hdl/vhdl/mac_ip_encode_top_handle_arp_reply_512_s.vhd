-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mac_ip_encode_top_handle_arp_reply_512_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dataStreamBuffer2_dout : IN STD_LOGIC_VECTOR (576 downto 0);
    dataStreamBuffer2_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    dataStreamBuffer2_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    dataStreamBuffer2_empty_n : IN STD_LOGIC;
    dataStreamBuffer2_read : OUT STD_LOGIC;
    s_axis_arp_lookup_reply_TVALID : IN STD_LOGIC;
    myMacAddress_dout : IN STD_LOGIC_VECTOR (47 downto 0);
    myMacAddress_num_data_valid : IN STD_LOGIC_VECTOR (3 downto 0);
    myMacAddress_fifo_cap : IN STD_LOGIC_VECTOR (3 downto 0);
    myMacAddress_empty_n : IN STD_LOGIC;
    myMacAddress_read : OUT STD_LOGIC;
    dataStreamBuffer3_din : OUT STD_LOGIC_VECTOR (576 downto 0);
    dataStreamBuffer3_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    dataStreamBuffer3_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    dataStreamBuffer3_full_n : IN STD_LOGIC;
    dataStreamBuffer3_write : OUT STD_LOGIC;
    headerFifo_din : OUT STD_LOGIC_VECTOR (128 downto 0);
    headerFifo_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    headerFifo_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    headerFifo_full_n : IN STD_LOGIC;
    headerFifo_write : OUT STD_LOGIC;
    s_axis_arp_lookup_reply_TDATA : IN STD_LOGIC_VECTOR (55 downto 0);
    s_axis_arp_lookup_reply_TREADY : OUT STD_LOGIC );
end;


architecture behav of mac_ip_encode_top_handle_arp_reply_512_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_240 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001000000";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal grp_nbreadreq_fu_74_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op7_read_state1 : BOOLEAN;
    signal ap_predicate_op16_read_state1 : BOOLEAN;
    signal tmp_i_nbreadreq_fu_88_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op27_read_state1 : BOOLEAN;
    signal ap_predicate_op30_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal har_state_load_reg_191 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_i_51_reg_195 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op59_write_state2 : BOOLEAN;
    signal tmp_i_reg_208 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_75_i_reg_212 : STD_LOGIC_VECTOR (0 downto 0);
    signal reply_hit_reg_221 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op62_write_state2 : BOOLEAN;
    signal ap_predicate_op63_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal har_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal s_axis_arp_lookup_reply_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal myMacAddress_blk_n : STD_LOGIC;
    signal dataStreamBuffer2_blk_n : STD_LOGIC;
    signal headerFifo_blk_n : STD_LOGIC;
    signal dataStreamBuffer3_blk_n : STD_LOGIC;
    signal reg_130 : STD_LOGIC_VECTOR (576 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_macAddress_V_fu_151_p1 : STD_LOGIC_VECTOR (47 downto 0);
    signal tmp_macAddress_V_reg_216 : STD_LOGIC_VECTOR (47 downto 0);
    signal reply_hit_fu_155_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_122_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln174_cast_fu_175_p5 : STD_LOGIC_VECTOR (116 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_s_axis_arp_lookup_reply_U_apdone_blk : STD_LOGIC;
    signal s_axis_arp_lookup_reply_TDATA_int_regslice : STD_LOGIC_VECTOR (55 downto 0);
    signal s_axis_arp_lookup_reply_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_arp_lookup_reply_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_arp_lookup_reply_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component mac_ip_encode_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_s_axis_arp_lookup_reply_U : component mac_ip_encode_top_regslice_both
    generic map (
        DataWidth => 56)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_arp_lookup_reply_TDATA,
        vld_in => s_axis_arp_lookup_reply_TVALID,
        ack_in => regslice_both_s_axis_arp_lookup_reply_U_ack_in,
        data_out => s_axis_arp_lookup_reply_TDATA_int_regslice,
        vld_out => s_axis_arp_lookup_reply_TVALID_int_regslice,
        ack_out => s_axis_arp_lookup_reply_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_arp_lookup_reply_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    har_state_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((har_state = ap_const_lv2_2)) and not((har_state = ap_const_lv2_1)) and (tmp_i_nbreadreq_fu_88_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_122_p3 = ap_const_lv1_0) and (reply_hit_fu_155_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                har_state <= ap_const_lv2_1;
            elsif ((not((har_state = ap_const_lv2_2)) and not((har_state = ap_const_lv2_1)) and (tmp_i_nbreadreq_fu_88_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_122_p3 = ap_const_lv1_0) and (reply_hit_fu_155_p3 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                har_state <= ap_const_lv2_2;
            elsif ((((grp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (har_state = ap_const_lv2_2) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_122_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((grp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (har_state = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (grp_fu_122_p3 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
                har_state <= ap_const_lv2_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                har_state_load_reg_191 <= har_state;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_130 <= dataStreamBuffer2_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((har_state = ap_const_lv2_2)) and not((har_state = ap_const_lv2_1)) and (tmp_i_nbreadreq_fu_88_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                reply_hit_reg_221 <= s_axis_arp_lookup_reply_TDATA_int_regslice(48 downto 48);
                tmp_macAddress_V_reg_216 <= tmp_macAddress_V_fu_151_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((har_state = ap_const_lv2_2)) and not((har_state = ap_const_lv2_1)) and (tmp_i_nbreadreq_fu_88_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_75_i_reg_212 <= grp_nbreadreq_fu_74_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((har_state = ap_const_lv2_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_51_reg_195 <= grp_nbreadreq_fu_74_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((har_state = ap_const_lv2_2)) and not((har_state = ap_const_lv2_1)) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_reg_208 <= tmp_i_nbreadreq_fu_88_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, dataStreamBuffer2_empty_n, ap_predicate_op7_read_state1, ap_predicate_op16_read_state1, ap_predicate_op27_read_state1, ap_predicate_op30_read_state1, ap_done_reg, myMacAddress_empty_n, dataStreamBuffer3_full_n, ap_predicate_op59_write_state2, headerFifo_full_n, ap_predicate_op62_write_state2, ap_predicate_op63_write_state2, s_axis_arp_lookup_reply_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_arp_lookup_reply_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op16_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op7_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((myMacAddress_empty_n = ap_const_logic_0) or ((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (dataStreamBuffer3_full_n = ap_const_logic_0)) or ((dataStreamBuffer3_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op62_write_state2 = ap_const_boolean_1) and (headerFifo_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, dataStreamBuffer2_empty_n, ap_predicate_op7_read_state1, ap_predicate_op16_read_state1, ap_predicate_op27_read_state1, ap_predicate_op30_read_state1, ap_done_reg, myMacAddress_empty_n, dataStreamBuffer3_full_n, ap_predicate_op59_write_state2, headerFifo_full_n, ap_predicate_op62_write_state2, ap_predicate_op63_write_state2, s_axis_arp_lookup_reply_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_arp_lookup_reply_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op16_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op7_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((myMacAddress_empty_n = ap_const_logic_0) or ((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (dataStreamBuffer3_full_n = ap_const_logic_0)) or ((dataStreamBuffer3_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op62_write_state2 = ap_const_boolean_1) and (headerFifo_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, dataStreamBuffer2_empty_n, ap_predicate_op7_read_state1, ap_predicate_op16_read_state1, ap_predicate_op27_read_state1, ap_predicate_op30_read_state1, ap_done_reg, myMacAddress_empty_n, dataStreamBuffer3_full_n, ap_predicate_op59_write_state2, headerFifo_full_n, ap_predicate_op62_write_state2, ap_predicate_op63_write_state2, s_axis_arp_lookup_reply_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_arp_lookup_reply_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op16_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op7_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((myMacAddress_empty_n = ap_const_logic_0) or ((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (dataStreamBuffer3_full_n = ap_const_logic_0)) or ((dataStreamBuffer3_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op62_write_state2 = ap_const_boolean_1) and (headerFifo_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(dataStreamBuffer2_empty_n, ap_predicate_op7_read_state1, ap_predicate_op16_read_state1, ap_predicate_op27_read_state1, ap_predicate_op30_read_state1, ap_done_reg, s_axis_arp_lookup_reply_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (s_axis_arp_lookup_reply_TVALID_int_regslice = ap_const_logic_0)) or ((ap_predicate_op16_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)) or ((ap_predicate_op7_read_state1 = ap_const_boolean_1) and (dataStreamBuffer2_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(myMacAddress_empty_n, dataStreamBuffer3_full_n, ap_predicate_op59_write_state2, headerFifo_full_n, ap_predicate_op62_write_state2, ap_predicate_op63_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((myMacAddress_empty_n = ap_const_logic_0) or ((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (dataStreamBuffer3_full_n = ap_const_logic_0)) or ((dataStreamBuffer3_full_n = ap_const_logic_0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)) or ((ap_predicate_op62_write_state2 = ap_const_boolean_1) and (headerFifo_full_n = ap_const_logic_0)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op16_read_state1_assign_proc : process(grp_nbreadreq_fu_74_p3, har_state)
    begin
                ap_predicate_op16_read_state1 <= ((grp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (har_state = ap_const_lv2_2));
    end process;


    ap_predicate_op27_read_state1_assign_proc : process(grp_nbreadreq_fu_74_p3, tmp_i_nbreadreq_fu_88_p3, har_state)
    begin
                ap_predicate_op27_read_state1 <= (not((har_state = ap_const_lv2_2)) and not((har_state = ap_const_lv2_1)) and (tmp_i_nbreadreq_fu_88_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_74_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op30_read_state1_assign_proc : process(grp_nbreadreq_fu_74_p3, tmp_i_nbreadreq_fu_88_p3, har_state)
    begin
                ap_predicate_op30_read_state1 <= (not((har_state = ap_const_lv2_2)) and not((har_state = ap_const_lv2_1)) and (tmp_i_nbreadreq_fu_88_p3 = ap_const_lv1_1) and (grp_nbreadreq_fu_74_p3 = ap_const_lv1_1));
    end process;


    ap_predicate_op59_write_state2_assign_proc : process(har_state_load_reg_191, tmp_i_51_reg_195)
    begin
                ap_predicate_op59_write_state2 <= ((tmp_i_51_reg_195 = ap_const_lv1_1) and (har_state_load_reg_191 = ap_const_lv2_1));
    end process;


    ap_predicate_op62_write_state2_assign_proc : process(har_state_load_reg_191, tmp_i_reg_208, tmp_75_i_reg_212, reply_hit_reg_221)
    begin
                ap_predicate_op62_write_state2 <= (not((har_state_load_reg_191 = ap_const_lv2_1)) and not((har_state_load_reg_191 = ap_const_lv2_2)) and (reply_hit_reg_221 = ap_const_lv1_1) and (tmp_75_i_reg_212 = ap_const_lv1_1) and (tmp_i_reg_208 = ap_const_lv1_1));
    end process;


    ap_predicate_op63_write_state2_assign_proc : process(har_state_load_reg_191, tmp_i_reg_208, tmp_75_i_reg_212, reply_hit_reg_221)
    begin
                ap_predicate_op63_write_state2 <= (not((har_state_load_reg_191 = ap_const_lv2_1)) and not((har_state_load_reg_191 = ap_const_lv2_2)) and (reply_hit_reg_221 = ap_const_lv1_1) and (tmp_75_i_reg_212 = ap_const_lv1_1) and (tmp_i_reg_208 = ap_const_lv1_1));
    end process;


    ap_predicate_op7_read_state1_assign_proc : process(grp_nbreadreq_fu_74_p3, har_state)
    begin
                ap_predicate_op7_read_state1 <= ((grp_nbreadreq_fu_74_p3 = ap_const_lv1_1) and (har_state = ap_const_lv2_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    dataStreamBuffer2_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, dataStreamBuffer2_empty_n, ap_predicate_op7_read_state1, ap_predicate_op16_read_state1, ap_predicate_op30_read_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if ((((ap_done_reg = ap_const_logic_0) and (ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op16_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_done_reg = ap_const_logic_0) and (ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            dataStreamBuffer2_blk_n <= dataStreamBuffer2_empty_n;
        else 
            dataStreamBuffer2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    dataStreamBuffer2_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op7_read_state1, ap_predicate_op16_read_state1, ap_predicate_op30_read_state1, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op16_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op7_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            dataStreamBuffer2_read <= ap_const_logic_1;
        else 
            dataStreamBuffer2_read <= ap_const_logic_0;
        end if; 
    end process;


    dataStreamBuffer3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dataStreamBuffer3_full_n, ap_predicate_op59_write_state2, ap_predicate_op63_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)))) then 
            dataStreamBuffer3_blk_n <= dataStreamBuffer3_full_n;
        else 
            dataStreamBuffer3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dataStreamBuffer3_din <= reg_130;

    dataStreamBuffer3_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op59_write_state2, ap_predicate_op63_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op59_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op63_write_state2 = ap_const_boolean_1)))) then 
            dataStreamBuffer3_write <= ap_const_logic_1;
        else 
            dataStreamBuffer3_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_122_p3 <= dataStreamBuffer2_dout(576 downto 576);
    grp_nbreadreq_fu_74_p3 <= (0=>(dataStreamBuffer2_empty_n), others=>'-');

    headerFifo_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, headerFifo_full_n, ap_predicate_op62_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op62_write_state2 = ap_const_boolean_1))) then 
            headerFifo_blk_n <= headerFifo_full_n;
        else 
            headerFifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    headerFifo_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln174_cast_fu_175_p5),129));

    headerFifo_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op62_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op62_write_state2 = ap_const_boolean_1))) then 
            headerFifo_write <= ap_const_logic_1;
        else 
            headerFifo_write <= ap_const_logic_0;
        end if; 
    end process;


    myMacAddress_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, myMacAddress_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            myMacAddress_blk_n <= myMacAddress_empty_n;
        else 
            myMacAddress_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    myMacAddress_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            myMacAddress_read <= ap_const_logic_1;
        else 
            myMacAddress_read <= ap_const_logic_0;
        end if; 
    end process;

    reply_hit_fu_155_p3 <= s_axis_arp_lookup_reply_TDATA_int_regslice(48 downto 48);

    s_axis_arp_lookup_reply_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op27_read_state1, ap_done_reg, ap_block_pp0_stage0, s_axis_arp_lookup_reply_TVALID_int_regslice)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_axis_arp_lookup_reply_TDATA_blk_n <= s_axis_arp_lookup_reply_TVALID_int_regslice;
        else 
            s_axis_arp_lookup_reply_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_arp_lookup_reply_TREADY <= regslice_both_s_axis_arp_lookup_reply_U_ack_in;

    s_axis_arp_lookup_reply_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op27_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op27_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_axis_arp_lookup_reply_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_arp_lookup_reply_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_i_nbreadreq_fu_88_p3 <= (0=>(s_axis_arp_lookup_reply_TVALID_int_regslice), others=>'-');
    tmp_macAddress_V_fu_151_p1 <= s_axis_arp_lookup_reply_TDATA_int_regslice(48 - 1 downto 0);
    zext_ln174_cast_fu_175_p5 <= (((ap_const_lv4_8 & myMacAddress_dout) & tmp_macAddress_V_reg_216) & ap_const_lv17_0);
end behav;
