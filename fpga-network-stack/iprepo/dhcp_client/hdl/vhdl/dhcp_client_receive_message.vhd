-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dhcp_client_receive_message is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    myMacAddress_c_din : OUT STD_LOGIC_VECTOR (47 downto 0);
    myMacAddress_c_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    myMacAddress_c_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    myMacAddress_c_full_n : IN STD_LOGIC;
    myMacAddress_c_write : OUT STD_LOGIC;
    s_axis_rx_data_TVALID : IN STD_LOGIC;
    s_axis_rx_metadata_TVALID : IN STD_LOGIC;
    dhcp_replyMetaFifo_din : OUT STD_LOGIC_VECTOR (103 downto 0);
    dhcp_replyMetaFifo_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    dhcp_replyMetaFifo_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    dhcp_replyMetaFifo_full_n : IN STD_LOGIC;
    dhcp_replyMetaFifo_write : OUT STD_LOGIC;
    s_axis_rx_metadata_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    s_axis_rx_metadata_TREADY : OUT STD_LOGIC;
    s_axis_rx_data_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    s_axis_rx_data_TREADY : OUT STD_LOGIC;
    s_axis_rx_data_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_rx_data_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axis_rx_data_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    myMacAddress : IN STD_LOGIC_VECTOR (47 downto 0) );
end;


architecture behav of dhcp_client_receive_message is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_63538263 : STD_LOGIC_VECTOR (31 downto 0) := "01100011010100111000001001100011";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv16_135 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100110101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_126_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_i_i_nbreadreq_fu_152_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_485 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_last_V_reg_489 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln121_1_reg_499 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op79_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal rm_wordCount_V : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal rm_isReply : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal rm_correctMac : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal rm_isDHCP : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal meta_identifier_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal meta_assignedIpAddress_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal meta_serverAddress_V : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal meta_type_V_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal s_axis_rx_metadata_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal s_axis_rx_data_TDATA_blk_n : STD_LOGIC;
    signal myMacAddress_c_blk_n : STD_LOGIC;
    signal dhcp_replyMetaFifo_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_last_V_fu_255_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln121_1_fu_444_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_176_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_rm_isReply_loc_0_i_i_reg_173 : STD_LOGIC_VECTOR (0 downto 0);
    signal rm_wordCount_V_load_load_fu_259_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln1065_fu_406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_rm_correctMac_loc_0_i_i_reg_192 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_1_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln93_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_215_p14 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_rm_isDHCP_loc_0_i_i_reg_212 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1065_3_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_rm_wordCount_V_new_0_i_i_phi_fu_234_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_i_i_reg_231 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln886_fu_431_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_241_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_3_fu_360_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_2_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal tmp_8_i_i9_fu_304_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_5_fu_314_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1065_5_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_4_fu_337_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1065_4_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_2_fu_376_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln674_fu_402_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln121_fu_438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_s_axis_rx_metadata_U_apdone_blk : STD_LOGIC;
    signal s_axis_rx_metadata_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal s_axis_rx_metadata_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_rx_metadata_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_rx_metadata_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_data_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_rx_data_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal s_axis_rx_data_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_rx_data_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_rx_data_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_s_axis_rx_data_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_rx_data_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_s_axis_rx_data_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_last_V_U_apdone_blk : STD_LOGIC;
    signal s_axis_rx_data_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_s_axis_rx_data_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_V_last_V_U_ack_in : STD_LOGIC;
    signal ap_condition_222 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component dhcp_client_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_s_axis_rx_metadata_U : component dhcp_client_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_rx_metadata_TDATA,
        vld_in => s_axis_rx_metadata_TVALID,
        ack_in => regslice_both_s_axis_rx_metadata_U_ack_in,
        data_out => s_axis_rx_metadata_TDATA_int_regslice,
        vld_out => s_axis_rx_metadata_TVALID_int_regslice,
        ack_out => s_axis_rx_metadata_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_rx_metadata_U_apdone_blk);

    regslice_both_s_axis_rx_data_V_data_V_U : component dhcp_client_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_rx_data_TDATA,
        vld_in => s_axis_rx_data_TVALID,
        ack_in => regslice_both_s_axis_rx_data_V_data_V_U_ack_in,
        data_out => s_axis_rx_data_TDATA_int_regslice,
        vld_out => s_axis_rx_data_TVALID_int_regslice,
        ack_out => s_axis_rx_data_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_rx_data_V_data_V_U_apdone_blk);

    regslice_both_s_axis_rx_data_V_keep_V_U : component dhcp_client_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_rx_data_TKEEP,
        vld_in => s_axis_rx_data_TVALID,
        ack_in => regslice_both_s_axis_rx_data_V_keep_V_U_ack_in,
        data_out => s_axis_rx_data_TKEEP_int_regslice,
        vld_out => regslice_both_s_axis_rx_data_V_keep_V_U_vld_out,
        ack_out => s_axis_rx_data_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_rx_data_V_keep_V_U_apdone_blk);

    regslice_both_s_axis_rx_data_V_strb_V_U : component dhcp_client_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_rx_data_TSTRB,
        vld_in => s_axis_rx_data_TVALID,
        ack_in => regslice_both_s_axis_rx_data_V_strb_V_U_ack_in,
        data_out => s_axis_rx_data_TSTRB_int_regslice,
        vld_out => regslice_both_s_axis_rx_data_V_strb_V_U_vld_out,
        ack_out => s_axis_rx_data_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_rx_data_V_strb_V_U_apdone_blk);

    regslice_both_s_axis_rx_data_V_last_V_U : component dhcp_client_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_rx_data_TLAST,
        vld_in => s_axis_rx_data_TVALID,
        ack_in => regslice_both_s_axis_rx_data_V_last_V_U_ack_in,
        data_out => s_axis_rx_data_TLAST_int_regslice,
        vld_out => regslice_both_s_axis_rx_data_V_last_V_U_vld_out,
        ack_out => s_axis_rx_data_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_rx_data_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    rm_correctMac_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_222)) then
                if ((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0)) then 
                    rm_correctMac <= ap_const_lv1_1;
                elsif ((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_3)) then 
                    rm_correctMac <= and_ln93_fu_347_p2;
                elsif ((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_4)) then 
                    rm_correctMac <= and_ln93_1_fu_324_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_last_V_fu_255_p1 = ap_const_lv1_1))) then
                and_ln121_1_reg_499 <= and_ln121_1_fu_444_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_2))) then
                meta_assignedIpAddress_V <= trunc_ln674_3_fu_360_p1;
                meta_serverAddress_V <= s_axis_rx_data_TDATA_int_regslice(63 downto 32);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0))) then
                meta_identifier_V <= s_axis_rx_data_TDATA_int_regslice(63 downto 32);
                rm_isReply <= icmp_ln1065_fu_406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (icmp_ln1065_2_fu_380_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1E))) then
                meta_type_V_1 <= s_axis_rx_data_TDATA_int_regslice(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1D))) then
                rm_isDHCP <= icmp_ln1065_3_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                rm_wordCount_V <= ap_phi_mux_rm_wordCount_V_new_0_i_i_phi_fu_234_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_last_V_reg_489 <= s_axis_rx_data_TLAST_int_regslice;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_485 <= tmp_nbreadreq_fu_126_p6;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln886_fu_431_p2 <= std_logic_vector(unsigned(rm_wordCount_V) + unsigned(ap_const_lv6_1));
    and_ln121_1_fu_444_p2 <= (ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_176_p14 and and_ln121_fu_438_p2);
    and_ln121_fu_438_p2 <= (ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_215_p14 and ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14);
    and_ln93_1_fu_324_p2 <= (rm_correctMac and icmp_ln1065_5_fu_318_p2);
    and_ln93_fu_347_p2 <= (rm_correctMac and icmp_ln1065_4_fu_341_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, myMacAddress_c_full_n, tmp_nbreadreq_fu_126_p6, tmp_11_i_i_nbreadreq_fu_152_p3, ap_done_reg, dhcp_replyMetaFifo_full_n, ap_predicate_op79_write_state2, s_axis_rx_metadata_TVALID_int_regslice, s_axis_rx_data_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op79_write_state2 = ap_const_boolean_1) and (dhcp_replyMetaFifo_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or (myMacAddress_c_full_n = ap_const_logic_0) or ((tmp_11_i_i_nbreadreq_fu_152_p3 = ap_const_lv1_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (s_axis_rx_data_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, myMacAddress_c_full_n, tmp_nbreadreq_fu_126_p6, tmp_11_i_i_nbreadreq_fu_152_p3, ap_done_reg, dhcp_replyMetaFifo_full_n, ap_predicate_op79_write_state2, s_axis_rx_metadata_TVALID_int_regslice, s_axis_rx_data_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op79_write_state2 = ap_const_boolean_1) and (dhcp_replyMetaFifo_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or (myMacAddress_c_full_n = ap_const_logic_0) or ((tmp_11_i_i_nbreadreq_fu_152_p3 = ap_const_lv1_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (s_axis_rx_data_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, myMacAddress_c_full_n, tmp_nbreadreq_fu_126_p6, tmp_11_i_i_nbreadreq_fu_152_p3, ap_done_reg, dhcp_replyMetaFifo_full_n, ap_predicate_op79_write_state2, s_axis_rx_metadata_TVALID_int_regslice, s_axis_rx_data_TVALID_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op79_write_state2 = ap_const_boolean_1) and (dhcp_replyMetaFifo_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or (myMacAddress_c_full_n = ap_const_logic_0) or ((tmp_11_i_i_nbreadreq_fu_152_p3 = ap_const_lv1_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (s_axis_rx_data_TVALID_int_regslice = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(myMacAddress_c_full_n, tmp_nbreadreq_fu_126_p6, tmp_11_i_i_nbreadreq_fu_152_p3, ap_done_reg, s_axis_rx_metadata_TVALID_int_regslice, s_axis_rx_data_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or (myMacAddress_c_full_n = ap_const_logic_0) or ((tmp_11_i_i_nbreadreq_fu_152_p3 = ap_const_lv1_1) and (s_axis_rx_metadata_TVALID_int_regslice = ap_const_logic_0)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (s_axis_rx_data_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(dhcp_replyMetaFifo_full_n, ap_predicate_op79_write_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op79_write_state2 = ap_const_boolean_1) and (dhcp_replyMetaFifo_full_n = ap_const_logic_0));
    end process;


    ap_condition_222_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_126_p6, ap_block_pp0_stage0_11001)
    begin
                ap_condition_222 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14_assign_proc : process(tmp_nbreadreq_fu_126_p6, rm_correctMac, rm_wordCount_V_load_load_fu_259_p1, ap_phi_reg_pp0_iter0_rm_correctMac_loc_0_i_i_reg_192, and_ln93_1_fu_324_p2, and_ln93_fu_347_p2)
    begin
        if (((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0))) then 
            ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14 <= ap_const_lv1_1;
        elsif (((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_3))) then 
            ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14 <= and_ln93_fu_347_p2;
        elsif (((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_4))) then 
            ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14 <= and_ln93_1_fu_324_p2;
        elsif ((((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1D)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_2)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1E)) or (not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1D)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_4)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_3)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_2)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1E)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0)) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1)))) then 
            ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14 <= rm_correctMac;
        else 
            ap_phi_mux_rm_correctMac_loc_0_i_i_phi_fu_195_p14 <= ap_phi_reg_pp0_iter0_rm_correctMac_loc_0_i_i_reg_192;
        end if; 
    end process;


    ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_215_p14_assign_proc : process(tmp_nbreadreq_fu_126_p6, rm_isDHCP, rm_wordCount_V_load_load_fu_259_p1, ap_phi_reg_pp0_iter0_rm_isDHCP_loc_0_i_i_reg_212, icmp_ln1065_3_fu_291_p2)
    begin
        if (((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1D))) then 
            ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_215_p14 <= icmp_ln1065_3_fu_291_p2;
        elsif ((((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_4)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_3)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_2)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1E)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0)) or (not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1D)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_4)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_3)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_2)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1E)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0)) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1)))) then 
            ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_215_p14 <= rm_isDHCP;
        else 
            ap_phi_mux_rm_isDHCP_loc_0_i_i_phi_fu_215_p14 <= ap_phi_reg_pp0_iter0_rm_isDHCP_loc_0_i_i_reg_212;
        end if; 
    end process;


    ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_176_p14_assign_proc : process(tmp_nbreadreq_fu_126_p6, rm_isReply, ap_phi_reg_pp0_iter0_rm_isReply_loc_0_i_i_reg_173, rm_wordCount_V_load_load_fu_259_p1, icmp_ln1065_fu_406_p2)
    begin
        if (((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0))) then 
            ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_176_p14 <= icmp_ln1065_fu_406_p2;
        elsif ((((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1D)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_4)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_3)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_2)) or ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1E)) or (not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1D)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_4)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_3)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_2)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_1E)) and not((rm_wordCount_V_load_load_fu_259_p1 = ap_const_lv6_0)) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1)))) then 
            ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_176_p14 <= rm_isReply;
        else 
            ap_phi_mux_rm_isReply_loc_0_i_i_phi_fu_176_p14 <= ap_phi_reg_pp0_iter0_rm_isReply_loc_0_i_i_reg_173;
        end if; 
    end process;


    ap_phi_mux_rm_wordCount_V_new_0_i_i_phi_fu_234_p4_assign_proc : process(tmp_nbreadreq_fu_126_p6, tmp_last_V_fu_255_p1, ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_i_i_reg_231, add_ln886_fu_431_p2)
    begin
        if ((tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1)) then
            if ((tmp_last_V_fu_255_p1 = ap_const_lv1_0)) then 
                ap_phi_mux_rm_wordCount_V_new_0_i_i_phi_fu_234_p4 <= add_ln886_fu_431_p2;
            elsif ((tmp_last_V_fu_255_p1 = ap_const_lv1_1)) then 
                ap_phi_mux_rm_wordCount_V_new_0_i_i_phi_fu_234_p4 <= ap_const_lv6_0;
            else 
                ap_phi_mux_rm_wordCount_V_new_0_i_i_phi_fu_234_p4 <= ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_i_i_reg_231;
            end if;
        else 
            ap_phi_mux_rm_wordCount_V_new_0_i_i_phi_fu_234_p4 <= ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_i_i_reg_231;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_rm_correctMac_loc_0_i_i_reg_192 <= "X";
    ap_phi_reg_pp0_iter0_rm_isDHCP_loc_0_i_i_reg_212 <= "X";
    ap_phi_reg_pp0_iter0_rm_isReply_loc_0_i_i_reg_173 <= "X";
    ap_phi_reg_pp0_iter0_rm_wordCount_V_new_0_i_i_reg_231 <= "XXXXXX";

    ap_predicate_op79_write_state2_assign_proc : process(tmp_reg_485, tmp_last_V_reg_489, and_ln121_1_reg_499)
    begin
                ap_predicate_op79_write_state2 <= ((tmp_last_V_reg_489 = ap_const_lv1_1) and (tmp_reg_485 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln121_1_reg_499));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    dhcp_replyMetaFifo_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, dhcp_replyMetaFifo_full_n, ap_predicate_op79_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op79_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dhcp_replyMetaFifo_blk_n <= dhcp_replyMetaFifo_full_n;
        else 
            dhcp_replyMetaFifo_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    dhcp_replyMetaFifo_din <= (((meta_type_V_1 & meta_serverAddress_V) & meta_assignedIpAddress_V) & meta_identifier_V);

    dhcp_replyMetaFifo_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op79_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op79_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            dhcp_replyMetaFifo_write <= ap_const_logic_1;
        else 
            dhcp_replyMetaFifo_write <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_241_p4 <= s_axis_rx_data_TDATA_int_regslice(63 downto 32);
    icmp_ln1065_2_fu_380_p2 <= "1" when (trunc_ln674_2_fu_376_p1 = ap_const_lv16_135) else "0";
    icmp_ln1065_3_fu_291_p2 <= "1" when (grp_fu_241_p4 = ap_const_lv32_63538263) else "0";
    icmp_ln1065_4_fu_341_p2 <= "1" when (trunc_ln674_4_fu_337_p1 = grp_fu_241_p4) else "0";
    icmp_ln1065_5_fu_318_p2 <= "1" when (tmp_8_i_i9_fu_304_p4 = trunc_ln674_5_fu_314_p1) else "0";
    icmp_ln1065_fu_406_p2 <= "1" when (trunc_ln674_fu_402_p1 = ap_const_lv8_2) else "0";

    myMacAddress_c_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, myMacAddress_c_full_n, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            myMacAddress_c_blk_n <= myMacAddress_c_full_n;
        else 
            myMacAddress_c_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    myMacAddress_c_din <= myMacAddress;

    myMacAddress_c_write_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            myMacAddress_c_write <= ap_const_logic_1;
        else 
            myMacAddress_c_write <= ap_const_logic_0;
        end if; 
    end process;

    rm_wordCount_V_load_load_fu_259_p1 <= rm_wordCount_V;

    s_axis_rx_data_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_126_p6, ap_done_reg, ap_block_pp0_stage0, s_axis_rx_data_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_rx_data_TDATA_blk_n <= s_axis_rx_data_TVALID_int_regslice;
        else 
            s_axis_rx_data_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_rx_data_TREADY <= regslice_both_s_axis_rx_data_V_data_V_U_ack_in;

    s_axis_rx_data_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_126_p6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_126_p6 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_rx_data_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_rx_data_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    s_axis_rx_metadata_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_11_i_i_nbreadreq_fu_152_p3, ap_done_reg, ap_block_pp0_stage0, s_axis_rx_metadata_TVALID_int_regslice)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (tmp_11_i_i_nbreadreq_fu_152_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_rx_metadata_TDATA_blk_n <= s_axis_rx_metadata_TVALID_int_regslice;
        else 
            s_axis_rx_metadata_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_rx_metadata_TREADY <= regslice_both_s_axis_rx_metadata_U_ack_in;

    s_axis_rx_metadata_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_11_i_i_nbreadreq_fu_152_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_11_i_i_nbreadreq_fu_152_p3 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            s_axis_rx_metadata_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_rx_metadata_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_11_i_i_nbreadreq_fu_152_p3 <= (0=>(s_axis_rx_metadata_TVALID_int_regslice), others=>'-');
    tmp_8_i_i9_fu_304_p4 <= myMacAddress(47 downto 32);
    tmp_last_V_fu_255_p1 <= s_axis_rx_data_TLAST_int_regslice;
    tmp_nbreadreq_fu_126_p6 <= (0=>(s_axis_rx_data_TVALID_int_regslice), others=>'-');
    trunc_ln674_2_fu_376_p1 <= s_axis_rx_data_TDATA_int_regslice(16 - 1 downto 0);
    trunc_ln674_3_fu_360_p1 <= s_axis_rx_data_TDATA_int_regslice(32 - 1 downto 0);
    trunc_ln674_4_fu_337_p1 <= myMacAddress(32 - 1 downto 0);
    trunc_ln674_5_fu_314_p1 <= s_axis_rx_data_TDATA_int_regslice(16 - 1 downto 0);
    trunc_ln674_fu_402_p1 <= s_axis_rx_data_TDATA_int_regslice(8 - 1 downto 0);
end behav;
