// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dhcp_client_send_message (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        dhcp_requestMetaFifo_dout,
        dhcp_requestMetaFifo_num_data_valid,
        dhcp_requestMetaFifo_fifo_cap,
        dhcp_requestMetaFifo_empty_n,
        dhcp_requestMetaFifo_read,
        myMacAddress_dout,
        myMacAddress_num_data_valid,
        myMacAddress_fifo_cap,
        myMacAddress_empty_n,
        myMacAddress_read,
        m_axis_tx_data_TREADY,
        m_axis_tx_metadata_TREADY,
        m_axis_tx_length_TREADY,
        m_axis_tx_metadata_TDATA,
        m_axis_tx_metadata_TVALID,
        m_axis_tx_length_TDATA,
        m_axis_tx_length_TVALID,
        m_axis_tx_data_TDATA,
        m_axis_tx_data_TVALID,
        m_axis_tx_data_TKEEP,
        m_axis_tx_data_TSTRB,
        m_axis_tx_data_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [71:0] dhcp_requestMetaFifo_dout;
input  [2:0] dhcp_requestMetaFifo_num_data_valid;
input  [2:0] dhcp_requestMetaFifo_fifo_cap;
input   dhcp_requestMetaFifo_empty_n;
output   dhcp_requestMetaFifo_read;
input  [47:0] myMacAddress_dout;
input  [2:0] myMacAddress_num_data_valid;
input  [2:0] myMacAddress_fifo_cap;
input   myMacAddress_empty_n;
output   myMacAddress_read;
input   m_axis_tx_data_TREADY;
input   m_axis_tx_metadata_TREADY;
input   m_axis_tx_length_TREADY;
output  [95:0] m_axis_tx_metadata_TDATA;
output   m_axis_tx_metadata_TVALID;
output  [15:0] m_axis_tx_length_TDATA;
output   m_axis_tx_length_TVALID;
output  [63:0] m_axis_tx_data_TDATA;
output   m_axis_tx_data_TVALID;
output  [7:0] m_axis_tx_data_TKEEP;
output  [7:0] m_axis_tx_data_TSTRB;
output  [0:0] m_axis_tx_data_TLAST;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg dhcp_requestMetaFifo_read;
reg myMacAddress_read;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [5:0] sm_wordCount_V_load_load_fu_206_p1;
wire   [0:0] tmp_i_i_nbreadreq_fu_146_p3;
reg    ap_predicate_op28_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [5:0] sm_wordCount_V_load_reg_414;
reg   [0:0] tmp_i_i_reg_434;
reg    ap_predicate_op66_write_state2;
reg    ap_predicate_op67_write_state2;
reg    ap_predicate_op68_write_state2;
reg    ap_predicate_op69_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state2_io;
reg   [5:0] sm_wordCount_V_load_reg_414_pp0_iter1_reg;
reg   [0:0] tmp_i_i_reg_434_pp0_iter1_reg;
reg    ap_predicate_op77_write_state3;
reg    ap_predicate_op78_write_state3;
reg    ap_predicate_op79_write_state3;
reg    ap_predicate_op81_write_state3;
wire    regslice_both_m_axis_tx_metadata_U_apdone_blk;
wire    regslice_both_m_axis_tx_length_U_apdone_blk;
wire    regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage0_subdone;
reg   [5:0] sm_wordCount_V;
reg   [7:0] meta_type_V;
reg   [31:0] meta_requestedIpAddress_V;
reg    m_axis_tx_metadata_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    m_axis_tx_length_TDATA_blk_n;
reg    m_axis_tx_data_TDATA_blk_n;
reg    myMacAddress_blk_n;
reg    dhcp_requestMetaFifo_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] meta_type_V_load_reg_418;
wire   [7:0] sendWord_data_V_5_fu_240_p3;
reg   [7:0] sendWord_data_V_5_reg_424;
wire   [23:0] trunc_ln674_1_fu_254_p1;
reg   [23:0] trunc_ln674_1_reg_429;
wire   [31:0] trunc_ln145_fu_288_p1;
reg   [31:0] trunc_ln145_reg_438;
wire   [63:0] zext_ln143_fu_342_p1;
wire   [63:0] sendWord_data_V_fu_361_p3;
wire   [63:0] zext_ln391_fu_388_p1;
wire   [63:0] p_Result_1_fu_397_p3;
wire   [63:0] p_Result_s_fu_406_p3;
wire   [5:0] add_ln886_fu_330_p2;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln1065_1_fu_224_p2;
wire   [7:0] p_Result_4_fu_230_p4;
wire   [0:0] icmp_ln1065_fu_346_p2;
wire   [63:0] p_Result_3_fu_351_p5;
wire   [15:0] tmp_2_i_i_fu_370_p4;
wire   [16:0] p_Result_2_fu_380_p3;
wire   [31:0] trunc_ln674_fu_393_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    m_axis_tx_metadata_TVALID_int_regslice;
wire    m_axis_tx_metadata_TREADY_int_regslice;
wire    regslice_both_m_axis_tx_metadata_U_vld_out;
reg    m_axis_tx_length_TVALID_int_regslice;
wire    m_axis_tx_length_TREADY_int_regslice;
wire    regslice_both_m_axis_tx_length_U_vld_out;
reg   [63:0] m_axis_tx_data_TDATA_int_regslice;
reg    m_axis_tx_data_TVALID_int_regslice;
wire    m_axis_tx_data_TREADY_int_regslice;
wire    regslice_both_m_axis_tx_data_V_data_V_U_vld_out;
wire    regslice_both_m_axis_tx_data_V_keep_V_U_apdone_blk;
reg   [7:0] m_axis_tx_data_TKEEP_int_regslice;
wire    regslice_both_m_axis_tx_data_V_keep_V_U_ack_in_dummy;
wire    regslice_both_m_axis_tx_data_V_keep_V_U_vld_out;
wire    regslice_both_m_axis_tx_data_V_strb_V_U_apdone_blk;
wire    regslice_both_m_axis_tx_data_V_strb_V_U_ack_in_dummy;
wire    regslice_both_m_axis_tx_data_V_strb_V_U_vld_out;
wire    regslice_both_m_axis_tx_data_V_last_V_U_apdone_blk;
reg   [0:0] m_axis_tx_data_TLAST_int_regslice;
wire    regslice_both_m_axis_tx_data_V_last_V_U_ack_in_dummy;
wire    regslice_both_m_axis_tx_data_V_last_V_U_vld_out;
reg    ap_condition_366;
reg    ap_condition_338;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 sm_wordCount_V = 6'd0;
#0 meta_type_V = 8'd0;
#0 meta_requestedIpAddress_V = 32'd0;
end

dhcp_client_regslice_both #(
    .DataWidth( 96 ))
regslice_both_m_axis_tx_metadata_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(96'd79228162495836452343274012740),
    .vld_in(m_axis_tx_metadata_TVALID_int_regslice),
    .ack_in(m_axis_tx_metadata_TREADY_int_regslice),
    .data_out(m_axis_tx_metadata_TDATA),
    .vld_out(regslice_both_m_axis_tx_metadata_U_vld_out),
    .ack_out(m_axis_tx_metadata_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_metadata_U_apdone_blk)
);

dhcp_client_regslice_both #(
    .DataWidth( 16 ))
regslice_both_m_axis_tx_length_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(16'd300),
    .vld_in(m_axis_tx_length_TVALID_int_regslice),
    .ack_in(m_axis_tx_length_TREADY_int_regslice),
    .data_out(m_axis_tx_length_TDATA),
    .vld_out(regslice_both_m_axis_tx_length_U_vld_out),
    .ack_out(m_axis_tx_length_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_length_U_apdone_blk)
);

dhcp_client_regslice_both #(
    .DataWidth( 64 ))
regslice_both_m_axis_tx_data_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_tx_data_TDATA_int_regslice),
    .vld_in(m_axis_tx_data_TVALID_int_regslice),
    .ack_in(m_axis_tx_data_TREADY_int_regslice),
    .data_out(m_axis_tx_data_TDATA),
    .vld_out(regslice_both_m_axis_tx_data_V_data_V_U_vld_out),
    .ack_out(m_axis_tx_data_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk)
);

dhcp_client_regslice_both #(
    .DataWidth( 8 ))
regslice_both_m_axis_tx_data_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_tx_data_TKEEP_int_regslice),
    .vld_in(m_axis_tx_data_TVALID_int_regslice),
    .ack_in(regslice_both_m_axis_tx_data_V_keep_V_U_ack_in_dummy),
    .data_out(m_axis_tx_data_TKEEP),
    .vld_out(regslice_both_m_axis_tx_data_V_keep_V_U_vld_out),
    .ack_out(m_axis_tx_data_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_keep_V_U_apdone_blk)
);

dhcp_client_regslice_both #(
    .DataWidth( 8 ))
regslice_both_m_axis_tx_data_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(8'd0),
    .vld_in(m_axis_tx_data_TVALID_int_regslice),
    .ack_in(regslice_both_m_axis_tx_data_V_strb_V_U_ack_in_dummy),
    .data_out(m_axis_tx_data_TSTRB),
    .vld_out(regslice_both_m_axis_tx_data_V_strb_V_U_vld_out),
    .ack_out(m_axis_tx_data_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_strb_V_U_apdone_blk)
);

dhcp_client_regslice_both #(
    .DataWidth( 1 ))
regslice_both_m_axis_tx_data_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_tx_data_TLAST_int_regslice),
    .vld_in(m_axis_tx_data_TVALID_int_regslice),
    .ack_in(regslice_both_m_axis_tx_data_V_last_V_U_ack_in_dummy),
    .data_out(m_axis_tx_data_TLAST),
    .vld_out(regslice_both_m_axis_tx_data_V_last_V_U_vld_out),
    .ack_out(m_axis_tx_data_TREADY),
    .apdone_blk(regslice_both_m_axis_tx_data_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_338)) begin
        if ((1'b1 == ap_condition_366)) begin
            sm_wordCount_V <= add_ln886_fu_330_p2;
        end else if (((tmp_i_i_nbreadreq_fu_146_p3 == 1'd1) & (sm_wordCount_V == 6'd0))) begin
            sm_wordCount_V <= 6'd1;
        end else if ((sm_wordCount_V_load_load_fu_206_p1 == 6'd1)) begin
            sm_wordCount_V <= 6'd2;
        end else if ((sm_wordCount_V_load_load_fu_206_p1 == 6'd3)) begin
            sm_wordCount_V <= 6'd4;
        end else if ((sm_wordCount_V_load_load_fu_206_p1 == 6'd4)) begin
            sm_wordCount_V <= 6'd5;
        end else if ((sm_wordCount_V_load_load_fu_206_p1 == 6'd29)) begin
            sm_wordCount_V <= 6'd30;
        end else if ((sm_wordCount_V_load_load_fu_206_p1 == 6'd30)) begin
            sm_wordCount_V <= 6'd31;
        end else if ((sm_wordCount_V_load_load_fu_206_p1 == 6'd31)) begin
            sm_wordCount_V <= 6'd32;
        end else if ((sm_wordCount_V_load_load_fu_206_p1 == 6'd37)) begin
            sm_wordCount_V <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_nbreadreq_fu_146_p3 == 1'd1) & (sm_wordCount_V == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        meta_requestedIpAddress_V <= {{dhcp_requestMetaFifo_dout[71:40]}};
        meta_type_V <= {{dhcp_requestMetaFifo_dout[39:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        meta_type_V_load_reg_418 <= meta_type_V;
        sm_wordCount_V_load_reg_414 <= sm_wordCount_V;
        sm_wordCount_V_load_reg_414_pp0_iter1_reg <= sm_wordCount_V_load_reg_414;
        tmp_i_i_reg_434_pp0_iter1_reg <= tmp_i_i_reg_434;
    end
end

always @ (posedge ap_clk) begin
    if (((sm_wordCount_V_load_load_fu_206_p1 == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sendWord_data_V_5_reg_424 <= sendWord_data_V_5_fu_240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((sm_wordCount_V == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_i_i_reg_434 <= tmp_i_i_nbreadreq_fu_146_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_i_nbreadreq_fu_146_p3 == 1'd1) & (sm_wordCount_V == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln145_reg_438 <= trunc_ln145_fu_288_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((sm_wordCount_V_load_load_fu_206_p1 == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln674_1_reg_429 <= trunc_ln674_1_fu_254_p1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op28_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dhcp_requestMetaFifo_blk_n = dhcp_requestMetaFifo_empty_n;
    end else begin
        dhcp_requestMetaFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op28_read_state1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dhcp_requestMetaFifo_read = 1'b1;
    end else begin
        dhcp_requestMetaFifo_read = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op66_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd37) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op81_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op77_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd3)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd4)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd29)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd30)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd31)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd37)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1)))) begin
        m_axis_tx_data_TDATA_blk_n = m_axis_tx_data_TREADY_int_regslice;
    end else begin
        m_axis_tx_data_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op66_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TDATA_int_regslice = p_Result_s_fu_406_p3;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TDATA_int_regslice = 64'd8388608;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TDATA_int_regslice = p_Result_1_fu_397_p3;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TDATA_int_regslice = zext_ln391_fu_388_p1;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TDATA_int_regslice = 64'd7157207594535223296;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TDATA_int_regslice = sendWord_data_V_fu_361_p3;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd31) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TDATA_int_regslice = zext_ln143_fu_342_p1;
    end else if ((((sm_wordCount_V_load_reg_414 == 6'd37) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1)))) begin
        m_axis_tx_data_TDATA_int_regslice = 64'd0;
    end else begin
        m_axis_tx_data_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op66_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1)))) begin
        m_axis_tx_data_TKEEP_int_regslice = 8'd255;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd37) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TKEEP_int_regslice = 8'd15;
    end else begin
        m_axis_tx_data_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op66_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1)))) begin
        m_axis_tx_data_TLAST_int_regslice = 1'd0;
    end else if (((sm_wordCount_V_load_reg_414 == 6'd37) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axis_tx_data_TLAST_int_regslice = 1'd1;
    end else begin
        m_axis_tx_data_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op66_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((sm_wordCount_V_load_reg_414 == 6'd37) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op69_write_state2 == 1'b1)))) begin
        m_axis_tx_data_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_tx_data_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op79_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op68_write_state2 == 1'b1)))) begin
        m_axis_tx_length_TDATA_blk_n = m_axis_tx_length_TREADY_int_regslice;
    end else begin
        m_axis_tx_length_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op68_write_state2 == 1'b1))) begin
        m_axis_tx_length_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_tx_length_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_predicate_op78_write_state3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op67_write_state2 == 1'b1)))) begin
        m_axis_tx_metadata_TDATA_blk_n = m_axis_tx_metadata_TREADY_int_regslice;
    end else begin
        m_axis_tx_metadata_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op67_write_state2 == 1'b1))) begin
        m_axis_tx_metadata_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_tx_metadata_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        myMacAddress_blk_n = myMacAddress_empty_n;
    end else begin
        myMacAddress_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        myMacAddress_read = 1'b1;
    end else begin
        myMacAddress_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln886_fu_330_p2 = (sm_wordCount_V + 6'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op28_read_state1 == 1'b1) & (dhcp_requestMetaFifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_length_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_metadata_U_apdone_blk == 1'b1) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op81_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op77_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd3)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd4)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd29)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd30)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd31)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd37)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op79_write_state3 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((myMacAddress_empty_n == 1'b0) | ((ap_predicate_op66_write_state2 == 1'b1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd37) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state2 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op28_read_state1 == 1'b1) & (dhcp_requestMetaFifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_length_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_metadata_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op81_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op77_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd3)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd4)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd29)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd30)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd31)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd37)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op79_write_state3 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((myMacAddress_empty_n == 1'b0) | (1'b1 == ap_block_state2_io) | ((ap_predicate_op66_write_state2 == 1'b1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd37) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state2 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op28_read_state1 == 1'b1) & (dhcp_requestMetaFifo_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_length_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_metadata_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state3_io) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op81_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op77_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd3)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd4)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd29)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd30)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd31)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd37)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op79_write_state3 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((myMacAddress_empty_n == 1'b0) | (1'b1 == ap_block_state2_io) | ((ap_predicate_op66_write_state2 == 1'b1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd37) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state2 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state2 == 1'b1)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op28_read_state1 == 1'b1) & (dhcp_requestMetaFifo_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_io = (((ap_predicate_op66_write_state2 == 1'b1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd37) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state2 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((myMacAddress_empty_n == 1'b0) | ((ap_predicate_op66_write_state2 == 1'b1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd1) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd3) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd4) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd29) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd30) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd31) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((sm_wordCount_V_load_reg_414 == 6'd37) & (m_axis_tx_data_TREADY_int_regslice == 1'b0)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op69_write_state2 == 1'b1)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op68_write_state2 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op67_write_state2 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_io = (((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op81_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op77_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd3)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd4)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd29)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd30)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd31)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd37)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op79_write_state3 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((regslice_both_m_axis_tx_data_V_data_V_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_length_U_apdone_blk == 1'b1) | (regslice_both_m_axis_tx_metadata_U_apdone_blk == 1'b1) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op81_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (ap_predicate_op77_write_state3 == 1'b1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd1)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd3)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd4)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd29)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd30)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd31)) | ((m_axis_tx_data_TREADY_int_regslice == 1'b0) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd37)) | ((m_axis_tx_length_TREADY_int_regslice == 1'b0) & (ap_predicate_op79_write_state3 == 1'b1)) | ((m_axis_tx_metadata_TREADY_int_regslice == 1'b0) & (ap_predicate_op78_write_state3 == 1'b1)));
end

always @ (*) begin
    ap_condition_338 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_366 = (~(sm_wordCount_V == 6'd0) & ~(sm_wordCount_V_load_load_fu_206_p1 == 6'd1) & ~(sm_wordCount_V_load_load_fu_206_p1 == 6'd3) & ~(sm_wordCount_V_load_load_fu_206_p1 == 6'd4) & ~(sm_wordCount_V_load_load_fu_206_p1 == 6'd29) & ~(sm_wordCount_V_load_load_fu_206_p1 == 6'd37) & ~(sm_wordCount_V_load_load_fu_206_p1 == 6'd30) & ~(sm_wordCount_V_load_load_fu_206_p1 == 6'd31));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op28_read_state1 = ((tmp_i_i_nbreadreq_fu_146_p3 == 1'd1) & (sm_wordCount_V == 6'd0));
end

always @ (*) begin
    ap_predicate_op66_write_state2 = ((tmp_i_i_reg_434 == 1'd1) & (sm_wordCount_V_load_reg_414 == 6'd0));
end

always @ (*) begin
    ap_predicate_op67_write_state2 = ((tmp_i_i_reg_434 == 1'd1) & (sm_wordCount_V_load_reg_414 == 6'd0));
end

always @ (*) begin
    ap_predicate_op68_write_state2 = ((tmp_i_i_reg_434 == 1'd1) & (sm_wordCount_V_load_reg_414 == 6'd0));
end

always @ (*) begin
    ap_predicate_op69_write_state2 = (~(sm_wordCount_V_load_reg_414 == 6'd0) & ~(sm_wordCount_V_load_reg_414 == 6'd1) & ~(sm_wordCount_V_load_reg_414 == 6'd3) & ~(sm_wordCount_V_load_reg_414 == 6'd4) & ~(sm_wordCount_V_load_reg_414 == 6'd29) & ~(sm_wordCount_V_load_reg_414 == 6'd30) & ~(sm_wordCount_V_load_reg_414 == 6'd31) & ~(sm_wordCount_V_load_reg_414 == 6'd37));
end

always @ (*) begin
    ap_predicate_op77_write_state3 = ((tmp_i_i_reg_434_pp0_iter1_reg == 1'd1) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd0));
end

always @ (*) begin
    ap_predicate_op78_write_state3 = ((tmp_i_i_reg_434_pp0_iter1_reg == 1'd1) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd0));
end

always @ (*) begin
    ap_predicate_op79_write_state3 = ((tmp_i_i_reg_434_pp0_iter1_reg == 1'd1) & (sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd0));
end

always @ (*) begin
    ap_predicate_op81_write_state3 = (~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd0) & ~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd1) & ~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd3) & ~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd4) & ~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd29) & ~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd30) & ~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd31) & ~(sm_wordCount_V_load_reg_414_pp0_iter1_reg == 6'd37));
end

assign icmp_ln1065_1_fu_224_p2 = ((meta_type_V == 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_346_p2 = ((meta_type_V_load_reg_418 == 8'd1) ? 1'b1 : 1'b0);

assign m_axis_tx_data_TVALID = regslice_both_m_axis_tx_data_V_data_V_U_vld_out;

assign m_axis_tx_length_TVALID = regslice_both_m_axis_tx_length_U_vld_out;

assign m_axis_tx_metadata_TVALID = regslice_both_m_axis_tx_metadata_U_vld_out;

assign p_Result_1_fu_397_p3 = {{trunc_ln674_fu_393_p1}, {32'd0}};

assign p_Result_2_fu_380_p3 = {{1'd0}, {tmp_2_i_i_fu_370_p4}};

assign p_Result_3_fu_351_p5 = {{{{trunc_ln674_1_reg_429}, {16'd1074}}, {meta_type_V_load_reg_418}}, {16'd309}};

assign p_Result_4_fu_230_p4 = {{meta_requestedIpAddress_V[31:24]}};

assign p_Result_s_fu_406_p3 = {{trunc_ln145_reg_438}, {32'd393473}};

assign sendWord_data_V_5_fu_240_p3 = ((icmp_ln1065_1_fu_224_p2[0:0] == 1'b1) ? p_Result_4_fu_230_p4 : 8'd0);

assign sendWord_data_V_fu_361_p3 = ((icmp_ln1065_fu_346_p2[0:0] == 1'b1) ? 64'd4278255925 : p_Result_3_fu_351_p5);

assign sm_wordCount_V_load_load_fu_206_p1 = sm_wordCount_V;

assign tmp_2_i_i_fu_370_p4 = {{myMacAddress_dout[47:32]}};

assign tmp_i_i_nbreadreq_fu_146_p3 = dhcp_requestMetaFifo_empty_n;

assign trunc_ln145_fu_288_p1 = dhcp_requestMetaFifo_dout[31:0];

assign trunc_ln674_1_fu_254_p1 = meta_requestedIpAddress_V[23:0];

assign trunc_ln674_fu_393_p1 = myMacAddress_dout[31:0];

assign zext_ln143_fu_342_p1 = sendWord_data_V_5_reg_424;

assign zext_ln391_fu_388_p1 = p_Result_2_fu_380_p3;

endmodule //dhcp_client_send_message
