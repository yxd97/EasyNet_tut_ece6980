-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity toe_top_close_timer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rxEng2timer_setCloseTimer_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    rxEng2timer_setCloseTimer_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    rxEng2timer_setCloseTimer_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    rxEng2timer_setCloseTimer_empty_n : IN STD_LOGIC;
    rxEng2timer_setCloseTimer_read : OUT STD_LOGIC;
    closeTimer2stateTable_releaseState_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    closeTimer2stateTable_releaseState_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    closeTimer2stateTable_releaseState_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    closeTimer2stateTable_releaseState_full_n : IN STD_LOGIC;
    closeTimer2stateTable_releaseState_write : OUT STD_LOGIC );
end;


architecture behav of toe_top_close_timer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv33_1008F0D19 : STD_LOGIC_VECTOR (32 downto 0) := "100000000100011110000110100011001";
    constant ap_const_lv33_0 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv16_3E8 : STD_LOGIC_VECTOR (15 downto 0) := "0000001111101000";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_i_nbreadreq_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op30_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ct_waitForWrite_load_reg_240 : STD_LOGIC_VECTOR (0 downto 0);
    signal ct_waitForWrite_load_reg_240_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_244 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_244_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_262 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1081_reg_271 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op57_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ct_waitForWrite : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal ct_setSessionID_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ct_prevSessionID_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal closeTimerTable_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal closeTimerTable_ce0 : STD_LOGIC;
    signal closeTimerTable_we0 : STD_LOGIC;
    signal closeTimerTable_d0 : STD_LOGIC_VECTOR (32 downto 0);
    signal closeTimerTable_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal closeTimerTable_ce1 : STD_LOGIC;
    signal closeTimerTable_we1 : STD_LOGIC;
    signal closeTimerTable_q1 : STD_LOGIC_VECTOR (32 downto 0);
    signal ct_currSessionID_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal rxEng2timer_setCloseTimer_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal closeTimer2stateTable_releaseState_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ct_currSessionID_V_load_reg_248 : STD_LOGIC_VECTOR (15 downto 0);
    signal ct_currSessionID_V_load_reg_248_pp0_iter1_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal closeTimerTable_addr_1_reg_253 : STD_LOGIC_VECTOR (9 downto 0);
    signal closeTimerTable_addr_1_reg_253_pp0_iter1_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_208_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln1081_fu_216_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln1081_reg_266 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1081_fu_220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln587_17_fu_136_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln587_fu_185_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln1069_fu_179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln887_fu_196_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln93_fu_153_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal or_ln_i_fu_231_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln886_fu_141_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1065_fu_147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln887_2_fu_226_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op39_store_state1 : BOOLEAN;
    signal ap_enable_operation_39 : BOOLEAN;
    signal ap_enable_state1_pp0_iter0_stage0 : BOOLEAN;
    signal ap_predicate_op24_load_state1 : BOOLEAN;
    signal ap_enable_operation_24 : BOOLEAN;
    signal ap_predicate_op45_load_state2 : BOOLEAN;
    signal ap_enable_operation_45 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op54_store_state3 : BOOLEAN;
    signal ap_enable_operation_54 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_predicate_op56_store_state3 : BOOLEAN;
    signal ap_enable_operation_56 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_116 : BOOLEAN;
    signal ap_condition_293 : BOOLEAN;
    signal ap_condition_160 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component toe_top_probe_timer_probeTimerTable_RAM_T2P_BRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (32 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (32 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (32 downto 0) );
    end component;



begin
    closeTimerTable_U : component toe_top_probe_timer_probeTimerTable_RAM_T2P_BRAM_1R1W
    generic map (
        DataWidth => 33,
        AddressRange => 1000,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => closeTimerTable_address0,
        ce0 => closeTimerTable_ce0,
        we0 => closeTimerTable_we0,
        d0 => closeTimerTable_d0,
        address1 => closeTimerTable_address1,
        ce1 => closeTimerTable_ce1,
        we1 => closeTimerTable_we1,
        d1 => ap_const_lv33_1008F0D19,
        q1 => closeTimerTable_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ct_prevSessionID_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_160)) then
                if ((ct_waitForWrite = ap_const_lv1_1)) then 
                    ct_prevSessionID_V <= add_ln887_fu_196_p2;
                elsif (((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_0) and (ct_waitForWrite = ap_const_lv1_0))) then 
                    ct_prevSessionID_V <= ct_currSessionID_V;
                end if;
            end if; 
        end if;
    end process;

    ct_waitForWrite_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_160)) then
                if (((ct_waitForWrite = ap_const_lv1_1) and (icmp_ln1069_fu_179_p2 = ap_const_lv1_0))) then 
                    ct_waitForWrite <= ap_const_lv1_0;
                elsif (((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (ct_waitForWrite = ap_const_lv1_0))) then 
                    ct_waitForWrite <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_0) and (ct_waitForWrite = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                closeTimerTable_addr_1_reg_253 <= zext_ln587_17_fu_136_p1(10 - 1 downto 0);
                ct_currSessionID_V_load_reg_248 <= ct_currSessionID_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                closeTimerTable_addr_1_reg_253_pp0_iter1_reg <= closeTimerTable_addr_1_reg_253;
                ct_currSessionID_V_load_reg_248_pp0_iter1_reg <= ct_currSessionID_V_load_reg_248;
                ct_waitForWrite_load_reg_240 <= ct_waitForWrite;
                ct_waitForWrite_load_reg_240_pp0_iter1_reg <= ct_waitForWrite_load_reg_240;
                tmp_i_reg_244_pp0_iter1_reg <= tmp_i_reg_244;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_0) and (ct_waitForWrite = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ct_currSessionID_V <= select_ln93_fu_153_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (ct_waitForWrite = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ct_setSessionID_V <= rxEng2timer_setCloseTimer_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_reg_244 = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_fu_208_p3 = ap_const_lv1_1))) then
                icmp_ln1081_reg_271 <= icmp_ln1081_fu_220_p2;
                trunc_ln1081_reg_266 <= trunc_ln1081_fu_216_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ct_waitForWrite = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_i_reg_244 <= tmp_i_nbreadreq_fu_66_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_reg_244 = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_reg_262 <= closeTimerTable_q1(32 downto 32);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln886_fu_141_p2 <= std_logic_vector(unsigned(ct_currSessionID_V) + unsigned(ap_const_lv16_1));
    add_ln887_2_fu_226_p2 <= std_logic_vector(unsigned(trunc_ln1081_reg_266) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln887_fu_196_p2 <= std_logic_vector(unsigned(ct_prevSessionID_V) + unsigned(ap_const_lv16_FFFF));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter2, rxEng2timer_setCloseTimer_empty_n, ap_predicate_op30_read_state1, ap_done_reg, closeTimer2stateTable_releaseState_full_n, ap_predicate_op57_write_state3)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (closeTimer2stateTable_releaseState_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (rxEng2timer_setCloseTimer_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter2, rxEng2timer_setCloseTimer_empty_n, ap_predicate_op30_read_state1, ap_done_reg, closeTimer2stateTable_releaseState_full_n, ap_predicate_op57_write_state3)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (closeTimer2stateTable_releaseState_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (rxEng2timer_setCloseTimer_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter2, rxEng2timer_setCloseTimer_empty_n, ap_predicate_op30_read_state1, ap_done_reg, closeTimer2stateTable_releaseState_full_n, ap_predicate_op57_write_state3)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (closeTimer2stateTable_releaseState_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (rxEng2timer_setCloseTimer_empty_n = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(rxEng2timer_setCloseTimer_empty_n, ap_predicate_op30_read_state1, ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op30_read_state1 = ap_const_boolean_1) and (rxEng2timer_setCloseTimer_empty_n = ap_const_logic_0)));
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter2_assign_proc : process(closeTimer2stateTable_releaseState_full_n, ap_predicate_op57_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op57_write_state3 = ap_const_boolean_1) and (closeTimer2stateTable_releaseState_full_n = ap_const_logic_0));
    end process;


    ap_condition_116_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
                ap_condition_116 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_160_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_160 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_293_assign_proc : process(ap_enable_reg_pp0_iter2, ct_waitForWrite_load_reg_240_pp0_iter1_reg, tmp_i_reg_244_pp0_iter1_reg, tmp_reg_262, ap_block_pp0_stage0)
    begin
                ap_condition_293 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_24_assign_proc : process(ap_predicate_op24_load_state1)
    begin
                ap_enable_operation_24 <= (ap_predicate_op24_load_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_39_assign_proc : process(ap_predicate_op39_store_state1)
    begin
                ap_enable_operation_39 <= (ap_predicate_op39_store_state1 = ap_const_boolean_1);
    end process;


    ap_enable_operation_45_assign_proc : process(ap_predicate_op45_load_state2)
    begin
                ap_enable_operation_45 <= (ap_predicate_op45_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_54_assign_proc : process(ap_predicate_op54_store_state3)
    begin
                ap_enable_operation_54 <= (ap_predicate_op54_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_56_assign_proc : process(ap_predicate_op56_store_state3)
    begin
                ap_enable_operation_56 <= (ap_predicate_op56_store_state3 = ap_const_boolean_1);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_enable_state1_pp0_iter0_stage0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0)
    begin
                ap_enable_state1_pp0_iter0_stage0 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op24_load_state1_assign_proc : process(tmp_i_nbreadreq_fu_66_p3, ct_waitForWrite)
    begin
                ap_predicate_op24_load_state1 <= ((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_0) and (ct_waitForWrite = ap_const_lv1_0));
    end process;


    ap_predicate_op30_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_66_p3, ct_waitForWrite)
    begin
                ap_predicate_op30_read_state1 <= ((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (ct_waitForWrite = ap_const_lv1_0));
    end process;


    ap_predicate_op39_store_state1_assign_proc : process(ct_waitForWrite, icmp_ln1069_fu_179_p2)
    begin
                ap_predicate_op39_store_state1 <= ((ct_waitForWrite = ap_const_lv1_1) and (icmp_ln1069_fu_179_p2 = ap_const_lv1_0));
    end process;


    ap_predicate_op45_load_state2_assign_proc : process(ct_waitForWrite_load_reg_240, tmp_i_reg_244)
    begin
                ap_predicate_op45_load_state2 <= ((tmp_i_reg_244 = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240 = ap_const_lv1_0));
    end process;


    ap_predicate_op54_store_state3_assign_proc : process(ct_waitForWrite_load_reg_240_pp0_iter1_reg, tmp_i_reg_244_pp0_iter1_reg, tmp_reg_262, icmp_ln1081_reg_271)
    begin
                ap_predicate_op54_store_state3 <= ((icmp_ln1081_reg_271 = ap_const_lv1_0) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op56_store_state3_assign_proc : process(ct_waitForWrite_load_reg_240_pp0_iter1_reg, tmp_i_reg_244_pp0_iter1_reg, tmp_reg_262, icmp_ln1081_reg_271)
    begin
                ap_predicate_op56_store_state3 <= ((icmp_ln1081_reg_271 = ap_const_lv1_1) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op57_write_state3_assign_proc : process(ct_waitForWrite_load_reg_240_pp0_iter1_reg, tmp_i_reg_244_pp0_iter1_reg, tmp_reg_262, icmp_ln1081_reg_271)
    begin
                ap_predicate_op57_write_state3 <= ((icmp_ln1081_reg_271 = ap_const_lv1_1) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    closeTimer2stateTable_releaseState_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, closeTimer2stateTable_releaseState_full_n, ap_predicate_op57_write_state3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op57_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            closeTimer2stateTable_releaseState_blk_n <= closeTimer2stateTable_releaseState_full_n;
        else 
            closeTimer2stateTable_releaseState_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    closeTimer2stateTable_releaseState_din <= ct_currSessionID_V_load_reg_248_pp0_iter1_reg;

    closeTimer2stateTable_releaseState_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_predicate_op57_write_state3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op57_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            closeTimer2stateTable_releaseState_write <= ap_const_logic_1;
        else 
            closeTimer2stateTable_releaseState_write <= ap_const_logic_0;
        end if; 
    end process;

    closeTimerTable_address0 <= closeTimerTable_addr_1_reg_253_pp0_iter1_reg;

    closeTimerTable_address1_assign_proc : process(tmp_i_nbreadreq_fu_66_p3, ct_waitForWrite, zext_ln587_17_fu_136_p1, zext_ln587_fu_185_p1, icmp_ln1069_fu_179_p2, ap_condition_116)
    begin
        if ((ap_const_boolean_1 = ap_condition_116)) then
            if (((ct_waitForWrite = ap_const_lv1_1) and (icmp_ln1069_fu_179_p2 = ap_const_lv1_0))) then 
                closeTimerTable_address1 <= zext_ln587_fu_185_p1(10 - 1 downto 0);
            elsif (((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_0) and (ct_waitForWrite = ap_const_lv1_0))) then 
                closeTimerTable_address1 <= zext_ln587_17_fu_136_p1(10 - 1 downto 0);
            else 
                closeTimerTable_address1 <= "XXXXXXXXXX";
            end if;
        else 
            closeTimerTable_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    closeTimerTable_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ct_waitForWrite_load_reg_240_pp0_iter1_reg, tmp_i_reg_244_pp0_iter1_reg, tmp_reg_262, icmp_ln1081_reg_271, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1081_reg_271 = ap_const_lv1_1) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1081_reg_271 = ap_const_lv1_0) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            closeTimerTable_ce0 <= ap_const_logic_1;
        else 
            closeTimerTable_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    closeTimerTable_ce1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, tmp_i_nbreadreq_fu_66_p3, ct_waitForWrite, ap_block_pp0_stage0_11001, icmp_ln1069_fu_179_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ct_waitForWrite = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1069_fu_179_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_0) and (ct_waitForWrite = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            closeTimerTable_ce1 <= ap_const_logic_1;
        else 
            closeTimerTable_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    closeTimerTable_d0_assign_proc : process(icmp_ln1081_reg_271, or_ln_i_fu_231_p3, ap_condition_293)
    begin
        if ((ap_const_boolean_1 = ap_condition_293)) then
            if ((icmp_ln1081_reg_271 = ap_const_lv1_1)) then 
                closeTimerTable_d0 <= ap_const_lv33_0;
            elsif ((icmp_ln1081_reg_271 = ap_const_lv1_0)) then 
                closeTimerTable_d0 <= or_ln_i_fu_231_p3;
            else 
                closeTimerTable_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            closeTimerTable_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    closeTimerTable_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ct_waitForWrite_load_reg_240_pp0_iter1_reg, tmp_i_reg_244_pp0_iter1_reg, tmp_reg_262, icmp_ln1081_reg_271, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1081_reg_271 = ap_const_lv1_1) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1081_reg_271 = ap_const_lv1_0) and (tmp_reg_262 = ap_const_lv1_1) and (tmp_i_reg_244_pp0_iter1_reg = ap_const_lv1_0) and (ct_waitForWrite_load_reg_240_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            closeTimerTable_we0 <= ap_const_logic_1;
        else 
            closeTimerTable_we0 <= ap_const_logic_0;
        end if; 
    end process;


    closeTimerTable_we1_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ct_waitForWrite, ap_block_pp0_stage0_11001, icmp_ln1069_fu_179_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ct_waitForWrite = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1069_fu_179_p2 = ap_const_lv1_0))) then 
            closeTimerTable_we1 <= ap_const_logic_1;
        else 
            closeTimerTable_we1 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1065_fu_147_p2 <= "1" when (add_ln886_fu_141_p2 = ap_const_lv16_3E8) else "0";
    icmp_ln1069_fu_179_p2 <= "1" when (ct_setSessionID_V = ct_prevSessionID_V) else "0";
    icmp_ln1081_fu_220_p2 <= "1" when (trunc_ln1081_fu_216_p1 = ap_const_lv32_0) else "0";
    or_ln_i_fu_231_p3 <= (ap_const_lv1_1 & add_ln887_2_fu_226_p2);

    rxEng2timer_setCloseTimer_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, rxEng2timer_setCloseTimer_empty_n, ap_predicate_op30_read_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_done_reg = ap_const_logic_0) and (ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng2timer_setCloseTimer_blk_n <= rxEng2timer_setCloseTimer_empty_n;
        else 
            rxEng2timer_setCloseTimer_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxEng2timer_setCloseTimer_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op30_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op30_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rxEng2timer_setCloseTimer_read <= ap_const_logic_1;
        else 
            rxEng2timer_setCloseTimer_read <= ap_const_logic_0;
        end if; 
    end process;

    select_ln93_fu_153_p3 <= 
        ap_const_lv16_0 when (icmp_ln1065_fu_147_p2(0) = '1') else 
        add_ln886_fu_141_p2;
    tmp_fu_208_p3 <= closeTimerTable_q1(32 downto 32);
    tmp_i_nbreadreq_fu_66_p3 <= (0=>(rxEng2timer_setCloseTimer_empty_n), others=>'-');
    trunc_ln1081_fu_216_p1 <= closeTimerTable_q1(32 - 1 downto 0);
    zext_ln587_17_fu_136_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ct_currSessionID_V),64));
    zext_ln587_fu_185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ct_setSessionID_V),64));
end behav;
