-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity toe_top_rx_app_stream_if is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_axis_rx_data_req_TVALID : IN STD_LOGIC;
    rxSar2rxApp_upd_rsp_dout : IN STD_LOGIC_VECTOR (34 downto 0);
    rxSar2rxApp_upd_rsp_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    rxSar2rxApp_upd_rsp_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    rxSar2rxApp_upd_rsp_empty_n : IN STD_LOGIC;
    rxSar2rxApp_upd_rsp_read : OUT STD_LOGIC;
    rxApp2rxSar_upd_req_din : OUT STD_LOGIC_VECTOR (34 downto 0);
    rxApp2rxSar_upd_req_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    rxApp2rxSar_upd_req_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    rxApp2rxSar_upd_req_full_n : IN STD_LOGIC;
    rxApp2rxSar_upd_req_write : OUT STD_LOGIC;
    m_axis_rx_data_rsp_metadata_TREADY : IN STD_LOGIC;
    rxBufferReadCmd_din : OUT STD_LOGIC_VECTOR (0 downto 0);
    rxBufferReadCmd_num_data_valid : IN STD_LOGIC_VECTOR (2 downto 0);
    rxBufferReadCmd_fifo_cap : IN STD_LOGIC_VECTOR (2 downto 0);
    rxBufferReadCmd_full_n : IN STD_LOGIC;
    rxBufferReadCmd_write : OUT STD_LOGIC;
    s_axis_rx_data_req_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    s_axis_rx_data_req_TREADY : OUT STD_LOGIC;
    m_axis_rx_data_rsp_metadata_TDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
    m_axis_rx_data_rsp_metadata_TVALID : OUT STD_LOGIC );
end;


architecture behav of toe_top_rx_app_stream_if is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal tmp_i_nbreadreq_fu_66_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op23_read_state1 : BOOLEAN;
    signal tmp_i_322_nbreadreq_fu_80_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op34_read_state1 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal rasi_fsmState_V_load_reg_207 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_211 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1069_reg_220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op41_write_state2 : BOOLEAN;
    signal tmp_i_322_reg_224 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op43_write_state2 : BOOLEAN;
    signal ap_predicate_op44_write_state2 : BOOLEAN;
    signal ap_predicate_op49_write_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state2_io : BOOLEAN;
    signal rasi_fsmState_V_load_reg_207_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_322_reg_224_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op50_write_state3 : BOOLEAN;
    signal regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal rasi_fsmState_V : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal rasi_readLength_V : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal s_axis_rx_data_req_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal m_axis_rx_data_rsp_metadata_TDATA_blk_n : STD_LOGIC;
    signal rxApp2rxSar_upd_req_blk_n : STD_LOGIC;
    signal rxSar2rxApp_upd_rsp_blk_n : STD_LOGIC;
    signal rxBufferReadCmd_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_sessionID_V_fu_120_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_sessionID_V_reg_215 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln1069_fu_134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_fu_152_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln145_reg_228 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_appd_V_reg_234 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_length_V_fu_124_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln174_fu_179_p1 : STD_LOGIC_VECTOR (34 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal p_04_fu_197_p4 : STD_LOGIC_VECTOR (34 downto 0);
    signal or_ln174_i_fu_172_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln232_fu_188_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln232_fu_192_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to1 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_req_U_apdone_blk : STD_LOGIC;
    signal s_axis_rx_data_req_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal s_axis_rx_data_req_TVALID_int_regslice : STD_LOGIC;
    signal s_axis_rx_data_req_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_s_axis_rx_data_req_U_ack_in : STD_LOGIC;
    signal m_axis_rx_data_rsp_metadata_TVALID_int_regslice : STD_LOGIC;
    signal m_axis_rx_data_rsp_metadata_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_m_axis_rx_data_rsp_metadata_U_vld_out : STD_LOGIC;
    signal ap_condition_194 : BOOLEAN;
    signal ap_condition_192 : BOOLEAN;
    signal ap_condition_217 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component toe_top_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_s_axis_rx_data_req_U : component toe_top_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => s_axis_rx_data_req_TDATA,
        vld_in => s_axis_rx_data_req_TVALID,
        ack_in => regslice_both_s_axis_rx_data_req_U_ack_in,
        data_out => s_axis_rx_data_req_TDATA_int_regslice,
        vld_out => s_axis_rx_data_req_TVALID_int_regslice,
        ack_out => s_axis_rx_data_req_TREADY_int_regslice,
        apdone_blk => regslice_both_s_axis_rx_data_req_U_apdone_blk);

    regslice_both_m_axis_rx_data_rsp_metadata_U : component toe_top_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => trunc_ln145_reg_228,
        vld_in => m_axis_rx_data_rsp_metadata_TVALID_int_regslice,
        ack_in => m_axis_rx_data_rsp_metadata_TREADY_int_regslice,
        data_out => m_axis_rx_data_rsp_metadata_TDATA,
        vld_out => regslice_both_m_axis_rx_data_rsp_metadata_U_vld_out,
        ack_out => m_axis_rx_data_rsp_metadata_TREADY,
        apdone_blk => regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    rasi_fsmState_V_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_192)) then
                if (((tmp_i_322_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (rasi_fsmState_V = ap_const_lv1_1))) then 
                    rasi_fsmState_V <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_194)) then 
                    rasi_fsmState_V <= ap_const_lv1_1;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (rasi_fsmState_V = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln1069_reg_220 <= icmp_ln1069_fu_134_p2;
                tmp_sessionID_V_reg_215 <= tmp_sessionID_V_fu_120_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                rasi_fsmState_V_load_reg_207 <= rasi_fsmState_V;
                rasi_fsmState_V_load_reg_207_pp0_iter1_reg <= rasi_fsmState_V_load_reg_207;
                tmp_i_322_reg_224_pp0_iter1_reg <= tmp_i_322_reg_224;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (rasi_fsmState_V = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1069_fu_134_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                rasi_readLength_V <= s_axis_rx_data_req_TDATA_int_regslice(31 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_322_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (rasi_fsmState_V = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_appd_V_reg_234 <= rxSar2rxApp_upd_rsp_dout(33 downto 16);
                trunc_ln145_reg_228 <= trunc_ln145_fu_152_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((rasi_fsmState_V = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_322_reg_224 <= tmp_i_322_nbreadreq_fu_80_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((rasi_fsmState_V = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp_i_reg_211 <= tmp_i_nbreadreq_fu_66_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln232_fu_192_p2 <= std_logic_vector(unsigned(tmp_appd_V_reg_234) + unsigned(zext_ln232_fu_188_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op23_read_state1, rxSar2rxApp_upd_rsp_empty_n, ap_predicate_op34_read_state1, ap_done_reg, rxApp2rxSar_upd_req_full_n, ap_predicate_op41_write_state2, ap_predicate_op43_write_state2, rxBufferReadCmd_full_n, ap_predicate_op44_write_state2, ap_predicate_op49_write_state2, ap_predicate_op50_write_state3, regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk, s_axis_rx_data_req_TVALID_int_regslice, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (rxSar2rxApp_upd_rsp_empty_n = ap_const_logic_0)) or ((ap_predicate_op23_read_state1 = ap_const_boolean_1) and (s_axis_rx_data_req_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk = ap_const_logic_1) or ((m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op50_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op43_write_state2 = ap_const_boolean_1) and (m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (rxApp2rxSar_upd_req_full_n = ap_const_logic_0)) or ((rxApp2rxSar_upd_req_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)) or ((rxBufferReadCmd_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op23_read_state1, rxSar2rxApp_upd_rsp_empty_n, ap_predicate_op34_read_state1, ap_done_reg, rxApp2rxSar_upd_req_full_n, ap_predicate_op41_write_state2, ap_predicate_op43_write_state2, rxBufferReadCmd_full_n, ap_predicate_op44_write_state2, ap_predicate_op49_write_state2, ap_block_state2_io, ap_predicate_op50_write_state3, regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk, ap_block_state3_io, s_axis_rx_data_req_TVALID_int_regslice, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (rxSar2rxApp_upd_rsp_empty_n = ap_const_logic_0)) or ((ap_predicate_op23_read_state1 = ap_const_boolean_1) and (s_axis_rx_data_req_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk = ap_const_logic_1) or ((m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op50_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op43_write_state2 = ap_const_boolean_1) and (m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (rxApp2rxSar_upd_req_full_n = ap_const_logic_0)) or ((rxApp2rxSar_upd_req_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)) or ((rxBufferReadCmd_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op23_read_state1, rxSar2rxApp_upd_rsp_empty_n, ap_predicate_op34_read_state1, ap_done_reg, rxApp2rxSar_upd_req_full_n, ap_predicate_op41_write_state2, ap_predicate_op43_write_state2, rxBufferReadCmd_full_n, ap_predicate_op44_write_state2, ap_predicate_op49_write_state2, ap_block_state2_io, ap_predicate_op50_write_state3, regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk, ap_block_state3_io, s_axis_rx_data_req_TVALID_int_regslice, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_start = ap_const_logic_1) and ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (rxSar2rxApp_upd_rsp_empty_n = ap_const_logic_0)) or ((ap_predicate_op23_read_state1 = ap_const_boolean_1) and (s_axis_rx_data_req_TVALID_int_regslice = ap_const_logic_0)))) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state3_io) or (regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk = ap_const_logic_1) or ((m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op50_write_state3 = ap_const_boolean_1)))) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((ap_const_boolean_1 = ap_block_state2_io) or ((ap_predicate_op43_write_state2 = ap_const_boolean_1) and (m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (rxApp2rxSar_upd_req_full_n = ap_const_logic_0)) or ((rxApp2rxSar_upd_req_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)) or ((rxBufferReadCmd_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op23_read_state1, rxSar2rxApp_upd_rsp_empty_n, ap_predicate_op34_read_state1, ap_done_reg, s_axis_rx_data_req_TVALID_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((ap_done_reg = ap_const_logic_1) or ((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (rxSar2rxApp_upd_rsp_empty_n = ap_const_logic_0)) or ((ap_predicate_op23_read_state1 = ap_const_boolean_1) and (s_axis_rx_data_req_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_io_assign_proc : process(ap_predicate_op43_write_state2, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
                ap_block_state2_io <= ((ap_predicate_op43_write_state2 = ap_const_boolean_1) and (m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(rxApp2rxSar_upd_req_full_n, ap_predicate_op41_write_state2, ap_predicate_op43_write_state2, rxBufferReadCmd_full_n, ap_predicate_op44_write_state2, ap_predicate_op49_write_state2, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op43_write_state2 = ap_const_boolean_1) and (m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (rxApp2rxSar_upd_req_full_n = ap_const_logic_0)) or ((rxApp2rxSar_upd_req_full_n = ap_const_logic_0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)) or ((rxBufferReadCmd_full_n = ap_const_logic_0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1)));
    end process;


    ap_block_state3_io_assign_proc : process(ap_predicate_op50_write_state3, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
                ap_block_state3_io <= ((m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op50_write_state3 = ap_const_boolean_1));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(ap_predicate_op50_write_state3, regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((regslice_both_m_axis_rx_data_rsp_metadata_U_apdone_blk = ap_const_logic_1) or ((m_axis_rx_data_rsp_metadata_TREADY_int_regslice = ap_const_logic_0) and (ap_predicate_op50_write_state3 = ap_const_boolean_1)));
    end process;


    ap_condition_192_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
                ap_condition_192 <= ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_194_assign_proc : process(tmp_i_nbreadreq_fu_66_p3, rasi_fsmState_V, icmp_ln1069_fu_134_p2)
    begin
                ap_condition_194 <= ((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (rasi_fsmState_V = ap_const_lv1_0) and (icmp_ln1069_fu_134_p2 = ap_const_lv1_0));
    end process;


    ap_condition_217_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_01001)
    begin
                ap_condition_217 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_01001));
    end process;


    ap_done_assign_proc : process(ap_enable_reg_pp0_iter2, ap_done_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op23_read_state1_assign_proc : process(tmp_i_nbreadreq_fu_66_p3, rasi_fsmState_V)
    begin
                ap_predicate_op23_read_state1 <= ((tmp_i_nbreadreq_fu_66_p3 = ap_const_lv1_1) and (rasi_fsmState_V = ap_const_lv1_0));
    end process;


    ap_predicate_op34_read_state1_assign_proc : process(tmp_i_322_nbreadreq_fu_80_p3, rasi_fsmState_V)
    begin
                ap_predicate_op34_read_state1 <= ((tmp_i_322_nbreadreq_fu_80_p3 = ap_const_lv1_1) and (rasi_fsmState_V = ap_const_lv1_1));
    end process;


    ap_predicate_op41_write_state2_assign_proc : process(rasi_fsmState_V_load_reg_207, tmp_i_reg_211, icmp_ln1069_reg_220)
    begin
                ap_predicate_op41_write_state2 <= ((icmp_ln1069_reg_220 = ap_const_lv1_0) and (tmp_i_reg_211 = ap_const_lv1_1) and (rasi_fsmState_V_load_reg_207 = ap_const_lv1_0));
    end process;


    ap_predicate_op43_write_state2_assign_proc : process(rasi_fsmState_V_load_reg_207, tmp_i_322_reg_224)
    begin
                ap_predicate_op43_write_state2 <= ((tmp_i_322_reg_224 = ap_const_lv1_1) and (rasi_fsmState_V_load_reg_207 = ap_const_lv1_1));
    end process;


    ap_predicate_op44_write_state2_assign_proc : process(rasi_fsmState_V_load_reg_207, tmp_i_322_reg_224)
    begin
                ap_predicate_op44_write_state2 <= ((tmp_i_322_reg_224 = ap_const_lv1_1) and (rasi_fsmState_V_load_reg_207 = ap_const_lv1_1));
    end process;


    ap_predicate_op49_write_state2_assign_proc : process(rasi_fsmState_V_load_reg_207, tmp_i_322_reg_224)
    begin
                ap_predicate_op49_write_state2 <= ((tmp_i_322_reg_224 = ap_const_lv1_1) and (rasi_fsmState_V_load_reg_207 = ap_const_lv1_1));
    end process;


    ap_predicate_op50_write_state3_assign_proc : process(rasi_fsmState_V_load_reg_207_pp0_iter1_reg, tmp_i_322_reg_224_pp0_iter1_reg)
    begin
                ap_predicate_op50_write_state3 <= ((tmp_i_322_reg_224_pp0_iter1_reg = ap_const_lv1_1) and (rasi_fsmState_V_load_reg_207_pp0_iter1_reg = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to1 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln1069_fu_134_p2 <= "1" when (tmp_length_V_fu_124_p4 = ap_const_lv16_0) else "0";

    m_axis_rx_data_rsp_metadata_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_predicate_op43_write_state2, ap_predicate_op50_write_state3, ap_block_pp0_stage0, m_axis_rx_data_rsp_metadata_TREADY_int_regslice)
    begin
        if ((((ap_predicate_op43_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op50_write_state3 = ap_const_boolean_1)))) then 
            m_axis_rx_data_rsp_metadata_TDATA_blk_n <= m_axis_rx_data_rsp_metadata_TREADY_int_regslice;
        else 
            m_axis_rx_data_rsp_metadata_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    m_axis_rx_data_rsp_metadata_TVALID <= regslice_both_m_axis_rx_data_rsp_metadata_U_vld_out;

    m_axis_rx_data_rsp_metadata_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op43_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op43_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            m_axis_rx_data_rsp_metadata_TVALID_int_regslice <= ap_const_logic_1;
        else 
            m_axis_rx_data_rsp_metadata_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    or_ln174_i_fu_172_p3 <= (ap_const_lv1_0 & tmp_sessionID_V_reg_215);
    p_04_fu_197_p4 <= ((ap_const_lv1_1 & add_ln232_fu_192_p2) & trunc_ln145_reg_228);

    rxApp2rxSar_upd_req_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rxApp2rxSar_upd_req_full_n, ap_predicate_op41_write_state2, ap_predicate_op49_write_state2, ap_block_pp0_stage0)
    begin
        if ((((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)))) then 
            rxApp2rxSar_upd_req_blk_n <= rxApp2rxSar_upd_req_full_n;
        else 
            rxApp2rxSar_upd_req_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxApp2rxSar_upd_req_din_assign_proc : process(ap_predicate_op41_write_state2, ap_predicate_op49_write_state2, zext_ln174_fu_179_p1, p_04_fu_197_p4, ap_condition_217)
    begin
        if ((ap_const_boolean_1 = ap_condition_217)) then
            if ((ap_predicate_op49_write_state2 = ap_const_boolean_1)) then 
                rxApp2rxSar_upd_req_din <= p_04_fu_197_p4;
            elsif ((ap_predicate_op41_write_state2 = ap_const_boolean_1)) then 
                rxApp2rxSar_upd_req_din <= zext_ln174_fu_179_p1;
            else 
                rxApp2rxSar_upd_req_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            rxApp2rxSar_upd_req_din <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    rxApp2rxSar_upd_req_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op41_write_state2, ap_predicate_op49_write_state2, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op41_write_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op49_write_state2 = ap_const_boolean_1)))) then 
            rxApp2rxSar_upd_req_write <= ap_const_logic_1;
        else 
            rxApp2rxSar_upd_req_write <= ap_const_logic_0;
        end if; 
    end process;


    rxBufferReadCmd_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, rxBufferReadCmd_full_n, ap_predicate_op44_write_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op44_write_state2 = ap_const_boolean_1))) then 
            rxBufferReadCmd_blk_n <= rxBufferReadCmd_full_n;
        else 
            rxBufferReadCmd_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rxBufferReadCmd_din <= ap_const_lv1_1;

    rxBufferReadCmd_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op44_write_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op44_write_state2 = ap_const_boolean_1))) then 
            rxBufferReadCmd_write <= ap_const_logic_1;
        else 
            rxBufferReadCmd_write <= ap_const_logic_0;
        end if; 
    end process;


    rxSar2rxApp_upd_rsp_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, rxSar2rxApp_upd_rsp_empty_n, ap_predicate_op34_read_state1, ap_done_reg, ap_block_pp0_stage0)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_predicate_op34_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            rxSar2rxApp_upd_rsp_blk_n <= rxSar2rxApp_upd_rsp_empty_n;
        else 
            rxSar2rxApp_upd_rsp_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rxSar2rxApp_upd_rsp_read_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op34_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op34_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            rxSar2rxApp_upd_rsp_read <= ap_const_logic_1;
        else 
            rxSar2rxApp_upd_rsp_read <= ap_const_logic_0;
        end if; 
    end process;


    s_axis_rx_data_req_TDATA_blk_n_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op23_read_state1, ap_done_reg, ap_block_pp0_stage0, s_axis_rx_data_req_TVALID_int_regslice)
    begin
        if (((ap_done_reg = ap_const_logic_0) and (ap_predicate_op23_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            s_axis_rx_data_req_TDATA_blk_n <= s_axis_rx_data_req_TVALID_int_regslice;
        else 
            s_axis_rx_data_req_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    s_axis_rx_data_req_TREADY <= regslice_both_s_axis_rx_data_req_U_ack_in;

    s_axis_rx_data_req_TREADY_int_regslice_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_predicate_op23_read_state1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op23_read_state1 = ap_const_boolean_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            s_axis_rx_data_req_TREADY_int_regslice <= ap_const_logic_1;
        else 
            s_axis_rx_data_req_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    tmp_i_322_nbreadreq_fu_80_p3 <= (0=>(rxSar2rxApp_upd_rsp_empty_n), others=>'-');
    tmp_i_nbreadreq_fu_66_p3 <= (0=>(s_axis_rx_data_req_TVALID_int_regslice), others=>'-');
    tmp_length_V_fu_124_p4 <= s_axis_rx_data_req_TDATA_int_regslice(31 downto 16);
    tmp_sessionID_V_fu_120_p1 <= s_axis_rx_data_req_TDATA_int_regslice(16 - 1 downto 0);
    trunc_ln145_fu_152_p1 <= rxSar2rxApp_upd_rsp_dout(16 - 1 downto 0);
    zext_ln174_fu_179_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln174_i_fu_172_p3),35));
    zext_ln232_fu_188_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rasi_readLength_V),18));
end behav;
