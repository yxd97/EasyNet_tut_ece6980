// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module toe_top_stream_merger_event_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        rtTimer2eventEng_setEvent_dout,
        rtTimer2eventEng_setEvent_num_data_valid,
        rtTimer2eventEng_setEvent_fifo_cap,
        rtTimer2eventEng_setEvent_empty_n,
        rtTimer2eventEng_setEvent_read,
        probeTimer2eventEng_setEvent_dout,
        probeTimer2eventEng_setEvent_num_data_valid,
        probeTimer2eventEng_setEvent_fifo_cap,
        probeTimer2eventEng_setEvent_empty_n,
        probeTimer2eventEng_setEvent_read,
        timer2eventEng_setEvent_din,
        timer2eventEng_setEvent_num_data_valid,
        timer2eventEng_setEvent_fifo_cap,
        timer2eventEng_setEvent_full_n,
        timer2eventEng_setEvent_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [84:0] rtTimer2eventEng_setEvent_dout;
input  [1:0] rtTimer2eventEng_setEvent_num_data_valid;
input  [1:0] rtTimer2eventEng_setEvent_fifo_cap;
input   rtTimer2eventEng_setEvent_empty_n;
output   rtTimer2eventEng_setEvent_read;
input  [84:0] probeTimer2eventEng_setEvent_dout;
input  [1:0] probeTimer2eventEng_setEvent_num_data_valid;
input  [1:0] probeTimer2eventEng_setEvent_fifo_cap;
input   probeTimer2eventEng_setEvent_empty_n;
output   probeTimer2eventEng_setEvent_read;
output  [84:0] timer2eventEng_setEvent_din;
input  [6:0] timer2eventEng_setEvent_num_data_valid;
input  [6:0] timer2eventEng_setEvent_fifo_cap;
input   timer2eventEng_setEvent_full_n;
output   timer2eventEng_setEvent_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rtTimer2eventEng_setEvent_read;
reg probeTimer2eventEng_setEvent_read;
reg[84:0] timer2eventEng_setEvent_din;
reg timer2eventEng_setEvent_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire   [0:0] tmp_i_nbreadreq_fu_26_p3;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_i_reg_61;
wire   [0:0] tmp_i_317_nbreadreq_fu_40_p3;
reg    ap_predicate_op23_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] tmp_i_reg_61_pp0_iter1_reg;
reg   [0:0] tmp_i_317_reg_70;
reg    ap_predicate_op24_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg    rtTimer2eventEng_setEvent_blk_n;
wire    ap_block_pp0_stage0;
reg    timer2eventEng_setEvent_blk_n;
reg    probeTimer2eventEng_setEvent_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [84:0] rtTimer2eventEng_setEvent_read_reg_65;
reg   [84:0] rtTimer2eventEng_setEvent_read_reg_65_pp0_iter1_reg;
reg   [84:0] probeTimer2eventEng_setEvent_read_reg_74;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op23_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        probeTimer2eventEng_setEvent_read_reg_74 <= probeTimer2eventEng_setEvent_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_nbreadreq_fu_26_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rtTimer2eventEng_setEvent_read_reg_65 <= rtTimer2eventEng_setEvent_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rtTimer2eventEng_setEvent_read_reg_65_pp0_iter1_reg <= rtTimer2eventEng_setEvent_read_reg_65;
        tmp_i_reg_61 <= tmp_i_nbreadreq_fu_26_p3;
        tmp_i_reg_61_pp0_iter1_reg <= tmp_i_reg_61;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_reg_61 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_i_317_reg_70 <= tmp_i_317_nbreadreq_fu_40_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op23_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        probeTimer2eventEng_setEvent_blk_n = probeTimer2eventEng_setEvent_empty_n;
    end else begin
        probeTimer2eventEng_setEvent_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op23_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        probeTimer2eventEng_setEvent_read = 1'b1;
    end else begin
        probeTimer2eventEng_setEvent_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_done_reg == 1'b0) & (tmp_i_nbreadreq_fu_26_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rtTimer2eventEng_setEvent_blk_n = rtTimer2eventEng_setEvent_empty_n;
    end else begin
        rtTimer2eventEng_setEvent_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_nbreadreq_fu_26_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rtTimer2eventEng_setEvent_read = 1'b1;
    end else begin
        rtTimer2eventEng_setEvent_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (tmp_i_reg_61_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op24_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        timer2eventEng_setEvent_blk_n = timer2eventEng_setEvent_full_n;
    end else begin
        timer2eventEng_setEvent_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((tmp_i_reg_61_pp0_iter1_reg == 1'd1)) begin
            timer2eventEng_setEvent_din = rtTimer2eventEng_setEvent_read_reg_65_pp0_iter1_reg;
        end else if ((ap_predicate_op24_write_state3 == 1'b1)) begin
            timer2eventEng_setEvent_din = probeTimer2eventEng_setEvent_read_reg_74;
        end else begin
            timer2eventEng_setEvent_din = 'bx;
        end
    end else begin
        timer2eventEng_setEvent_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_reg_61_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op24_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        timer2eventEng_setEvent_write = 1'b1;
    end else begin
        timer2eventEng_setEvent_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_i_reg_61_pp0_iter1_reg == 1'd1) & (timer2eventEng_setEvent_full_n == 1'b0)) | ((ap_predicate_op24_write_state3 == 1'b1) & (timer2eventEng_setEvent_full_n == 1'b0)))) | ((ap_predicate_op23_read_state2 == 1'b1) & (probeTimer2eventEng_setEvent_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_26_p3 == 1'd1) & (rtTimer2eventEng_setEvent_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_i_reg_61_pp0_iter1_reg == 1'd1) & (timer2eventEng_setEvent_full_n == 1'b0)) | ((ap_predicate_op24_write_state3 == 1'b1) & (timer2eventEng_setEvent_full_n == 1'b0)))) | ((ap_predicate_op23_read_state2 == 1'b1) & (probeTimer2eventEng_setEvent_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_26_p3 == 1'd1) & (rtTimer2eventEng_setEvent_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((tmp_i_reg_61_pp0_iter1_reg == 1'd1) & (timer2eventEng_setEvent_full_n == 1'b0)) | ((ap_predicate_op24_write_state3 == 1'b1) & (timer2eventEng_setEvent_full_n == 1'b0)))) | ((ap_predicate_op23_read_state2 == 1'b1) & (probeTimer2eventEng_setEvent_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_26_p3 == 1'd1) & (rtTimer2eventEng_setEvent_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((tmp_i_nbreadreq_fu_26_p3 == 1'd1) & (rtTimer2eventEng_setEvent_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op23_read_state2 == 1'b1) & (probeTimer2eventEng_setEvent_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((tmp_i_reg_61_pp0_iter1_reg == 1'd1) & (timer2eventEng_setEvent_full_n == 1'b0)) | ((ap_predicate_op24_write_state3 == 1'b1) & (timer2eventEng_setEvent_full_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

always @ (*) begin
    ap_predicate_op23_read_state2 = ((tmp_i_317_nbreadreq_fu_40_p3 == 1'd1) & (tmp_i_reg_61 == 1'd0));
end

always @ (*) begin
    ap_predicate_op24_write_state3 = ((tmp_i_317_reg_70 == 1'd1) & (tmp_i_reg_61_pp0_iter1_reg == 1'd0));
end

assign tmp_i_317_nbreadreq_fu_40_p3 = probeTimer2eventEng_setEvent_empty_n;

assign tmp_i_nbreadreq_fu_26_p3 = rtTimer2eventEng_setEvent_empty_n;

endmodule //toe_top_stream_merger_event_s
