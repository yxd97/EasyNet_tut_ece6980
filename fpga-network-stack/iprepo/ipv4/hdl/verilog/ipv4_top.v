// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ipv4_top_ipv4_top,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.114000,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=25389,HLS_SYN_LUT=10130,HLS_VERSION=2022_1}" *)

module ipv4_top (
        s_axis_rx_data_TDATA,
        s_axis_rx_data_TKEEP,
        s_axis_rx_data_TSTRB,
        s_axis_rx_data_TLAST,
        m_axis_rx_meta_TDATA,
        m_axis_rx_data_TDATA,
        m_axis_rx_data_TKEEP,
        m_axis_rx_data_TSTRB,
        m_axis_rx_data_TLAST,
        s_axis_tx_meta_TDATA,
        s_axis_tx_data_TDATA,
        s_axis_tx_data_TKEEP,
        s_axis_tx_data_TSTRB,
        s_axis_tx_data_TLAST,
        m_axis_tx_data_TDATA,
        m_axis_tx_data_TKEEP,
        m_axis_tx_data_TSTRB,
        m_axis_tx_data_TLAST,
        local_ipv4_address,
        protocol,
        ap_clk,
        ap_rst_n,
        s_axis_rx_data_TVALID,
        s_axis_rx_data_TREADY,
        s_axis_tx_data_TVALID,
        s_axis_tx_data_TREADY,
        m_axis_rx_data_TVALID,
        m_axis_rx_data_TREADY,
        m_axis_tx_data_TVALID,
        m_axis_tx_data_TREADY,
        m_axis_rx_meta_TVALID,
        m_axis_rx_meta_TREADY,
        s_axis_tx_meta_TVALID,
        s_axis_tx_meta_TREADY
);


input  [511:0] s_axis_rx_data_TDATA;
input  [63:0] s_axis_rx_data_TKEEP;
input  [63:0] s_axis_rx_data_TSTRB;
input  [0:0] s_axis_rx_data_TLAST;
output  [47:0] m_axis_rx_meta_TDATA;
output  [511:0] m_axis_rx_data_TDATA;
output  [63:0] m_axis_rx_data_TKEEP;
output  [63:0] m_axis_rx_data_TSTRB;
output  [0:0] m_axis_rx_data_TLAST;
input  [47:0] s_axis_tx_meta_TDATA;
input  [511:0] s_axis_tx_data_TDATA;
input  [63:0] s_axis_tx_data_TKEEP;
input  [63:0] s_axis_tx_data_TSTRB;
input  [0:0] s_axis_tx_data_TLAST;
output  [511:0] m_axis_tx_data_TDATA;
output  [63:0] m_axis_tx_data_TKEEP;
output  [63:0] m_axis_tx_data_TSTRB;
output  [0:0] m_axis_tx_data_TLAST;
input  [31:0] local_ipv4_address;
input  [7:0] protocol;
input   ap_clk;
input   ap_rst_n;
input   s_axis_rx_data_TVALID;
output   s_axis_rx_data_TREADY;
input   s_axis_tx_data_TVALID;
output   s_axis_tx_data_TREADY;
output   m_axis_rx_data_TVALID;
input   m_axis_rx_data_TREADY;
output   m_axis_tx_data_TVALID;
input   m_axis_tx_data_TREADY;
output   m_axis_rx_meta_TVALID;
input   m_axis_rx_meta_TREADY;
input   s_axis_tx_meta_TVALID;
output   s_axis_tx_meta_TREADY;

 reg    ap_rst_n_inv;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [31:0] entry_proc_U0_local_ipv4_address_c_din;
wire    entry_proc_U0_local_ipv4_address_c_write;
wire   [7:0] entry_proc_U0_protocol_c_din;
wire    entry_proc_U0_protocol_c_write;
wire    convert_axis_to_net_axis_512_U0_ap_start;
wire    convert_axis_to_net_axis_512_U0_ap_done;
wire    convert_axis_to_net_axis_512_U0_ap_continue;
wire    convert_axis_to_net_axis_512_U0_ap_idle;
wire    convert_axis_to_net_axis_512_U0_ap_ready;
wire   [1023:0] convert_axis_to_net_axis_512_U0_s_axis_rx_data_internal_din;
wire    convert_axis_to_net_axis_512_U0_s_axis_rx_data_internal_write;
wire    convert_axis_to_net_axis_512_U0_s_axis_rx_data_TREADY;
wire    convert_axis_to_net_axis_512_1_U0_ap_start;
wire    convert_axis_to_net_axis_512_1_U0_ap_done;
wire    convert_axis_to_net_axis_512_1_U0_ap_continue;
wire    convert_axis_to_net_axis_512_1_U0_ap_idle;
wire    convert_axis_to_net_axis_512_1_U0_ap_ready;
wire   [1023:0] convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_internal_din;
wire    convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_internal_write;
wire    convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_TREADY;
wire    convert_net_axis_to_axis_512_U0_ap_start;
wire    convert_net_axis_to_axis_512_U0_ap_done;
wire    convert_net_axis_to_axis_512_U0_ap_continue;
wire    convert_net_axis_to_axis_512_U0_ap_idle;
wire    convert_net_axis_to_axis_512_U0_ap_ready;
wire    convert_net_axis_to_axis_512_U0_m_axis_rx_data_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_U0_m_axis_rx_data_TDATA;
wire    convert_net_axis_to_axis_512_U0_m_axis_rx_data_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_U0_m_axis_rx_data_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_U0_m_axis_rx_data_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_U0_m_axis_rx_data_TLAST;
wire    convert_net_axis_to_axis_512_2_U0_ap_start;
wire    convert_net_axis_to_axis_512_2_U0_ap_done;
wire    convert_net_axis_to_axis_512_2_U0_ap_continue;
wire    convert_net_axis_to_axis_512_2_U0_ap_idle;
wire    convert_net_axis_to_axis_512_2_U0_ap_ready;
wire    convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TDATA;
wire    convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TLAST;
wire    process_ipv4_512_U0_ap_start;
wire    process_ipv4_512_U0_ap_done;
wire    process_ipv4_512_U0_ap_continue;
wire    process_ipv4_512_U0_ap_idle;
wire    process_ipv4_512_U0_ap_ready;
wire    process_ipv4_512_U0_s_axis_rx_data_internal_read;
wire   [1023:0] process_ipv4_512_U0_rx_process2dropFifo_din;
wire    process_ipv4_512_U0_rx_process2dropFifo_write;
wire   [3:0] process_ipv4_512_U0_rx_process2dropLengthFifo_din;
wire    process_ipv4_512_U0_rx_process2dropLengthFifo_write;
wire   [47:0] process_ipv4_512_U0_m_axis_rx_meta_TDATA;
wire    process_ipv4_512_U0_m_axis_rx_meta_TVALID;
wire    ipv4_drop_optional_ip_header_512_U0_ap_start;
wire    ipv4_drop_optional_ip_header_512_U0_ap_done;
wire    ipv4_drop_optional_ip_header_512_U0_ap_continue;
wire    ipv4_drop_optional_ip_header_512_U0_ap_idle;
wire    ipv4_drop_optional_ip_header_512_U0_ap_ready;
wire    ipv4_drop_optional_ip_header_512_U0_rx_process2dropFifo_read;
wire    ipv4_drop_optional_ip_header_512_U0_rx_process2dropLengthFifo_read;
wire   [1023:0] ipv4_drop_optional_ip_header_512_U0_m_axis_rx_data_internal_din;
wire    ipv4_drop_optional_ip_header_512_U0_m_axis_rx_data_internal_write;
wire    ipv4_lshiftWordByOctet_512_2_U0_ap_start;
wire    ipv4_lshiftWordByOctet_512_2_U0_ap_done;
wire    ipv4_lshiftWordByOctet_512_2_U0_ap_continue;
wire    ipv4_lshiftWordByOctet_512_2_U0_ap_idle;
wire    ipv4_lshiftWordByOctet_512_2_U0_ap_ready;
wire    ipv4_lshiftWordByOctet_512_2_U0_s_axis_tx_data_internal_read;
wire   [1023:0] ipv4_lshiftWordByOctet_512_2_U0_tx_shift2ipv4Fifo_din;
wire    ipv4_lshiftWordByOctet_512_2_U0_tx_shift2ipv4Fifo_write;
wire    ipv4_generate_ipv4_512_U0_ap_start;
wire    ipv4_generate_ipv4_512_U0_ap_done;
wire    ipv4_generate_ipv4_512_U0_ap_continue;
wire    ipv4_generate_ipv4_512_U0_ap_idle;
wire    ipv4_generate_ipv4_512_U0_ap_ready;
wire    ipv4_generate_ipv4_512_U0_protocol_read;
wire    ipv4_generate_ipv4_512_U0_local_ipv4_address_read;
wire    ipv4_generate_ipv4_512_U0_tx_shift2ipv4Fifo_read;
wire   [1023:0] ipv4_generate_ipv4_512_U0_m_axis_tx_data_internal_din;
wire    ipv4_generate_ipv4_512_U0_m_axis_tx_data_internal_write;
wire    ipv4_generate_ipv4_512_U0_s_axis_tx_meta_TREADY;
wire    local_ipv4_address_c_full_n;
wire   [31:0] local_ipv4_address_c_dout;
wire   [2:0] local_ipv4_address_c_num_data_valid;
wire   [2:0] local_ipv4_address_c_fifo_cap;
wire    local_ipv4_address_c_empty_n;
wire    protocol_c_full_n;
wire   [7:0] protocol_c_dout;
wire   [2:0] protocol_c_num_data_valid;
wire   [2:0] protocol_c_fifo_cap;
wire    protocol_c_empty_n;
wire    s_axis_rx_data_internal_full_n;
wire   [1023:0] s_axis_rx_data_internal_dout;
wire   [1:0] s_axis_rx_data_internal_num_data_valid;
wire   [1:0] s_axis_rx_data_internal_fifo_cap;
wire    s_axis_rx_data_internal_empty_n;
wire    s_axis_tx_data_internal_full_n;
wire   [1023:0] s_axis_tx_data_internal_dout;
wire   [1:0] s_axis_tx_data_internal_num_data_valid;
wire   [1:0] s_axis_tx_data_internal_fifo_cap;
wire    s_axis_tx_data_internal_empty_n;
wire    m_axis_rx_data_internal_full_n;
wire   [1023:0] m_axis_rx_data_internal_dout;
wire   [1:0] m_axis_rx_data_internal_num_data_valid;
wire   [1:0] m_axis_rx_data_internal_fifo_cap;
wire    m_axis_rx_data_internal_empty_n;
wire    m_axis_tx_data_internal_full_n;
wire   [1023:0] m_axis_tx_data_internal_dout;
wire   [1:0] m_axis_tx_data_internal_num_data_valid;
wire   [1:0] m_axis_tx_data_internal_fifo_cap;
wire    m_axis_tx_data_internal_empty_n;
wire    rx_process2dropFifo_full_n;
wire   [1023:0] rx_process2dropFifo_dout;
wire   [3:0] rx_process2dropFifo_num_data_valid;
wire   [3:0] rx_process2dropFifo_fifo_cap;
wire    rx_process2dropFifo_empty_n;
wire    rx_process2dropLengthFifo_full_n;
wire   [3:0] rx_process2dropLengthFifo_dout;
wire   [1:0] rx_process2dropLengthFifo_num_data_valid;
wire   [1:0] rx_process2dropLengthFifo_fifo_cap;
wire    rx_process2dropLengthFifo_empty_n;
wire    tx_shift2ipv4Fifo_full_n;
wire   [1023:0] tx_shift2ipv4Fifo_dout;
wire   [3:0] tx_shift2ipv4Fifo_num_data_valid;
wire   [3:0] tx_shift2ipv4Fifo_fifo_cap;
wire    tx_shift2ipv4Fifo_empty_n;

ipv4_top_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .local_ipv4_address(local_ipv4_address),
    .local_ipv4_address_c_din(entry_proc_U0_local_ipv4_address_c_din),
    .local_ipv4_address_c_num_data_valid(local_ipv4_address_c_num_data_valid),
    .local_ipv4_address_c_fifo_cap(local_ipv4_address_c_fifo_cap),
    .local_ipv4_address_c_full_n(local_ipv4_address_c_full_n),
    .local_ipv4_address_c_write(entry_proc_U0_local_ipv4_address_c_write),
    .protocol(protocol),
    .protocol_c_din(entry_proc_U0_protocol_c_din),
    .protocol_c_num_data_valid(protocol_c_num_data_valid),
    .protocol_c_fifo_cap(protocol_c_fifo_cap),
    .protocol_c_full_n(protocol_c_full_n),
    .protocol_c_write(entry_proc_U0_protocol_c_write)
);

ipv4_top_convert_axis_to_net_axis_512_s convert_axis_to_net_axis_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_axis_to_net_axis_512_U0_ap_start),
    .ap_done(convert_axis_to_net_axis_512_U0_ap_done),
    .ap_continue(convert_axis_to_net_axis_512_U0_ap_continue),
    .ap_idle(convert_axis_to_net_axis_512_U0_ap_idle),
    .ap_ready(convert_axis_to_net_axis_512_U0_ap_ready),
    .s_axis_rx_data_TVALID(s_axis_rx_data_TVALID),
    .s_axis_rx_data_internal_din(convert_axis_to_net_axis_512_U0_s_axis_rx_data_internal_din),
    .s_axis_rx_data_internal_num_data_valid(s_axis_rx_data_internal_num_data_valid),
    .s_axis_rx_data_internal_fifo_cap(s_axis_rx_data_internal_fifo_cap),
    .s_axis_rx_data_internal_full_n(s_axis_rx_data_internal_full_n),
    .s_axis_rx_data_internal_write(convert_axis_to_net_axis_512_U0_s_axis_rx_data_internal_write),
    .s_axis_rx_data_TDATA(s_axis_rx_data_TDATA),
    .s_axis_rx_data_TREADY(convert_axis_to_net_axis_512_U0_s_axis_rx_data_TREADY),
    .s_axis_rx_data_TKEEP(s_axis_rx_data_TKEEP),
    .s_axis_rx_data_TSTRB(s_axis_rx_data_TSTRB),
    .s_axis_rx_data_TLAST(s_axis_rx_data_TLAST)
);

ipv4_top_convert_axis_to_net_axis_512_1 convert_axis_to_net_axis_512_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_axis_to_net_axis_512_1_U0_ap_start),
    .ap_done(convert_axis_to_net_axis_512_1_U0_ap_done),
    .ap_continue(convert_axis_to_net_axis_512_1_U0_ap_continue),
    .ap_idle(convert_axis_to_net_axis_512_1_U0_ap_idle),
    .ap_ready(convert_axis_to_net_axis_512_1_U0_ap_ready),
    .s_axis_tx_data_TVALID(s_axis_tx_data_TVALID),
    .s_axis_tx_data_internal_din(convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_internal_din),
    .s_axis_tx_data_internal_num_data_valid(s_axis_tx_data_internal_num_data_valid),
    .s_axis_tx_data_internal_fifo_cap(s_axis_tx_data_internal_fifo_cap),
    .s_axis_tx_data_internal_full_n(s_axis_tx_data_internal_full_n),
    .s_axis_tx_data_internal_write(convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_internal_write),
    .s_axis_tx_data_TDATA(s_axis_tx_data_TDATA),
    .s_axis_tx_data_TREADY(convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_TREADY),
    .s_axis_tx_data_TKEEP(s_axis_tx_data_TKEEP),
    .s_axis_tx_data_TSTRB(s_axis_tx_data_TSTRB),
    .s_axis_tx_data_TLAST(s_axis_tx_data_TLAST)
);

ipv4_top_convert_net_axis_to_axis_512_s convert_net_axis_to_axis_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_U0_ap_ready),
    .m_axis_rx_data_internal_dout(m_axis_rx_data_internal_dout),
    .m_axis_rx_data_internal_num_data_valid(m_axis_rx_data_internal_num_data_valid),
    .m_axis_rx_data_internal_fifo_cap(m_axis_rx_data_internal_fifo_cap),
    .m_axis_rx_data_internal_empty_n(m_axis_rx_data_internal_empty_n),
    .m_axis_rx_data_internal_read(convert_net_axis_to_axis_512_U0_m_axis_rx_data_internal_read),
    .m_axis_rx_data_TREADY(m_axis_rx_data_TREADY),
    .m_axis_rx_data_TDATA(convert_net_axis_to_axis_512_U0_m_axis_rx_data_TDATA),
    .m_axis_rx_data_TVALID(convert_net_axis_to_axis_512_U0_m_axis_rx_data_TVALID),
    .m_axis_rx_data_TKEEP(convert_net_axis_to_axis_512_U0_m_axis_rx_data_TKEEP),
    .m_axis_rx_data_TSTRB(convert_net_axis_to_axis_512_U0_m_axis_rx_data_TSTRB),
    .m_axis_rx_data_TLAST(convert_net_axis_to_axis_512_U0_m_axis_rx_data_TLAST)
);

ipv4_top_convert_net_axis_to_axis_512_2 convert_net_axis_to_axis_512_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_2_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_2_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_2_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_2_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_2_U0_ap_ready),
    .m_axis_tx_data_internal_dout(m_axis_tx_data_internal_dout),
    .m_axis_tx_data_internal_num_data_valid(m_axis_tx_data_internal_num_data_valid),
    .m_axis_tx_data_internal_fifo_cap(m_axis_tx_data_internal_fifo_cap),
    .m_axis_tx_data_internal_empty_n(m_axis_tx_data_internal_empty_n),
    .m_axis_tx_data_internal_read(convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_internal_read),
    .m_axis_tx_data_TREADY(m_axis_tx_data_TREADY),
    .m_axis_tx_data_TDATA(convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TDATA),
    .m_axis_tx_data_TVALID(convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TVALID),
    .m_axis_tx_data_TKEEP(convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TKEEP),
    .m_axis_tx_data_TSTRB(convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TSTRB),
    .m_axis_tx_data_TLAST(convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TLAST)
);

ipv4_top_process_ipv4_512_s process_ipv4_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(process_ipv4_512_U0_ap_start),
    .ap_done(process_ipv4_512_U0_ap_done),
    .ap_continue(process_ipv4_512_U0_ap_continue),
    .ap_idle(process_ipv4_512_U0_ap_idle),
    .ap_ready(process_ipv4_512_U0_ap_ready),
    .s_axis_rx_data_internal_dout(s_axis_rx_data_internal_dout),
    .s_axis_rx_data_internal_num_data_valid(s_axis_rx_data_internal_num_data_valid),
    .s_axis_rx_data_internal_fifo_cap(s_axis_rx_data_internal_fifo_cap),
    .s_axis_rx_data_internal_empty_n(s_axis_rx_data_internal_empty_n),
    .s_axis_rx_data_internal_read(process_ipv4_512_U0_s_axis_rx_data_internal_read),
    .rx_process2dropFifo_din(process_ipv4_512_U0_rx_process2dropFifo_din),
    .rx_process2dropFifo_num_data_valid(rx_process2dropFifo_num_data_valid),
    .rx_process2dropFifo_fifo_cap(rx_process2dropFifo_fifo_cap),
    .rx_process2dropFifo_full_n(rx_process2dropFifo_full_n),
    .rx_process2dropFifo_write(process_ipv4_512_U0_rx_process2dropFifo_write),
    .m_axis_rx_meta_TREADY(m_axis_rx_meta_TREADY),
    .rx_process2dropLengthFifo_din(process_ipv4_512_U0_rx_process2dropLengthFifo_din),
    .rx_process2dropLengthFifo_num_data_valid(rx_process2dropLengthFifo_num_data_valid),
    .rx_process2dropLengthFifo_fifo_cap(rx_process2dropLengthFifo_fifo_cap),
    .rx_process2dropLengthFifo_full_n(rx_process2dropLengthFifo_full_n),
    .rx_process2dropLengthFifo_write(process_ipv4_512_U0_rx_process2dropLengthFifo_write),
    .m_axis_rx_meta_TDATA(process_ipv4_512_U0_m_axis_rx_meta_TDATA),
    .m_axis_rx_meta_TVALID(process_ipv4_512_U0_m_axis_rx_meta_TVALID)
);

ipv4_top_ipv4_drop_optional_ip_header_512_s ipv4_drop_optional_ip_header_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ipv4_drop_optional_ip_header_512_U0_ap_start),
    .ap_done(ipv4_drop_optional_ip_header_512_U0_ap_done),
    .ap_continue(ipv4_drop_optional_ip_header_512_U0_ap_continue),
    .ap_idle(ipv4_drop_optional_ip_header_512_U0_ap_idle),
    .ap_ready(ipv4_drop_optional_ip_header_512_U0_ap_ready),
    .rx_process2dropFifo_dout(rx_process2dropFifo_dout),
    .rx_process2dropFifo_num_data_valid(rx_process2dropFifo_num_data_valid),
    .rx_process2dropFifo_fifo_cap(rx_process2dropFifo_fifo_cap),
    .rx_process2dropFifo_empty_n(rx_process2dropFifo_empty_n),
    .rx_process2dropFifo_read(ipv4_drop_optional_ip_header_512_U0_rx_process2dropFifo_read),
    .rx_process2dropLengthFifo_dout(rx_process2dropLengthFifo_dout),
    .rx_process2dropLengthFifo_num_data_valid(rx_process2dropLengthFifo_num_data_valid),
    .rx_process2dropLengthFifo_fifo_cap(rx_process2dropLengthFifo_fifo_cap),
    .rx_process2dropLengthFifo_empty_n(rx_process2dropLengthFifo_empty_n),
    .rx_process2dropLengthFifo_read(ipv4_drop_optional_ip_header_512_U0_rx_process2dropLengthFifo_read),
    .m_axis_rx_data_internal_din(ipv4_drop_optional_ip_header_512_U0_m_axis_rx_data_internal_din),
    .m_axis_rx_data_internal_num_data_valid(m_axis_rx_data_internal_num_data_valid),
    .m_axis_rx_data_internal_fifo_cap(m_axis_rx_data_internal_fifo_cap),
    .m_axis_rx_data_internal_full_n(m_axis_rx_data_internal_full_n),
    .m_axis_rx_data_internal_write(ipv4_drop_optional_ip_header_512_U0_m_axis_rx_data_internal_write)
);

ipv4_top_ipv4_lshiftWordByOctet_512_2_s ipv4_lshiftWordByOctet_512_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ipv4_lshiftWordByOctet_512_2_U0_ap_start),
    .ap_done(ipv4_lshiftWordByOctet_512_2_U0_ap_done),
    .ap_continue(ipv4_lshiftWordByOctet_512_2_U0_ap_continue),
    .ap_idle(ipv4_lshiftWordByOctet_512_2_U0_ap_idle),
    .ap_ready(ipv4_lshiftWordByOctet_512_2_U0_ap_ready),
    .s_axis_tx_data_internal_dout(s_axis_tx_data_internal_dout),
    .s_axis_tx_data_internal_num_data_valid(s_axis_tx_data_internal_num_data_valid),
    .s_axis_tx_data_internal_fifo_cap(s_axis_tx_data_internal_fifo_cap),
    .s_axis_tx_data_internal_empty_n(s_axis_tx_data_internal_empty_n),
    .s_axis_tx_data_internal_read(ipv4_lshiftWordByOctet_512_2_U0_s_axis_tx_data_internal_read),
    .tx_shift2ipv4Fifo_din(ipv4_lshiftWordByOctet_512_2_U0_tx_shift2ipv4Fifo_din),
    .tx_shift2ipv4Fifo_num_data_valid(tx_shift2ipv4Fifo_num_data_valid),
    .tx_shift2ipv4Fifo_fifo_cap(tx_shift2ipv4Fifo_fifo_cap),
    .tx_shift2ipv4Fifo_full_n(tx_shift2ipv4Fifo_full_n),
    .tx_shift2ipv4Fifo_write(ipv4_lshiftWordByOctet_512_2_U0_tx_shift2ipv4Fifo_write)
);

ipv4_top_ipv4_generate_ipv4_512_s ipv4_generate_ipv4_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ipv4_generate_ipv4_512_U0_ap_start),
    .ap_done(ipv4_generate_ipv4_512_U0_ap_done),
    .ap_continue(ipv4_generate_ipv4_512_U0_ap_continue),
    .ap_idle(ipv4_generate_ipv4_512_U0_ap_idle),
    .ap_ready(ipv4_generate_ipv4_512_U0_ap_ready),
    .protocol_dout(protocol_c_dout),
    .protocol_num_data_valid(protocol_c_num_data_valid),
    .protocol_fifo_cap(protocol_c_fifo_cap),
    .protocol_empty_n(protocol_c_empty_n),
    .protocol_read(ipv4_generate_ipv4_512_U0_protocol_read),
    .local_ipv4_address_dout(local_ipv4_address_c_dout),
    .local_ipv4_address_num_data_valid(local_ipv4_address_c_num_data_valid),
    .local_ipv4_address_fifo_cap(local_ipv4_address_c_fifo_cap),
    .local_ipv4_address_empty_n(local_ipv4_address_c_empty_n),
    .local_ipv4_address_read(ipv4_generate_ipv4_512_U0_local_ipv4_address_read),
    .tx_shift2ipv4Fifo_dout(tx_shift2ipv4Fifo_dout),
    .tx_shift2ipv4Fifo_num_data_valid(tx_shift2ipv4Fifo_num_data_valid),
    .tx_shift2ipv4Fifo_fifo_cap(tx_shift2ipv4Fifo_fifo_cap),
    .tx_shift2ipv4Fifo_empty_n(tx_shift2ipv4Fifo_empty_n),
    .tx_shift2ipv4Fifo_read(ipv4_generate_ipv4_512_U0_tx_shift2ipv4Fifo_read),
    .s_axis_tx_meta_TVALID(s_axis_tx_meta_TVALID),
    .m_axis_tx_data_internal_din(ipv4_generate_ipv4_512_U0_m_axis_tx_data_internal_din),
    .m_axis_tx_data_internal_num_data_valid(m_axis_tx_data_internal_num_data_valid),
    .m_axis_tx_data_internal_fifo_cap(m_axis_tx_data_internal_fifo_cap),
    .m_axis_tx_data_internal_full_n(m_axis_tx_data_internal_full_n),
    .m_axis_tx_data_internal_write(ipv4_generate_ipv4_512_U0_m_axis_tx_data_internal_write),
    .s_axis_tx_meta_TDATA(s_axis_tx_meta_TDATA),
    .s_axis_tx_meta_TREADY(ipv4_generate_ipv4_512_U0_s_axis_tx_meta_TREADY)
);

ipv4_top_fifo_w32_d4_S local_ipv4_address_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_local_ipv4_address_c_din),
    .if_full_n(local_ipv4_address_c_full_n),
    .if_write(entry_proc_U0_local_ipv4_address_c_write),
    .if_dout(local_ipv4_address_c_dout),
    .if_num_data_valid(local_ipv4_address_c_num_data_valid),
    .if_fifo_cap(local_ipv4_address_c_fifo_cap),
    .if_empty_n(local_ipv4_address_c_empty_n),
    .if_read(ipv4_generate_ipv4_512_U0_local_ipv4_address_read)
);

ipv4_top_fifo_w8_d4_S protocol_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_protocol_c_din),
    .if_full_n(protocol_c_full_n),
    .if_write(entry_proc_U0_protocol_c_write),
    .if_dout(protocol_c_dout),
    .if_num_data_valid(protocol_c_num_data_valid),
    .if_fifo_cap(protocol_c_fifo_cap),
    .if_empty_n(protocol_c_empty_n),
    .if_read(ipv4_generate_ipv4_512_U0_protocol_read)
);

ipv4_top_fifo_w1024_d2_S s_axis_rx_data_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(convert_axis_to_net_axis_512_U0_s_axis_rx_data_internal_din),
    .if_full_n(s_axis_rx_data_internal_full_n),
    .if_write(convert_axis_to_net_axis_512_U0_s_axis_rx_data_internal_write),
    .if_dout(s_axis_rx_data_internal_dout),
    .if_num_data_valid(s_axis_rx_data_internal_num_data_valid),
    .if_fifo_cap(s_axis_rx_data_internal_fifo_cap),
    .if_empty_n(s_axis_rx_data_internal_empty_n),
    .if_read(process_ipv4_512_U0_s_axis_rx_data_internal_read)
);

ipv4_top_fifo_w1024_d2_S s_axis_tx_data_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_internal_din),
    .if_full_n(s_axis_tx_data_internal_full_n),
    .if_write(convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_internal_write),
    .if_dout(s_axis_tx_data_internal_dout),
    .if_num_data_valid(s_axis_tx_data_internal_num_data_valid),
    .if_fifo_cap(s_axis_tx_data_internal_fifo_cap),
    .if_empty_n(s_axis_tx_data_internal_empty_n),
    .if_read(ipv4_lshiftWordByOctet_512_2_U0_s_axis_tx_data_internal_read)
);

ipv4_top_fifo_w1024_d2_S m_axis_rx_data_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ipv4_drop_optional_ip_header_512_U0_m_axis_rx_data_internal_din),
    .if_full_n(m_axis_rx_data_internal_full_n),
    .if_write(ipv4_drop_optional_ip_header_512_U0_m_axis_rx_data_internal_write),
    .if_dout(m_axis_rx_data_internal_dout),
    .if_num_data_valid(m_axis_rx_data_internal_num_data_valid),
    .if_fifo_cap(m_axis_rx_data_internal_fifo_cap),
    .if_empty_n(m_axis_rx_data_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_U0_m_axis_rx_data_internal_read)
);

ipv4_top_fifo_w1024_d2_S m_axis_tx_data_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ipv4_generate_ipv4_512_U0_m_axis_tx_data_internal_din),
    .if_full_n(m_axis_tx_data_internal_full_n),
    .if_write(ipv4_generate_ipv4_512_U0_m_axis_tx_data_internal_write),
    .if_dout(m_axis_tx_data_internal_dout),
    .if_num_data_valid(m_axis_tx_data_internal_num_data_valid),
    .if_fifo_cap(m_axis_tx_data_internal_fifo_cap),
    .if_empty_n(m_axis_tx_data_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_internal_read)
);

ipv4_top_fifo_w1024_d8_A rx_process2dropFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(process_ipv4_512_U0_rx_process2dropFifo_din),
    .if_full_n(rx_process2dropFifo_full_n),
    .if_write(process_ipv4_512_U0_rx_process2dropFifo_write),
    .if_dout(rx_process2dropFifo_dout),
    .if_num_data_valid(rx_process2dropFifo_num_data_valid),
    .if_fifo_cap(rx_process2dropFifo_fifo_cap),
    .if_empty_n(rx_process2dropFifo_empty_n),
    .if_read(ipv4_drop_optional_ip_header_512_U0_rx_process2dropFifo_read)
);

ipv4_top_fifo_w4_d2_S rx_process2dropLengthFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(process_ipv4_512_U0_rx_process2dropLengthFifo_din),
    .if_full_n(rx_process2dropLengthFifo_full_n),
    .if_write(process_ipv4_512_U0_rx_process2dropLengthFifo_write),
    .if_dout(rx_process2dropLengthFifo_dout),
    .if_num_data_valid(rx_process2dropLengthFifo_num_data_valid),
    .if_fifo_cap(rx_process2dropLengthFifo_fifo_cap),
    .if_empty_n(rx_process2dropLengthFifo_empty_n),
    .if_read(ipv4_drop_optional_ip_header_512_U0_rx_process2dropLengthFifo_read)
);

ipv4_top_fifo_w1024_d8_A tx_shift2ipv4Fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ipv4_lshiftWordByOctet_512_2_U0_tx_shift2ipv4Fifo_din),
    .if_full_n(tx_shift2ipv4Fifo_full_n),
    .if_write(ipv4_lshiftWordByOctet_512_2_U0_tx_shift2ipv4Fifo_write),
    .if_dout(tx_shift2ipv4Fifo_dout),
    .if_num_data_valid(tx_shift2ipv4Fifo_num_data_valid),
    .if_fifo_cap(tx_shift2ipv4Fifo_fifo_cap),
    .if_empty_n(tx_shift2ipv4Fifo_empty_n),
    .if_read(ipv4_generate_ipv4_512_U0_tx_shift2ipv4Fifo_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign convert_axis_to_net_axis_512_1_U0_ap_continue = 1'b1;

assign convert_axis_to_net_axis_512_1_U0_ap_start = 1'b1;

assign convert_axis_to_net_axis_512_U0_ap_continue = 1'b1;

assign convert_axis_to_net_axis_512_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_2_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_2_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_U0_ap_start = 1'b1;

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = 1'b1;

assign ipv4_drop_optional_ip_header_512_U0_ap_continue = 1'b1;

assign ipv4_drop_optional_ip_header_512_U0_ap_start = 1'b1;

assign ipv4_generate_ipv4_512_U0_ap_continue = 1'b1;

assign ipv4_generate_ipv4_512_U0_ap_start = 1'b1;

assign ipv4_lshiftWordByOctet_512_2_U0_ap_continue = 1'b1;

assign ipv4_lshiftWordByOctet_512_2_U0_ap_start = 1'b1;

assign m_axis_rx_data_TDATA = convert_net_axis_to_axis_512_U0_m_axis_rx_data_TDATA;

assign m_axis_rx_data_TKEEP = convert_net_axis_to_axis_512_U0_m_axis_rx_data_TKEEP;

assign m_axis_rx_data_TLAST = convert_net_axis_to_axis_512_U0_m_axis_rx_data_TLAST;

assign m_axis_rx_data_TSTRB = convert_net_axis_to_axis_512_U0_m_axis_rx_data_TSTRB;

assign m_axis_rx_data_TVALID = convert_net_axis_to_axis_512_U0_m_axis_rx_data_TVALID;

assign m_axis_rx_meta_TDATA = process_ipv4_512_U0_m_axis_rx_meta_TDATA;

assign m_axis_rx_meta_TVALID = process_ipv4_512_U0_m_axis_rx_meta_TVALID;

assign m_axis_tx_data_TDATA = convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TDATA;

assign m_axis_tx_data_TKEEP = convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TKEEP;

assign m_axis_tx_data_TLAST = convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TLAST;

assign m_axis_tx_data_TSTRB = convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TSTRB;

assign m_axis_tx_data_TVALID = convert_net_axis_to_axis_512_2_U0_m_axis_tx_data_TVALID;

assign process_ipv4_512_U0_ap_continue = 1'b1;

assign process_ipv4_512_U0_ap_start = 1'b1;

assign s_axis_rx_data_TREADY = convert_axis_to_net_axis_512_U0_s_axis_rx_data_TREADY;

assign s_axis_tx_data_TREADY = convert_axis_to_net_axis_512_1_U0_s_axis_tx_data_TREADY;

assign s_axis_tx_meta_TREADY = ipv4_generate_ipv4_512_U0_s_axis_tx_meta_TREADY;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "ipv4_top_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "ipv4_top_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //ipv4_top

