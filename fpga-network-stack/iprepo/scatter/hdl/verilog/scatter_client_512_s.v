// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module scatter_client_512_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        regIpAddress10_dout,
        regIpAddress10_num_data_valid,
        regIpAddress10_fifo_cap,
        regIpAddress10_empty_n,
        regIpAddress10_read,
        regIpAddress9_dout,
        regIpAddress9_num_data_valid,
        regIpAddress9_fifo_cap,
        regIpAddress9_empty_n,
        regIpAddress9_read,
        regIpAddress8_dout,
        regIpAddress8_num_data_valid,
        regIpAddress8_fifo_cap,
        regIpAddress8_empty_n,
        regIpAddress8_read,
        regIpAddress7_dout,
        regIpAddress7_num_data_valid,
        regIpAddress7_fifo_cap,
        regIpAddress7_empty_n,
        regIpAddress7_read,
        regIpAddress6_dout,
        regIpAddress6_num_data_valid,
        regIpAddress6_fifo_cap,
        regIpAddress6_empty_n,
        regIpAddress6_read,
        regIpAddress5_dout,
        regIpAddress5_num_data_valid,
        regIpAddress5_fifo_cap,
        regIpAddress5_empty_n,
        regIpAddress5_read,
        regIpAddress4_dout,
        regIpAddress4_num_data_valid,
        regIpAddress4_fifo_cap,
        regIpAddress4_empty_n,
        regIpAddress4_read,
        regIpAddress3_dout,
        regIpAddress3_num_data_valid,
        regIpAddress3_fifo_cap,
        regIpAddress3_empty_n,
        regIpAddress3_read,
        regIpAddress2_dout,
        regIpAddress2_num_data_valid,
        regIpAddress2_fifo_cap,
        regIpAddress2_empty_n,
        regIpAddress2_read,
        regIpAddress1_dout,
        regIpAddress1_num_data_valid,
        regIpAddress1_fifo_cap,
        regIpAddress1_empty_n,
        regIpAddress1_read,
        regIpAddress0_dout,
        regIpAddress0_num_data_valid,
        regIpAddress0_fifo_cap,
        regIpAddress0_empty_n,
        regIpAddress0_read,
        clientPkgNum_dout,
        clientPkgNum_num_data_valid,
        clientPkgNum_fifo_cap,
        clientPkgNum_empty_n,
        clientPkgNum_read,
        expectedRespInKB_dout,
        expectedRespInKB_num_data_valid,
        expectedRespInKB_fifo_cap,
        expectedRespInKB_empty_n,
        expectedRespInKB_read,
        regBasePort_dout,
        regBasePort_num_data_valid,
        regBasePort_fifo_cap,
        regBasePort_empty_n,
        regBasePort_read,
        pkgWordCount_dout,
        pkgWordCount_num_data_valid,
        pkgWordCount_fifo_cap,
        pkgWordCount_empty_n,
        pkgWordCount_read,
        useIpAddr_dout,
        useIpAddr_num_data_valid,
        useIpAddr_fifo_cap,
        useIpAddr_empty_n,
        useIpAddr_read,
        useConn_dout,
        useConn_num_data_valid,
        useConn_fifo_cap,
        useConn_empty_n,
        useConn_read,
        runExperiment_dout,
        runExperiment_num_data_valid,
        runExperiment_fifo_cap,
        runExperiment_empty_n,
        runExperiment_read,
        txStatusBuffer_dout,
        txStatusBuffer_num_data_valid,
        txStatusBuffer_fifo_cap,
        txStatusBuffer_empty_n,
        txStatusBuffer_read,
        openConStatusBuffer_dout,
        openConStatusBuffer_num_data_valid,
        openConStatusBuffer_fifo_cap,
        openConStatusBuffer_empty_n,
        openConStatusBuffer_read,
        txMetaDataBuffer_din,
        txMetaDataBuffer_num_data_valid,
        txMetaDataBuffer_fifo_cap,
        txMetaDataBuffer_full_n,
        txMetaDataBuffer_write,
        txDataBuffer_din,
        txDataBuffer_num_data_valid,
        txDataBuffer_fifo_cap,
        txDataBuffer_full_n,
        txDataBuffer_write,
        m_axis_open_connection_TREADY,
        closeConnectionBuffer_din,
        closeConnectionBuffer_num_data_valid,
        closeConnectionBuffer_fifo_cap,
        closeConnectionBuffer_full_n,
        closeConnectionBuffer_write,
        m_axis_open_connection_TDATA,
        m_axis_open_connection_TVALID
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] regIpAddress10_dout;
input  [2:0] regIpAddress10_num_data_valid;
input  [2:0] regIpAddress10_fifo_cap;
input   regIpAddress10_empty_n;
output   regIpAddress10_read;
input  [31:0] regIpAddress9_dout;
input  [2:0] regIpAddress9_num_data_valid;
input  [2:0] regIpAddress9_fifo_cap;
input   regIpAddress9_empty_n;
output   regIpAddress9_read;
input  [31:0] regIpAddress8_dout;
input  [2:0] regIpAddress8_num_data_valid;
input  [2:0] regIpAddress8_fifo_cap;
input   regIpAddress8_empty_n;
output   regIpAddress8_read;
input  [31:0] regIpAddress7_dout;
input  [2:0] regIpAddress7_num_data_valid;
input  [2:0] regIpAddress7_fifo_cap;
input   regIpAddress7_empty_n;
output   regIpAddress7_read;
input  [31:0] regIpAddress6_dout;
input  [2:0] regIpAddress6_num_data_valid;
input  [2:0] regIpAddress6_fifo_cap;
input   regIpAddress6_empty_n;
output   regIpAddress6_read;
input  [31:0] regIpAddress5_dout;
input  [2:0] regIpAddress5_num_data_valid;
input  [2:0] regIpAddress5_fifo_cap;
input   regIpAddress5_empty_n;
output   regIpAddress5_read;
input  [31:0] regIpAddress4_dout;
input  [2:0] regIpAddress4_num_data_valid;
input  [2:0] regIpAddress4_fifo_cap;
input   regIpAddress4_empty_n;
output   regIpAddress4_read;
input  [31:0] regIpAddress3_dout;
input  [2:0] regIpAddress3_num_data_valid;
input  [2:0] regIpAddress3_fifo_cap;
input   regIpAddress3_empty_n;
output   regIpAddress3_read;
input  [31:0] regIpAddress2_dout;
input  [2:0] regIpAddress2_num_data_valid;
input  [2:0] regIpAddress2_fifo_cap;
input   regIpAddress2_empty_n;
output   regIpAddress2_read;
input  [31:0] regIpAddress1_dout;
input  [2:0] regIpAddress1_num_data_valid;
input  [2:0] regIpAddress1_fifo_cap;
input   regIpAddress1_empty_n;
output   regIpAddress1_read;
input  [31:0] regIpAddress0_dout;
input  [2:0] regIpAddress0_num_data_valid;
input  [2:0] regIpAddress0_fifo_cap;
input   regIpAddress0_empty_n;
output   regIpAddress0_read;
input  [31:0] clientPkgNum_dout;
input  [2:0] clientPkgNum_num_data_valid;
input  [2:0] clientPkgNum_fifo_cap;
input   clientPkgNum_empty_n;
output   clientPkgNum_read;
input  [15:0] expectedRespInKB_dout;
input  [2:0] expectedRespInKB_num_data_valid;
input  [2:0] expectedRespInKB_fifo_cap;
input   expectedRespInKB_empty_n;
output   expectedRespInKB_read;
input  [15:0] regBasePort_dout;
input  [2:0] regBasePort_num_data_valid;
input  [2:0] regBasePort_fifo_cap;
input   regBasePort_empty_n;
output   regBasePort_read;
input  [15:0] pkgWordCount_dout;
input  [2:0] pkgWordCount_num_data_valid;
input  [2:0] pkgWordCount_fifo_cap;
input   pkgWordCount_empty_n;
output   pkgWordCount_read;
input  [15:0] useIpAddr_dout;
input  [2:0] useIpAddr_num_data_valid;
input  [2:0] useIpAddr_fifo_cap;
input   useIpAddr_empty_n;
output   useIpAddr_read;
input  [15:0] useConn_dout;
input  [2:0] useConn_num_data_valid;
input  [2:0] useConn_fifo_cap;
input   useConn_empty_n;
output   useConn_read;
input  [0:0] runExperiment_dout;
input  [2:0] runExperiment_num_data_valid;
input  [2:0] runExperiment_fifo_cap;
input   runExperiment_empty_n;
output   runExperiment_read;
input  [95:0] txStatusBuffer_dout;
input  [9:0] txStatusBuffer_num_data_valid;
input  [9:0] txStatusBuffer_fifo_cap;
input   txStatusBuffer_empty_n;
output   txStatusBuffer_read;
input  [95:0] openConStatusBuffer_dout;
input  [9:0] openConStatusBuffer_num_data_valid;
input  [9:0] openConStatusBuffer_fifo_cap;
input   openConStatusBuffer_empty_n;
output   openConStatusBuffer_read;
output  [31:0] txMetaDataBuffer_din;
input  [9:0] txMetaDataBuffer_num_data_valid;
input  [9:0] txMetaDataBuffer_fifo_cap;
input   txMetaDataBuffer_full_n;
output   txMetaDataBuffer_write;
output  [1023:0] txDataBuffer_din;
input  [9:0] txDataBuffer_num_data_valid;
input  [9:0] txDataBuffer_fifo_cap;
input   txDataBuffer_full_n;
output   txDataBuffer_write;
input   m_axis_open_connection_TREADY;
output  [15:0] closeConnectionBuffer_din;
input  [9:0] closeConnectionBuffer_num_data_valid;
input  [9:0] closeConnectionBuffer_fifo_cap;
input   closeConnectionBuffer_full_n;
output   closeConnectionBuffer_write;
output  [47:0] m_axis_open_connection_TDATA;
output   m_axis_open_connection_TVALID;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg regIpAddress10_read;
reg regIpAddress9_read;
reg regIpAddress8_read;
reg regIpAddress7_read;
reg regIpAddress6_read;
reg regIpAddress5_read;
reg regIpAddress4_read;
reg regIpAddress3_read;
reg regIpAddress2_read;
reg regIpAddress1_read;
reg regIpAddress0_read;
reg clientPkgNum_read;
reg expectedRespInKB_read;
reg regBasePort_read;
reg pkgWordCount_read;
reg useIpAddr_read;
reg useConn_read;
reg runExperiment_read;
reg txStatusBuffer_read;
reg openConStatusBuffer_read;
reg[31:0] txMetaDataBuffer_din;
reg txMetaDataBuffer_write;
reg txDataBuffer_write;
reg closeConnectionBuffer_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [2:0] scatterFsmState_load_load_fu_850_p1;
wire   [0:0] tmp_i_50_nbreadreq_fu_298_p3;
reg    ap_predicate_op100_read_state2;
wire   [0:0] tmp_i_nbreadreq_fu_312_p3;
reg    ap_predicate_op115_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [2:0] scatterFsmState_load_reg_1352;
reg   [0:0] and_ln327_reg_1364;
reg    ap_predicate_op200_write_state3;
reg   [0:0] tmp_i_50_reg_1373;
reg   [1:0] tmp_error_V_reg_1382;
reg    ap_predicate_op208_write_state3;
reg   [0:0] tmp_i_reg_1386;
reg   [0:0] icmp_ln279_reg_1395;
reg    ap_predicate_op212_write_state3;
reg   [0:0] icmp_ln1073_reg_1402;
reg    ap_predicate_op216_write_state3;
reg   [0:0] icmp_ln1065_reg_1409;
reg    ap_predicate_op217_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_state3_io;
reg   [2:0] scatterFsmState_load_reg_1352_pp0_iter2_reg;
reg   [0:0] icmp_ln1073_reg_1402_pp0_iter2_reg;
reg    ap_predicate_op218_write_state4;
wire    regslice_both_m_axis_open_connection_U_apdone_blk;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage0_subdone;
reg   [2:0] scatterFsmState;
reg   [15:0] sessionIt_V;
reg   [15:0] closeIt_V;
reg   [15:0] numConnections_V;
reg   [15:0] ipAddressIdx_V;
reg   [15:0] currentPort_V_1;
reg   [31:0] clientPkgCnt_V;
reg   [0:0] sentFirstWord;
reg   [15:0] currentSessionID_V;
reg   [15:0] wordCount_V;
reg    m_axis_open_connection_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    runExperiment_blk_n;
reg    useConn_blk_n;
reg    useIpAddr_blk_n;
reg    pkgWordCount_blk_n;
reg    regBasePort_blk_n;
reg    expectedRespInKB_blk_n;
reg    clientPkgNum_blk_n;
reg    regIpAddress0_blk_n;
reg    regIpAddress1_blk_n;
reg    regIpAddress2_blk_n;
reg    regIpAddress3_blk_n;
reg    regIpAddress4_blk_n;
reg    regIpAddress5_blk_n;
reg    regIpAddress6_blk_n;
reg    regIpAddress7_blk_n;
reg    regIpAddress8_blk_n;
reg    regIpAddress9_blk_n;
reg    regIpAddress10_blk_n;
reg    openConStatusBuffer_blk_n;
reg    txMetaDataBuffer_blk_n;
reg    txStatusBuffer_blk_n;
reg    txDataBuffer_blk_n;
reg    closeConnectionBuffer_blk_n;
reg   [31:0] openTuple_ip_address_V_10_reg_1257;
reg    ap_block_pp0_stage0_11001;
reg   [31:0] openTuple_ip_address_V_9_reg_1262;
reg   [31:0] openTuple_ip_address_V_8_reg_1267;
reg   [31:0] openTuple_ip_address_V_7_reg_1272;
reg   [31:0] openTuple_ip_address_V_6_reg_1277;
reg   [31:0] openTuple_ip_address_V_5_reg_1282;
reg   [31:0] openTuple_ip_address_V_4_reg_1287;
reg   [31:0] openTuple_ip_address_V_3_reg_1292;
reg   [31:0] openTuple_ip_address_V_2_reg_1297;
reg   [31:0] openTuple_ip_address_V_1_reg_1302;
reg   [31:0] openTuple_ip_address_V_reg_1307;
reg   [31:0] lhs_reg_1312;
reg   [15:0] expectedRespInKB_read_reg_1318;
reg   [15:0] expectedRespInKB_read_reg_1318_pp0_iter1_reg;
reg   [15:0] regBasePort_read_reg_1324;
reg   [15:0] pkgWordCount_read_reg_1329;
reg   [15:0] pkgWordCount_read_reg_1329_pp0_iter1_reg;
reg   [15:0] useIpAddr_read_reg_1337;
reg   [15:0] useConn_read_reg_1342;
reg   [0:0] runExperiment_read_reg_1348;
reg   [15:0] openTuple_ip_port_V_reg_1359;
wire   [0:0] and_ln327_fu_919_p2;
wire   [0:0] currWord_last_V_fu_925_p2;
reg   [0:0] currWord_last_V_reg_1368;
wire   [15:0] tmp_sessionID_V_1_fu_970_p1;
reg   [15:0] tmp_sessionID_V_1_reg_1377;
wire   [1:0] tmp_error_V_fu_974_p4;
wire   [15:0] tmp_sessionID_V_fu_1008_p1;
reg   [15:0] tmp_sessionID_V_reg_1390;
wire   [0:0] icmp_ln279_fu_1022_p2;
wire   [0:0] icmp_ln1073_fu_1046_p2;
wire   [0:0] icmp_ln1065_fu_1085_p2;
reg   [0:0] ap_phi_mux_sentFirstWord_flag_0_i_phi_fu_358_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_sentFirstWord_flag_0_i_reg_355;
reg   [0:0] ap_phi_mux_clientPkgCnt_V_flag_1_i_phi_fu_369_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_clientPkgCnt_V_flag_1_i_reg_366;
reg   [31:0] ap_phi_mux_clientPkgCnt_V_new_1_i_phi_fu_380_p4;
wire   [31:0] select_ln345_fu_941_p3;
wire   [31:0] ap_phi_reg_pp0_iter1_clientPkgCnt_V_new_1_i_reg_377;
reg   [0:0] ap_phi_mux_sentFirstWord_flag_1_i_phi_fu_390_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_sentFirstWord_flag_1_i_reg_387;
reg   [0:0] ap_phi_mux_sentFirstWord_new_1_i_phi_fu_401_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_sentFirstWord_new_1_i_reg_398;
reg   [15:0] ap_phi_mux_wordCount_V_new_0_i_phi_fu_412_p4;
wire   [15:0] ap_phi_reg_pp0_iter1_wordCount_V_new_0_i_reg_409;
wire   [15:0] add_ln886_fu_887_p2;
reg   [0:0] ap_phi_mux_ipAddressIdx_V_flag_1_i_phi_fu_422_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_ipAddressIdx_V_flag_1_i_reg_419;
reg   [15:0] ap_phi_mux_ipAddressIdx_V_new_1_i_phi_fu_433_p4;
wire   [15:0] select_ln261_fu_1070_p3;
wire   [15:0] ap_phi_reg_pp0_iter1_ipAddressIdx_V_new_1_i_reg_430;
reg   [0:0] ap_phi_mux_currentPort_V_1_flag_2_i_phi_fu_443_p4;
wire   [0:0] ap_phi_reg_pp0_iter1_currentPort_V_1_flag_2_i_reg_440;
wire   [0:0] icmp_ln1065_3_fu_1057_p2;
reg   [15:0] ap_phi_mux_currentPort_V_1_new_2_i_phi_fu_453_p4;
wire   [15:0] add_ln886_6_fu_1063_p2;
wire   [15:0] ap_phi_reg_pp0_iter1_currentPort_V_1_new_2_i_reg_450;
reg   [0:0] ap_phi_mux_sessionIt_V_flag_3_i_phi_fu_463_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_sessionIt_V_flag_3_i_reg_460;
wire   [0:0] grp_fu_845_p2;
reg   [15:0] ap_phi_mux_sessionIt_V_new_3_i_phi_fu_498_p20;
wire   [15:0] ap_phi_reg_pp0_iter1_sessionIt_V_new_3_i_reg_495;
wire   [15:0] grp_fu_838_p2;
reg   [0:0] ap_phi_mux_ipAddressIdx_V_flag_2_i_phi_fu_531_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_ipAddressIdx_V_flag_2_i_reg_528;
reg   [15:0] ap_phi_mux_ipAddressIdx_V_new_2_i_phi_fu_566_p20;
wire   [15:0] ap_phi_reg_pp0_iter1_ipAddressIdx_V_new_2_i_reg_563;
reg   [0:0] ap_phi_mux_currentPort_V_1_flag_4_i_phi_fu_601_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_currentPort_V_1_flag_4_i_reg_598;
reg   [15:0] ap_phi_mux_currentPort_V_1_new_4_i_phi_fu_636_p20;
wire   [15:0] ap_phi_reg_pp0_iter1_currentPort_V_1_new_4_i_reg_633;
reg   [0:0] ap_phi_mux_clientPkgCnt_V_flag_2_i_phi_fu_670_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_clientPkgCnt_V_flag_2_i_reg_667;
reg   [31:0] ap_phi_mux_clientPkgCnt_V_new_2_i_phi_fu_705_p20;
wire   [31:0] ap_phi_reg_pp0_iter1_clientPkgCnt_V_new_2_i_reg_702;
reg   [0:0] ap_phi_mux_sentFirstWord_flag_2_i_phi_fu_740_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_sentFirstWord_flag_2_i_reg_737;
reg   [0:0] ap_phi_mux_sentFirstWord_new_2_i_phi_fu_775_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_sentFirstWord_new_2_i_reg_772;
wire   [31:0] ap_phi_reg_pp0_iter0_openTuple_ip_address_V_11_reg_807;
reg   [31:0] ap_phi_reg_pp0_iter1_openTuple_ip_address_V_11_reg_807;
reg   [31:0] ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807;
wire   [15:0] ipAddressIdx_V_load_load_fu_867_p1;
wire   [2:0] select_ln345_1_fu_950_p3;
wire   [0:0] icmp_ln1069_fu_1103_p2;
wire   [15:0] add_ln886_2_fu_1091_p2;
wire   [15:0] add_ln887_fu_984_p2;
wire   [15:0] add_ln886_3_fu_1028_p2;
wire   [31:0] p_s_fu_1176_p4;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] p_3_fu_1226_p4;
wire   [31:0] p_2_fu_1239_p4;
wire   [32:0] zext_ln1542_fu_900_p1;
wire   [32:0] zext_ln1073_fu_909_p1;
wire   [32:0] ret_V_fu_903_p2;
wire   [0:0] icmp_ln1073_1_fu_913_p2;
wire   [0:0] xor_ln327_fu_894_p2;
wire   [31:0] add_ln886_4_fu_930_p2;
wire   [0:0] icmp_ln1065_2_fu_936_p2;
wire   [7:0] tmp_success_V_fu_1012_p4;
wire   [15:0] add_ln886_5_fu_1051_p2;
wire   [9:0] trunc_ln232_fu_1173_p1;
wire   [63:0] zext_ln414_fu_1187_p1;
wire   [576:0] tmp_20_i_fu_1190_p11;
wire   [576:0] or_ln174_fu_1212_p2;
wire   [9:0] trunc_ln232_2_fu_1223_p1;
wire   [9:0] trunc_ln232_1_fu_1236_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [47:0] m_axis_open_connection_TDATA_int_regslice;
reg    m_axis_open_connection_TVALID_int_regslice;
wire    m_axis_open_connection_TREADY_int_regslice;
wire    regslice_both_m_axis_open_connection_U_vld_out;
reg    ap_condition_655;
reg    ap_condition_660;
reg    ap_condition_664;
reg    ap_condition_668;
reg    ap_condition_672;
reg    ap_condition_676;
reg    ap_condition_680;
reg    ap_condition_684;
reg    ap_condition_688;
reg    ap_condition_692;
reg    ap_condition_695;
reg    ap_condition_512;
reg    ap_condition_723;
reg    ap_condition_730;
reg    ap_condition_733;
reg    ap_condition_699;
reg    ap_condition_596;
reg    ap_condition_705;
reg    ap_condition_566;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 scatterFsmState = 3'd0;
#0 sessionIt_V = 16'd0;
#0 closeIt_V = 16'd0;
#0 numConnections_V = 16'd0;
#0 ipAddressIdx_V = 16'd0;
#0 currentPort_V_1 = 16'd0;
#0 clientPkgCnt_V = 32'd0;
#0 sentFirstWord = 1'd0;
#0 currentSessionID_V = 16'd0;
#0 wordCount_V = 16'd0;
end

scatter_regslice_both #(
    .DataWidth( 48 ))
regslice_both_m_axis_open_connection_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(m_axis_open_connection_TDATA_int_regslice),
    .vld_in(m_axis_open_connection_TVALID_int_regslice),
    .ack_in(m_axis_open_connection_TREADY_int_regslice),
    .data_out(m_axis_open_connection_TDATA),
    .vld_out(regslice_both_m_axis_open_connection_U_vld_out),
    .ack_out(m_axis_open_connection_TREADY),
    .apdone_blk(regslice_both_m_axis_open_connection_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_512)) begin
        if ((1'b1 == ap_condition_695)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_reg_1307;
        end else if ((1'b1 == ap_condition_692)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_1_reg_1302;
        end else if ((1'b1 == ap_condition_688)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_2_reg_1297;
        end else if ((1'b1 == ap_condition_684)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_3_reg_1292;
        end else if ((1'b1 == ap_condition_680)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_4_reg_1287;
        end else if ((1'b1 == ap_condition_676)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_5_reg_1282;
        end else if ((1'b1 == ap_condition_672)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_6_reg_1277;
        end else if ((1'b1 == ap_condition_668)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_7_reg_1272;
        end else if ((1'b1 == ap_condition_664)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_8_reg_1267;
        end else if ((1'b1 == ap_condition_660)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_9_reg_1262;
        end else if ((1'b1 == ap_condition_655)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= openTuple_ip_address_V_10_reg_1257;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807 <= ap_phi_reg_pp0_iter1_openTuple_ip_address_V_11_reg_807;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_512)) begin
        if ((1'b1 == ap_condition_723)) begin
            closeIt_V <= 16'd0;
        end else if (((icmp_ln1065_fu_1085_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd5))) begin
            closeIt_V <= add_ln886_2_fu_1091_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_512)) begin
        if ((1'b1 == ap_condition_723)) begin
            numConnections_V <= 16'd0;
        end else if ((1'b1 == ap_condition_733)) begin
            numConnections_V <= add_ln886_3_fu_1028_p2;
        end else if ((1'b1 == ap_condition_730)) begin
            numConnections_V <= add_ln887_fu_984_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_512)) begin
        if ((1'b1 == ap_condition_566)) begin
            scatterFsmState <= 3'd1;
        end else if (((icmp_ln1065_fu_1085_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd5))) begin
            scatterFsmState <= 3'd0;
        end else if ((1'b1 == ap_condition_705)) begin
            scatterFsmState <= 3'd5;
        end else if (((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1))) begin
            scatterFsmState <= 3'd2;
        end else if ((1'b1 == ap_condition_596)) begin
            scatterFsmState <= 3'd3;
        end else if ((1'b1 == ap_condition_699)) begin
            scatterFsmState <= 3'd4;
        end else if (((currWord_last_V_fu_925_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd4))) begin
            scatterFsmState <= select_ln345_1_fu_950_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (scatterFsmState_load_load_fu_850_p1 == 3'd4))) begin
        and_ln327_reg_1364 <= and_ln327_fu_919_p2;
        currWord_last_V_reg_1368 <= currWord_last_V_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_openTuple_ip_address_V_11_reg_807 <= ap_phi_reg_pp0_iter0_openTuple_ip_address_V_11_reg_807;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_clientPkgCnt_V_flag_2_i_phi_fu_670_p20 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        clientPkgCnt_V <= ap_phi_mux_clientPkgCnt_V_new_2_i_phi_fu_705_p20;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_currentPort_V_1_flag_4_i_phi_fu_601_p20 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        currentPort_V_1 <= ap_phi_mux_currentPort_V_1_new_4_i_phi_fu_636_p20;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_error_V_fu_974_p4 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_i_50_nbreadreq_fu_298_p3 == 1'd1) & (scatterFsmState == 3'd3))) begin
        currentSessionID_V <= tmp_sessionID_V_1_fu_970_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        expectedRespInKB_read_reg_1318 <= expectedRespInKB_dout;
        expectedRespInKB_read_reg_1318_pp0_iter1_reg <= expectedRespInKB_read_reg_1318;
        lhs_reg_1312 <= clientPkgNum_dout;
        openTuple_ip_address_V_10_reg_1257 <= regIpAddress10_dout;
        openTuple_ip_address_V_1_reg_1302 <= regIpAddress1_dout;
        openTuple_ip_address_V_2_reg_1297 <= regIpAddress2_dout;
        openTuple_ip_address_V_3_reg_1292 <= regIpAddress3_dout;
        openTuple_ip_address_V_4_reg_1287 <= regIpAddress4_dout;
        openTuple_ip_address_V_5_reg_1282 <= regIpAddress5_dout;
        openTuple_ip_address_V_6_reg_1277 <= regIpAddress6_dout;
        openTuple_ip_address_V_7_reg_1272 <= regIpAddress7_dout;
        openTuple_ip_address_V_8_reg_1267 <= regIpAddress8_dout;
        openTuple_ip_address_V_9_reg_1262 <= regIpAddress9_dout;
        openTuple_ip_address_V_reg_1307 <= regIpAddress0_dout;
        openTuple_ip_port_V_reg_1359 <= currentPort_V_1;
        pkgWordCount_read_reg_1329 <= pkgWordCount_dout;
        pkgWordCount_read_reg_1329_pp0_iter1_reg <= pkgWordCount_read_reg_1329;
        regBasePort_read_reg_1324 <= regBasePort_dout;
        runExperiment_read_reg_1348 <= runExperiment_dout;
        scatterFsmState_load_reg_1352 <= scatterFsmState;
        useConn_read_reg_1342 <= useConn_dout;
        useIpAddr_read_reg_1337 <= useIpAddr_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (scatterFsmState_load_load_fu_850_p1 == 3'd5))) begin
        icmp_ln1065_reg_1409 <= icmp_ln1065_fu_1085_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1))) begin
        icmp_ln1073_reg_1402 <= icmp_ln1073_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln1073_reg_1402_pp0_iter2_reg <= icmp_ln1073_reg_1402;
        scatterFsmState_load_reg_1352_pp0_iter2_reg <= scatterFsmState_load_reg_1352;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (scatterFsmState == 3'd2))) begin
        icmp_ln279_reg_1395 <= icmp_ln279_fu_1022_p2;
        tmp_sessionID_V_reg_1390 <= tmp_sessionID_V_fu_1008_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ipAddressIdx_V_flag_2_i_phi_fu_531_p20 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ipAddressIdx_V <= ap_phi_mux_ipAddressIdx_V_new_2_i_phi_fu_566_p20;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_sentFirstWord_flag_2_i_phi_fu_740_p20 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sentFirstWord <= ap_phi_mux_sentFirstWord_new_2_i_phi_fu_775_p20;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_sessionIt_V_flag_3_i_phi_fu_463_p20 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sessionIt_V <= ap_phi_mux_sessionIt_V_new_3_i_phi_fu_498_p20;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_i_50_nbreadreq_fu_298_p3 == 1'd1) & (scatterFsmState == 3'd3))) begin
        tmp_error_V_reg_1382 <= {{txStatusBuffer_dout[65:64]}};
        tmp_sessionID_V_1_reg_1377 <= tmp_sessionID_V_1_fu_970_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (scatterFsmState == 3'd3))) begin
        tmp_i_50_reg_1373 <= tmp_i_50_nbreadreq_fu_298_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (scatterFsmState == 3'd2))) begin
        tmp_i_reg_1386 <= tmp_i_nbreadreq_fu_312_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (scatterFsmState_load_load_fu_850_p1 == 3'd4))) begin
        wordCount_V <= ap_phi_mux_wordCount_V_new_0_i_phi_fu_412_p4;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        if ((currWord_last_V_fu_925_p2 == 1'd0)) begin
            ap_phi_mux_clientPkgCnt_V_flag_1_i_phi_fu_369_p4 = 1'd0;
        end else if ((currWord_last_V_fu_925_p2 == 1'd1)) begin
            ap_phi_mux_clientPkgCnt_V_flag_1_i_phi_fu_369_p4 = 1'd1;
        end else begin
            ap_phi_mux_clientPkgCnt_V_flag_1_i_phi_fu_369_p4 = ap_phi_reg_pp0_iter1_clientPkgCnt_V_flag_1_i_reg_366;
        end
    end else begin
        ap_phi_mux_clientPkgCnt_V_flag_1_i_phi_fu_369_p4 = ap_phi_reg_pp0_iter1_clientPkgCnt_V_flag_1_i_reg_366;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        ap_phi_mux_clientPkgCnt_V_flag_2_i_phi_fu_670_p20 = ap_phi_mux_clientPkgCnt_V_flag_1_i_phi_fu_369_p4;
    end else if (((scatterFsmState_load_load_fu_850_p1 == 3'd5) | (scatterFsmState == 3'd3) | ((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd0) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd1) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((tmp_i_nbreadreq_fu_312_p3 == 1'd0) & (scatterFsmState == 3'd2)))) begin
        ap_phi_mux_clientPkgCnt_V_flag_2_i_phi_fu_670_p20 = 1'd0;
    end else if (((~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_clientPkgCnt_V_flag_2_i_phi_fu_670_p20 = 1'd1;
    end else begin
        ap_phi_mux_clientPkgCnt_V_flag_2_i_phi_fu_670_p20 = ap_phi_reg_pp0_iter1_clientPkgCnt_V_flag_2_i_reg_667;
    end
end

always @ (*) begin
    if (((currWord_last_V_fu_925_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd4))) begin
        ap_phi_mux_clientPkgCnt_V_new_1_i_phi_fu_380_p4 = select_ln345_fu_941_p3;
    end else begin
        ap_phi_mux_clientPkgCnt_V_new_1_i_phi_fu_380_p4 = ap_phi_reg_pp0_iter1_clientPkgCnt_V_new_1_i_reg_377;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        ap_phi_mux_clientPkgCnt_V_new_2_i_phi_fu_705_p20 = ap_phi_mux_clientPkgCnt_V_new_1_i_phi_fu_380_p4;
    end else if (((~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_clientPkgCnt_V_new_2_i_phi_fu_705_p20 = 32'd0;
    end else begin
        ap_phi_mux_clientPkgCnt_V_new_2_i_phi_fu_705_p20 = ap_phi_reg_pp0_iter1_clientPkgCnt_V_new_2_i_reg_702;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd1)) begin
        if ((icmp_ln1073_fu_1046_p2 == 1'd1)) begin
            ap_phi_mux_currentPort_V_1_flag_2_i_phi_fu_443_p4 = icmp_ln1065_3_fu_1057_p2;
        end else if ((icmp_ln1073_fu_1046_p2 == 1'd0)) begin
            ap_phi_mux_currentPort_V_1_flag_2_i_phi_fu_443_p4 = 1'd0;
        end else begin
            ap_phi_mux_currentPort_V_1_flag_2_i_phi_fu_443_p4 = ap_phi_reg_pp0_iter1_currentPort_V_1_flag_2_i_reg_440;
        end
    end else begin
        ap_phi_mux_currentPort_V_1_flag_2_i_phi_fu_443_p4 = ap_phi_reg_pp0_iter1_currentPort_V_1_flag_2_i_reg_440;
    end
end

always @ (*) begin
    if (((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1))) begin
        ap_phi_mux_currentPort_V_1_flag_4_i_phi_fu_601_p20 = ap_phi_mux_currentPort_V_1_flag_2_i_phi_fu_443_p4;
    end else if (((scatterFsmState_load_load_fu_850_p1 == 3'd5) | (scatterFsmState_load_load_fu_850_p1 == 3'd4) | (scatterFsmState == 3'd3) | ((grp_fu_845_p2 == 1'd0) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((grp_fu_845_p2 == 1'd1) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((tmp_i_nbreadreq_fu_312_p3 == 1'd0) & (scatterFsmState == 3'd2)))) begin
        ap_phi_mux_currentPort_V_1_flag_4_i_phi_fu_601_p20 = 1'd0;
    end else if ((((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_currentPort_V_1_flag_4_i_phi_fu_601_p20 = 1'd1;
    end else begin
        ap_phi_mux_currentPort_V_1_flag_4_i_phi_fu_601_p20 = ap_phi_reg_pp0_iter1_currentPort_V_1_flag_4_i_reg_598;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1))) begin
        ap_phi_mux_currentPort_V_1_new_2_i_phi_fu_453_p4 = add_ln886_6_fu_1063_p2;
    end else begin
        ap_phi_mux_currentPort_V_1_new_2_i_phi_fu_453_p4 = ap_phi_reg_pp0_iter1_currentPort_V_1_new_2_i_reg_450;
    end
end

always @ (*) begin
    if (((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1))) begin
        ap_phi_mux_currentPort_V_1_new_4_i_phi_fu_636_p20 = ap_phi_mux_currentPort_V_1_new_2_i_phi_fu_453_p4;
    end else if ((((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)))) begin
        ap_phi_mux_currentPort_V_1_new_4_i_phi_fu_636_p20 = 16'd0;
    end else if ((~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1))) begin
        ap_phi_mux_currentPort_V_1_new_4_i_phi_fu_636_p20 = regBasePort_read_reg_1324;
    end else begin
        ap_phi_mux_currentPort_V_1_new_4_i_phi_fu_636_p20 = ap_phi_reg_pp0_iter1_currentPort_V_1_new_4_i_reg_633;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd1)) begin
        if ((icmp_ln1073_fu_1046_p2 == 1'd1)) begin
            ap_phi_mux_ipAddressIdx_V_flag_1_i_phi_fu_422_p4 = 1'd1;
        end else if ((icmp_ln1073_fu_1046_p2 == 1'd0)) begin
            ap_phi_mux_ipAddressIdx_V_flag_1_i_phi_fu_422_p4 = 1'd0;
        end else begin
            ap_phi_mux_ipAddressIdx_V_flag_1_i_phi_fu_422_p4 = ap_phi_reg_pp0_iter1_ipAddressIdx_V_flag_1_i_reg_419;
        end
    end else begin
        ap_phi_mux_ipAddressIdx_V_flag_1_i_phi_fu_422_p4 = ap_phi_reg_pp0_iter1_ipAddressIdx_V_flag_1_i_reg_419;
    end
end

always @ (*) begin
    if ((((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)))) begin
        ap_phi_mux_ipAddressIdx_V_flag_2_i_phi_fu_531_p20 = ap_phi_mux_ipAddressIdx_V_flag_1_i_phi_fu_422_p4;
    end else if (((scatterFsmState_load_load_fu_850_p1 == 3'd5) | (scatterFsmState_load_load_fu_850_p1 == 3'd4) | (scatterFsmState == 3'd3) | ((grp_fu_845_p2 == 1'd0) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((grp_fu_845_p2 == 1'd1) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((tmp_i_nbreadreq_fu_312_p3 == 1'd0) & (scatterFsmState == 3'd2)))) begin
        ap_phi_mux_ipAddressIdx_V_flag_2_i_phi_fu_531_p20 = 1'd0;
    end else if (((~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_ipAddressIdx_V_flag_2_i_phi_fu_531_p20 = 1'd1;
    end else begin
        ap_phi_mux_ipAddressIdx_V_flag_2_i_phi_fu_531_p20 = ap_phi_reg_pp0_iter1_ipAddressIdx_V_flag_2_i_reg_528;
    end
end

always @ (*) begin
    if (((icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1))) begin
        ap_phi_mux_ipAddressIdx_V_new_1_i_phi_fu_433_p4 = select_ln261_fu_1070_p3;
    end else begin
        ap_phi_mux_ipAddressIdx_V_new_1_i_phi_fu_433_p4 = ap_phi_reg_pp0_iter1_ipAddressIdx_V_new_1_i_reg_430;
    end
end

always @ (*) begin
    if ((((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)))) begin
        ap_phi_mux_ipAddressIdx_V_new_2_i_phi_fu_566_p20 = ap_phi_mux_ipAddressIdx_V_new_1_i_phi_fu_433_p4;
    end else if (((~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_ipAddressIdx_V_new_2_i_phi_fu_566_p20 = 16'd0;
    end else begin
        ap_phi_mux_ipAddressIdx_V_new_2_i_phi_fu_566_p20 = ap_phi_reg_pp0_iter1_ipAddressIdx_V_new_2_i_reg_563;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        if ((1'd0 == and_ln327_fu_919_p2)) begin
            ap_phi_mux_sentFirstWord_flag_0_i_phi_fu_358_p4 = 1'd0;
        end else if ((1'd1 == and_ln327_fu_919_p2)) begin
            ap_phi_mux_sentFirstWord_flag_0_i_phi_fu_358_p4 = 1'd1;
        end else begin
            ap_phi_mux_sentFirstWord_flag_0_i_phi_fu_358_p4 = ap_phi_reg_pp0_iter1_sentFirstWord_flag_0_i_reg_355;
        end
    end else begin
        ap_phi_mux_sentFirstWord_flag_0_i_phi_fu_358_p4 = ap_phi_reg_pp0_iter1_sentFirstWord_flag_0_i_reg_355;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        if ((currWord_last_V_fu_925_p2 == 1'd0)) begin
            ap_phi_mux_sentFirstWord_flag_1_i_phi_fu_390_p4 = ap_phi_mux_sentFirstWord_flag_0_i_phi_fu_358_p4;
        end else if ((currWord_last_V_fu_925_p2 == 1'd1)) begin
            ap_phi_mux_sentFirstWord_flag_1_i_phi_fu_390_p4 = 1'd1;
        end else begin
            ap_phi_mux_sentFirstWord_flag_1_i_phi_fu_390_p4 = ap_phi_reg_pp0_iter1_sentFirstWord_flag_1_i_reg_387;
        end
    end else begin
        ap_phi_mux_sentFirstWord_flag_1_i_phi_fu_390_p4 = ap_phi_reg_pp0_iter1_sentFirstWord_flag_1_i_reg_387;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        ap_phi_mux_sentFirstWord_flag_2_i_phi_fu_740_p20 = ap_phi_mux_sentFirstWord_flag_1_i_phi_fu_390_p4;
    end else if (((scatterFsmState_load_load_fu_850_p1 == 3'd5) | (scatterFsmState == 3'd3) | ((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd0) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd1) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((tmp_i_nbreadreq_fu_312_p3 == 1'd0) & (scatterFsmState == 3'd2)))) begin
        ap_phi_mux_sentFirstWord_flag_2_i_phi_fu_740_p20 = 1'd0;
    end else if (((~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_sentFirstWord_flag_2_i_phi_fu_740_p20 = 1'd1;
    end else begin
        ap_phi_mux_sentFirstWord_flag_2_i_phi_fu_740_p20 = ap_phi_reg_pp0_iter1_sentFirstWord_flag_2_i_reg_737;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        if ((currWord_last_V_fu_925_p2 == 1'd0)) begin
            ap_phi_mux_sentFirstWord_new_1_i_phi_fu_401_p4 = 1'd1;
        end else if ((currWord_last_V_fu_925_p2 == 1'd1)) begin
            ap_phi_mux_sentFirstWord_new_1_i_phi_fu_401_p4 = 1'd0;
        end else begin
            ap_phi_mux_sentFirstWord_new_1_i_phi_fu_401_p4 = ap_phi_reg_pp0_iter1_sentFirstWord_new_1_i_reg_398;
        end
    end else begin
        ap_phi_mux_sentFirstWord_new_1_i_phi_fu_401_p4 = ap_phi_reg_pp0_iter1_sentFirstWord_new_1_i_reg_398;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        ap_phi_mux_sentFirstWord_new_2_i_phi_fu_775_p20 = ap_phi_mux_sentFirstWord_new_1_i_phi_fu_401_p4;
    end else if (((~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_sentFirstWord_new_2_i_phi_fu_775_p20 = 1'd0;
    end else begin
        ap_phi_mux_sentFirstWord_new_2_i_phi_fu_775_p20 = ap_phi_reg_pp0_iter1_sentFirstWord_new_2_i_reg_772;
    end
end

always @ (*) begin
    if (((scatterFsmState_load_load_fu_850_p1 == 3'd5) | (scatterFsmState_load_load_fu_850_p1 == 3'd4) | (scatterFsmState == 3'd3) | ((tmp_i_nbreadreq_fu_312_p3 == 1'd0) & (scatterFsmState == 3'd2)))) begin
        ap_phi_mux_sessionIt_V_flag_3_i_phi_fu_463_p20 = 1'd0;
    end else if ((((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd0) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | ((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd1) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_sessionIt_V_flag_3_i_phi_fu_463_p20 = 1'd1;
    end else begin
        ap_phi_mux_sessionIt_V_flag_3_i_phi_fu_463_p20 = ap_phi_reg_pp0_iter1_sessionIt_V_flag_3_i_reg_460;
    end
end

always @ (*) begin
    if ((((grp_fu_845_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd0) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)))) begin
        ap_phi_mux_sessionIt_V_new_3_i_phi_fu_498_p20 = grp_fu_838_p2;
    end else if ((((grp_fu_845_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1)) | ((grp_fu_845_p2 == 1'd1) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd0)) | (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1)))) begin
        ap_phi_mux_sessionIt_V_new_3_i_phi_fu_498_p20 = 16'd0;
    end else begin
        ap_phi_mux_sessionIt_V_new_3_i_phi_fu_498_p20 = ap_phi_reg_pp0_iter1_sessionIt_V_new_3_i_reg_495;
    end
end

always @ (*) begin
    if ((scatterFsmState_load_load_fu_850_p1 == 3'd4)) begin
        if ((currWord_last_V_fu_925_p2 == 1'd0)) begin
            ap_phi_mux_wordCount_V_new_0_i_phi_fu_412_p4 = add_ln886_fu_887_p2;
        end else if ((currWord_last_V_fu_925_p2 == 1'd1)) begin
            ap_phi_mux_wordCount_V_new_0_i_phi_fu_412_p4 = 16'd0;
        end else begin
            ap_phi_mux_wordCount_V_new_0_i_phi_fu_412_p4 = ap_phi_reg_pp0_iter1_wordCount_V_new_0_i_reg_409;
        end
    end else begin
        ap_phi_mux_wordCount_V_new_0_i_phi_fu_412_p4 = ap_phi_reg_pp0_iter1_wordCount_V_new_0_i_reg_409;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to2 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        clientPkgNum_blk_n = clientPkgNum_empty_n;
    end else begin
        clientPkgNum_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        clientPkgNum_read = 1'b1;
    end else begin
        clientPkgNum_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op217_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        closeConnectionBuffer_blk_n = closeConnectionBuffer_full_n;
    end else begin
        closeConnectionBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op217_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        closeConnectionBuffer_write = 1'b1;
    end else begin
        closeConnectionBuffer_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        expectedRespInKB_blk_n = expectedRespInKB_empty_n;
    end else begin
        expectedRespInKB_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        expectedRespInKB_read = 1'b1;
    end else begin
        expectedRespInKB_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op218_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op216_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        m_axis_open_connection_TDATA_blk_n = m_axis_open_connection_TREADY_int_regslice;
    end else begin
        m_axis_open_connection_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op216_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axis_open_connection_TVALID_int_regslice = 1'b1;
    end else begin
        m_axis_open_connection_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op115_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        openConStatusBuffer_blk_n = openConStatusBuffer_empty_n;
    end else begin
        openConStatusBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op115_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        openConStatusBuffer_read = 1'b1;
    end else begin
        openConStatusBuffer_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        pkgWordCount_blk_n = pkgWordCount_empty_n;
    end else begin
        pkgWordCount_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        pkgWordCount_read = 1'b1;
    end else begin
        pkgWordCount_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regBasePort_blk_n = regBasePort_empty_n;
    end else begin
        regBasePort_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regBasePort_read = 1'b1;
    end else begin
        regBasePort_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress0_blk_n = regIpAddress0_empty_n;
    end else begin
        regIpAddress0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress0_read = 1'b1;
    end else begin
        regIpAddress0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress10_blk_n = regIpAddress10_empty_n;
    end else begin
        regIpAddress10_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress10_read = 1'b1;
    end else begin
        regIpAddress10_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress1_blk_n = regIpAddress1_empty_n;
    end else begin
        regIpAddress1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress1_read = 1'b1;
    end else begin
        regIpAddress1_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress2_blk_n = regIpAddress2_empty_n;
    end else begin
        regIpAddress2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress2_read = 1'b1;
    end else begin
        regIpAddress2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress3_blk_n = regIpAddress3_empty_n;
    end else begin
        regIpAddress3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress3_read = 1'b1;
    end else begin
        regIpAddress3_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress4_blk_n = regIpAddress4_empty_n;
    end else begin
        regIpAddress4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress4_read = 1'b1;
    end else begin
        regIpAddress4_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress5_blk_n = regIpAddress5_empty_n;
    end else begin
        regIpAddress5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress5_read = 1'b1;
    end else begin
        regIpAddress5_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress6_blk_n = regIpAddress6_empty_n;
    end else begin
        regIpAddress6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress6_read = 1'b1;
    end else begin
        regIpAddress6_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress7_blk_n = regIpAddress7_empty_n;
    end else begin
        regIpAddress7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress7_read = 1'b1;
    end else begin
        regIpAddress7_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress8_blk_n = regIpAddress8_empty_n;
    end else begin
        regIpAddress8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress8_read = 1'b1;
    end else begin
        regIpAddress8_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        regIpAddress9_blk_n = regIpAddress9_empty_n;
    end else begin
        regIpAddress9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        regIpAddress9_read = 1'b1;
    end else begin
        regIpAddress9_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        runExperiment_blk_n = runExperiment_empty_n;
    end else begin
        runExperiment_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        runExperiment_read = 1'b1;
    end else begin
        runExperiment_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (scatterFsmState_load_reg_1352 == 3'd4))) begin
        txDataBuffer_blk_n = txDataBuffer_full_n;
    end else begin
        txDataBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (scatterFsmState_load_reg_1352 == 3'd4))) begin
        txDataBuffer_write = 1'b1;
    end else begin
        txDataBuffer_write = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op208_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op200_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op212_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        txMetaDataBuffer_blk_n = txMetaDataBuffer_full_n;
    end else begin
        txMetaDataBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op212_write_state3 == 1'b1)) begin
            txMetaDataBuffer_din = p_2_fu_1239_p4;
        end else if ((ap_predicate_op208_write_state3 == 1'b1)) begin
            txMetaDataBuffer_din = p_3_fu_1226_p4;
        end else if ((ap_predicate_op200_write_state3 == 1'b1)) begin
            txMetaDataBuffer_din = p_s_fu_1176_p4;
        end else begin
            txMetaDataBuffer_din = 'bx;
        end
    end else begin
        txMetaDataBuffer_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op208_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_predicate_op200_write_state3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op212_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        txMetaDataBuffer_write = 1'b1;
    end else begin
        txMetaDataBuffer_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state2 == 1'b1))) begin
        txStatusBuffer_blk_n = txStatusBuffer_empty_n;
    end else begin
        txStatusBuffer_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op100_read_state2 == 1'b1))) begin
        txStatusBuffer_read = 1'b1;
    end else begin
        txStatusBuffer_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        useConn_blk_n = useConn_empty_n;
    end else begin
        useConn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        useConn_read = 1'b1;
    end else begin
        useConn_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_done_reg == 1'b0))) begin
        useIpAddr_blk_n = useIpAddr_empty_n;
    end else begin
        useIpAddr_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        useIpAddr_read = 1'b1;
    end else begin
        useIpAddr_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln886_2_fu_1091_p2 = (closeIt_V + 16'd1);

assign add_ln886_3_fu_1028_p2 = (numConnections_V + 16'd1);

assign add_ln886_4_fu_930_p2 = (clientPkgCnt_V + 32'd1);

assign add_ln886_5_fu_1051_p2 = (ipAddressIdx_V + 16'd1);

assign add_ln886_6_fu_1063_p2 = (currentPort_V_1 + 16'd1);

assign add_ln886_fu_887_p2 = (wordCount_V + 16'd1);

assign add_ln887_fu_984_p2 = ($signed(numConnections_V) + $signed(16'd65535));

assign and_ln327_fu_919_p2 = (xor_ln327_fu_894_p2 & icmp_ln1073_1_fu_913_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op216_write_state3 == 1'b1)) | ((ap_predicate_op217_write_state3 == 1'b1) & (closeConnectionBuffer_full_n == 1'b0)) | ((ap_predicate_op212_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op208_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txDataBuffer_full_n == 1'b0) & (scatterFsmState_load_reg_1352 == 3'd4)) | ((ap_predicate_op200_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op115_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op100_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)))) | ((ap_start == 1'b1) & ((regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (regIpAddress10_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (useIpAddr_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (regBasePort_empty_n == 1'b0) | (expectedRespInKB_empty_n == 1'b0) | (clientPkgNum_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op216_write_state3 == 1'b1)) | ((ap_predicate_op217_write_state3 == 1'b1) & (closeConnectionBuffer_full_n == 1'b0)) | ((ap_predicate_op212_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op208_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txDataBuffer_full_n == 1'b0) & (scatterFsmState_load_reg_1352 == 3'd4)) | ((ap_predicate_op200_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op115_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op100_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)))) | ((ap_start == 1'b1) & ((regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (regIpAddress10_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (useIpAddr_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (regBasePort_empty_n == 1'b0) | (expectedRespInKB_empty_n == 1'b0) | (clientPkgNum_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter3 == 1'b1) & ((regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state4_io) | ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)))) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op216_write_state3 == 1'b1)) | ((ap_predicate_op217_write_state3 == 1'b1) & (closeConnectionBuffer_full_n == 1'b0)) | ((ap_predicate_op212_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op208_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txDataBuffer_full_n == 1'b0) & (scatterFsmState_load_reg_1352 == 3'd4)) | ((ap_predicate_op200_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op115_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op100_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)))) | ((ap_start == 1'b1) & ((regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (regIpAddress10_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (useIpAddr_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (regBasePort_empty_n == 1'b0) | (expectedRespInKB_empty_n == 1'b0) | (clientPkgNum_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((regIpAddress3_empty_n == 1'b0) | (regIpAddress4_empty_n == 1'b0) | (regIpAddress5_empty_n == 1'b0) | (regIpAddress6_empty_n == 1'b0) | (regIpAddress7_empty_n == 1'b0) | (regIpAddress8_empty_n == 1'b0) | (regIpAddress9_empty_n == 1'b0) | (regIpAddress10_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (runExperiment_empty_n == 1'b0) | (useConn_empty_n == 1'b0) | (useIpAddr_empty_n == 1'b0) | (pkgWordCount_empty_n == 1'b0) | (regBasePort_empty_n == 1'b0) | (expectedRespInKB_empty_n == 1'b0) | (clientPkgNum_empty_n == 1'b0) | (regIpAddress0_empty_n == 1'b0) | (regIpAddress1_empty_n == 1'b0) | (regIpAddress2_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op115_read_state2 == 1'b1) & (openConStatusBuffer_empty_n == 1'b0)) | ((ap_predicate_op100_read_state2 == 1'b1) & (txStatusBuffer_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state3_io = ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op216_write_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op216_write_state3 == 1'b1)) | ((ap_predicate_op217_write_state3 == 1'b1) & (closeConnectionBuffer_full_n == 1'b0)) | ((ap_predicate_op212_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((ap_predicate_op208_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)) | ((txDataBuffer_full_n == 1'b0) & (scatterFsmState_load_reg_1352 == 3'd4)) | ((ap_predicate_op200_write_state3 == 1'b1) & (txMetaDataBuffer_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state4_io = ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((regslice_both_m_axis_open_connection_U_apdone_blk == 1'b1) | ((m_axis_open_connection_TREADY_int_regslice == 1'b0) & (ap_predicate_op218_write_state4 == 1'b1)));
end

always @ (*) begin
    ap_condition_512 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_566 = (~(scatterFsmState_load_load_fu_850_p1 == 3'd5) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd1) & ~(scatterFsmState_load_load_fu_850_p1 == 3'd4) & ~(scatterFsmState == 3'd2) & ~(scatterFsmState == 3'd3) & (runExperiment_read_reg_1348 == 1'd1));
end

always @ (*) begin
    ap_condition_596 = ((grp_fu_845_p2 == 1'd1) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2));
end

always @ (*) begin
    ap_condition_655 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd10) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_660 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd9) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_664 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd8) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_668 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd7) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_672 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd6) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_676 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd5) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_680 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd4) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_684 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd3) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_688 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd2) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_692 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd1) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_695 = ((ipAddressIdx_V_load_load_fu_867_p1 == 16'd0) & (icmp_ln1073_fu_1046_p2 == 1'd1) & (scatterFsmState_load_load_fu_850_p1 == 3'd1));
end

always @ (*) begin
    ap_condition_699 = ((tmp_error_V_fu_974_p4 == 2'd0) & (tmp_i_50_nbreadreq_fu_298_p3 == 1'd1) & (scatterFsmState == 3'd3));
end

always @ (*) begin
    ap_condition_705 = ((icmp_ln1069_fu_1103_p2 == 1'd0) & (icmp_ln1065_fu_1085_p2 == 1'd0) & (scatterFsmState_load_load_fu_850_p1 == 3'd5));
end

always @ (*) begin
    ap_condition_723 = ((scatterFsmState_load_load_fu_850_p1 == 3'd0) | ((scatterFsmState_load_load_fu_850_p1 == 3'd6) | (scatterFsmState_load_load_fu_850_p1 == 3'd7)));
end

always @ (*) begin
    ap_condition_730 = ((tmp_error_V_fu_974_p4 == 2'd1) & (tmp_i_50_nbreadreq_fu_298_p3 == 1'd1) & (scatterFsmState == 3'd3));
end

always @ (*) begin
    ap_condition_733 = ((icmp_ln279_fu_1022_p2 == 1'd0) & (tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_openTuple_ip_address_V_11_reg_807 = 'bx;

assign ap_phi_reg_pp0_iter1_clientPkgCnt_V_flag_1_i_reg_366 = 'bx;

assign ap_phi_reg_pp0_iter1_clientPkgCnt_V_flag_2_i_reg_667 = 'bx;

assign ap_phi_reg_pp0_iter1_clientPkgCnt_V_new_1_i_reg_377 = 'bx;

assign ap_phi_reg_pp0_iter1_clientPkgCnt_V_new_2_i_reg_702 = 'bx;

assign ap_phi_reg_pp0_iter1_currentPort_V_1_flag_2_i_reg_440 = 'bx;

assign ap_phi_reg_pp0_iter1_currentPort_V_1_flag_4_i_reg_598 = 'bx;

assign ap_phi_reg_pp0_iter1_currentPort_V_1_new_2_i_reg_450 = 'bx;

assign ap_phi_reg_pp0_iter1_currentPort_V_1_new_4_i_reg_633 = 'bx;

assign ap_phi_reg_pp0_iter1_ipAddressIdx_V_flag_1_i_reg_419 = 'bx;

assign ap_phi_reg_pp0_iter1_ipAddressIdx_V_flag_2_i_reg_528 = 'bx;

assign ap_phi_reg_pp0_iter1_ipAddressIdx_V_new_1_i_reg_430 = 'bx;

assign ap_phi_reg_pp0_iter1_ipAddressIdx_V_new_2_i_reg_563 = 'bx;

assign ap_phi_reg_pp0_iter1_sentFirstWord_flag_0_i_reg_355 = 'bx;

assign ap_phi_reg_pp0_iter1_sentFirstWord_flag_1_i_reg_387 = 'bx;

assign ap_phi_reg_pp0_iter1_sentFirstWord_flag_2_i_reg_737 = 'bx;

assign ap_phi_reg_pp0_iter1_sentFirstWord_new_1_i_reg_398 = 'bx;

assign ap_phi_reg_pp0_iter1_sentFirstWord_new_2_i_reg_772 = 'bx;

assign ap_phi_reg_pp0_iter1_sessionIt_V_flag_3_i_reg_460 = 'bx;

assign ap_phi_reg_pp0_iter1_sessionIt_V_new_3_i_reg_495 = 'bx;

assign ap_phi_reg_pp0_iter1_wordCount_V_new_0_i_reg_409 = 'bx;

always @ (*) begin
    ap_predicate_op100_read_state2 = ((tmp_i_50_nbreadreq_fu_298_p3 == 1'd1) & (scatterFsmState == 3'd3));
end

always @ (*) begin
    ap_predicate_op115_read_state2 = ((tmp_i_nbreadreq_fu_312_p3 == 1'd1) & (scatterFsmState == 3'd2));
end

always @ (*) begin
    ap_predicate_op200_write_state3 = ((scatterFsmState_load_reg_1352 == 3'd4) & (1'd1 == and_ln327_reg_1364));
end

always @ (*) begin
    ap_predicate_op208_write_state3 = (~(tmp_error_V_reg_1382 == 2'd1) & ~(tmp_error_V_reg_1382 == 2'd0) & (tmp_i_50_reg_1373 == 1'd1) & (scatterFsmState_load_reg_1352 == 3'd3));
end

always @ (*) begin
    ap_predicate_op212_write_state3 = ((icmp_ln279_reg_1395 == 1'd0) & (tmp_i_reg_1386 == 1'd1) & (scatterFsmState_load_reg_1352 == 3'd2));
end

always @ (*) begin
    ap_predicate_op216_write_state3 = ((icmp_ln1073_reg_1402 == 1'd1) & (scatterFsmState_load_reg_1352 == 3'd1));
end

always @ (*) begin
    ap_predicate_op217_write_state3 = ((icmp_ln1065_reg_1409 == 1'd0) & (scatterFsmState_load_reg_1352 == 3'd5));
end

always @ (*) begin
    ap_predicate_op218_write_state4 = ((icmp_ln1073_reg_1402_pp0_iter2_reg == 1'd1) & (scatterFsmState_load_reg_1352_pp0_iter2_reg == 3'd1));
end

assign closeConnectionBuffer_din = 16'd0;

assign currWord_last_V_fu_925_p2 = ((add_ln886_fu_887_p2 == pkgWordCount_read_reg_1329) ? 1'b1 : 1'b0);

assign grp_fu_838_p2 = (sessionIt_V + 16'd1);

assign grp_fu_845_p2 = ((grp_fu_838_p2 == useConn_read_reg_1342) ? 1'b1 : 1'b0);

assign icmp_ln1065_2_fu_936_p2 = ((add_ln886_4_fu_930_p2 == lhs_reg_1312) ? 1'b1 : 1'b0);

assign icmp_ln1065_3_fu_1057_p2 = ((add_ln886_5_fu_1051_p2 == useIpAddr_read_reg_1337) ? 1'b1 : 1'b0);

assign icmp_ln1065_fu_1085_p2 = ((closeIt_V == numConnections_V) ? 1'b1 : 1'b0);

assign icmp_ln1069_fu_1103_p2 = ((add_ln886_2_fu_1091_p2 == numConnections_V) ? 1'b1 : 1'b0);

assign icmp_ln1073_1_fu_913_p2 = (($signed(zext_ln1073_fu_909_p1) < $signed(ret_V_fu_903_p2)) ? 1'b1 : 1'b0);

assign icmp_ln1073_fu_1046_p2 = ((sessionIt_V < useConn_read_reg_1342) ? 1'b1 : 1'b0);

assign icmp_ln279_fu_1022_p2 = ((tmp_success_V_fu_1012_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ipAddressIdx_V_load_load_fu_867_p1 = ipAddressIdx_V;

assign m_axis_open_connection_TDATA_int_regslice = {{openTuple_ip_port_V_reg_1359}, {ap_phi_reg_pp0_iter2_openTuple_ip_address_V_11_reg_807}};

assign m_axis_open_connection_TVALID = regslice_both_m_axis_open_connection_U_vld_out;

assign or_ln174_fu_1212_p2 = (tmp_20_i_fu_1190_p11 | 577'd247330401473104534047094713089704592935557324103005993786583690272304831728808305726594637031169498012795797127849235911661333176120265159113792272289946597970173123142615040);

assign p_2_fu_1239_p4 = {{{trunc_ln232_1_fu_1236_p1}, {6'd0}}, {tmp_sessionID_V_reg_1390}};

assign p_3_fu_1226_p4 = {{{trunc_ln232_2_fu_1223_p1}, {6'd0}}, {tmp_sessionID_V_1_reg_1377}};

assign p_s_fu_1176_p4 = {{{trunc_ln232_fu_1173_p1}, {6'd0}}, {currentSessionID_V}};

assign ret_V_fu_903_p2 = ($signed(zext_ln1542_fu_900_p1) + $signed(33'd8589934591));

assign scatterFsmState_load_load_fu_850_p1 = scatterFsmState;

assign select_ln261_fu_1070_p3 = ((icmp_ln1065_3_fu_1057_p2[0:0] == 1'b1) ? 16'd0 : add_ln886_5_fu_1051_p2);

assign select_ln345_1_fu_950_p3 = ((icmp_ln1065_2_fu_936_p2[0:0] == 1'b1) ? 3'd5 : 3'd3);

assign select_ln345_fu_941_p3 = ((icmp_ln1065_2_fu_936_p2[0:0] == 1'b1) ? 32'd0 : add_ln886_4_fu_930_p2);

assign tmp_20_i_fu_1190_p11 = {{{{{{{{{{currWord_last_V_reg_1368}, {112'd0}}, {expectedRespInKB_read_reg_1318_pp0_iter1_reg}}, {zext_ln414_fu_1187_p1}}, {zext_ln414_fu_1187_p1}}, {zext_ln414_fu_1187_p1}}, {zext_ln414_fu_1187_p1}}, {zext_ln414_fu_1187_p1}}, {zext_ln414_fu_1187_p1}}, {zext_ln414_fu_1187_p1}};

assign tmp_error_V_fu_974_p4 = {{txStatusBuffer_dout[65:64]}};

assign tmp_i_50_nbreadreq_fu_298_p3 = txStatusBuffer_empty_n;

assign tmp_i_nbreadreq_fu_312_p3 = openConStatusBuffer_empty_n;

assign tmp_sessionID_V_1_fu_970_p1 = txStatusBuffer_dout[15:0];

assign tmp_sessionID_V_fu_1008_p1 = openConStatusBuffer_dout[15:0];

assign tmp_success_V_fu_1012_p4 = {{openConStatusBuffer_dout[23:16]}};

assign trunc_ln232_1_fu_1236_p1 = pkgWordCount_read_reg_1329_pp0_iter1_reg[9:0];

assign trunc_ln232_2_fu_1223_p1 = pkgWordCount_read_reg_1329_pp0_iter1_reg[9:0];

assign trunc_ln232_fu_1173_p1 = pkgWordCount_read_reg_1329_pp0_iter1_reg[9:0];

assign txDataBuffer_din = or_ln174_fu_1212_p2;

assign xor_ln327_fu_894_p2 = (sentFirstWord ^ 1'd1);

assign zext_ln1073_fu_909_p1 = clientPkgCnt_V;

assign zext_ln1542_fu_900_p1 = lhs_reg_1312;

assign zext_ln414_fu_1187_p1 = expectedRespInKB_read_reg_1318_pp0_iter1_reg;

endmodule //scatter_client_512_s
