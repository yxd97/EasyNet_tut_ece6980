// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="scatter_scatter,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.079982,HLS_SYN_LAT=6,HLS_SYN_TPT=1,HLS_SYN_MEM=68,HLS_SYN_DSP=0,HLS_SYN_FF=7248,HLS_SYN_LUT=5568,HLS_VERSION=2022_1}" *)

module scatter (
        m_axis_listen_port_TDATA,
        s_axis_listen_port_status_TDATA,
        s_axis_notifications_TDATA,
        m_axis_read_package_TDATA,
        s_axis_rx_metadata_TDATA,
        s_axis_rx_data_TDATA,
        s_axis_rx_data_TKEEP,
        s_axis_rx_data_TSTRB,
        s_axis_rx_data_TLAST,
        m_axis_open_connection_TDATA,
        s_axis_open_status_TDATA,
        m_axis_close_connection_TDATA,
        m_axis_tx_metadata_TDATA,
        m_axis_tx_data_TDATA,
        m_axis_tx_data_TKEEP,
        m_axis_tx_data_TSTRB,
        m_axis_tx_data_TLAST,
        s_axis_tx_status_TDATA,
        runExperiment,
        useConn,
        useIpAddr,
        pkgWordCount,
        regBasePort,
        usePort,
        expectedRespInKB,
        finishExperiment,
        clientPkgNum,
        regIpAddress0,
        regIpAddress1,
        regIpAddress2,
        regIpAddress3,
        regIpAddress4,
        regIpAddress5,
        regIpAddress6,
        regIpAddress7,
        regIpAddress8,
        regIpAddress9,
        regIpAddress10,
        ap_clk,
        ap_rst_n,
        s_axis_open_status_TVALID,
        s_axis_open_status_TREADY,
        s_axis_tx_status_TVALID,
        s_axis_tx_status_TREADY,
        m_axis_tx_data_TVALID,
        m_axis_tx_data_TREADY,
        s_axis_rx_data_TVALID,
        s_axis_rx_data_TREADY,
        m_axis_open_connection_TVALID,
        m_axis_open_connection_TREADY,
        m_axis_tx_metadata_TVALID,
        m_axis_tx_metadata_TREADY,
        m_axis_close_connection_TVALID,
        m_axis_close_connection_TREADY,
        m_axis_listen_port_TVALID,
        m_axis_listen_port_TREADY,
        s_axis_listen_port_status_TVALID,
        s_axis_listen_port_status_TREADY,
        s_axis_notifications_TVALID,
        s_axis_notifications_TREADY,
        m_axis_read_package_TVALID,
        m_axis_read_package_TREADY,
        s_axis_rx_metadata_TVALID,
        s_axis_rx_metadata_TREADY
);


output  [15:0] m_axis_listen_port_TDATA;
input  [7:0] s_axis_listen_port_status_TDATA;
input  [87:0] s_axis_notifications_TDATA;
output  [31:0] m_axis_read_package_TDATA;
input  [15:0] s_axis_rx_metadata_TDATA;
input  [511:0] s_axis_rx_data_TDATA;
input  [63:0] s_axis_rx_data_TKEEP;
input  [63:0] s_axis_rx_data_TSTRB;
input  [0:0] s_axis_rx_data_TLAST;
output  [47:0] m_axis_open_connection_TDATA;
input  [71:0] s_axis_open_status_TDATA;
output  [15:0] m_axis_close_connection_TDATA;
output  [31:0] m_axis_tx_metadata_TDATA;
output  [511:0] m_axis_tx_data_TDATA;
output  [63:0] m_axis_tx_data_TKEEP;
output  [63:0] m_axis_tx_data_TSTRB;
output  [0:0] m_axis_tx_data_TLAST;
input  [63:0] s_axis_tx_status_TDATA;
input  [0:0] runExperiment;
input  [15:0] useConn;
input  [15:0] useIpAddr;
input  [15:0] pkgWordCount;
input  [15:0] regBasePort;
input  [15:0] usePort;
input  [15:0] expectedRespInKB;
input  [0:0] finishExperiment;
input  [31:0] clientPkgNum;
input  [31:0] regIpAddress0;
input  [31:0] regIpAddress1;
input  [31:0] regIpAddress2;
input  [31:0] regIpAddress3;
input  [31:0] regIpAddress4;
input  [31:0] regIpAddress5;
input  [31:0] regIpAddress6;
input  [31:0] regIpAddress7;
input  [31:0] regIpAddress8;
input  [31:0] regIpAddress9;
input  [31:0] regIpAddress10;
input   ap_clk;
input   ap_rst_n;
input   s_axis_open_status_TVALID;
output   s_axis_open_status_TREADY;
input   s_axis_tx_status_TVALID;
output   s_axis_tx_status_TREADY;
output   m_axis_tx_data_TVALID;
input   m_axis_tx_data_TREADY;
input   s_axis_rx_data_TVALID;
output   s_axis_rx_data_TREADY;
output   m_axis_open_connection_TVALID;
input   m_axis_open_connection_TREADY;
output   m_axis_tx_metadata_TVALID;
input   m_axis_tx_metadata_TREADY;
output   m_axis_close_connection_TVALID;
input   m_axis_close_connection_TREADY;
output   m_axis_listen_port_TVALID;
input   m_axis_listen_port_TREADY;
input   s_axis_listen_port_status_TVALID;
output   s_axis_listen_port_status_TREADY;
input   s_axis_notifications_TVALID;
output   s_axis_notifications_TREADY;
output   m_axis_read_package_TVALID;
input   m_axis_read_package_TREADY;
input   s_axis_rx_metadata_TVALID;
output   s_axis_rx_metadata_TREADY;

 reg    ap_rst_n_inv;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [0:0] entry_proc_U0_runExperiment_c_din;
wire    entry_proc_U0_runExperiment_c_write;
wire   [0:0] entry_proc_U0_runExperiment_c40_din;
wire    entry_proc_U0_runExperiment_c40_write;
wire   [15:0] entry_proc_U0_useConn_c_din;
wire    entry_proc_U0_useConn_c_write;
wire   [15:0] entry_proc_U0_useIpAddr_c_din;
wire    entry_proc_U0_useIpAddr_c_write;
wire   [15:0] entry_proc_U0_pkgWordCount_c_din;
wire    entry_proc_U0_pkgWordCount_c_write;
wire   [15:0] entry_proc_U0_regBasePort_c_din;
wire    entry_proc_U0_regBasePort_c_write;
wire   [15:0] entry_proc_U0_regBasePort_c41_din;
wire    entry_proc_U0_regBasePort_c41_write;
wire   [15:0] entry_proc_U0_usePort_c_din;
wire    entry_proc_U0_usePort_c_write;
wire   [15:0] entry_proc_U0_expectedRespInKB_c_din;
wire    entry_proc_U0_expectedRespInKB_c_write;
wire   [31:0] entry_proc_U0_clientPkgNum_c_din;
wire    entry_proc_U0_clientPkgNum_c_write;
wire   [31:0] entry_proc_U0_regIpAddress0_c_din;
wire    entry_proc_U0_regIpAddress0_c_write;
wire   [31:0] entry_proc_U0_regIpAddress1_c_din;
wire    entry_proc_U0_regIpAddress1_c_write;
wire   [31:0] entry_proc_U0_regIpAddress2_c_din;
wire    entry_proc_U0_regIpAddress2_c_write;
wire   [31:0] entry_proc_U0_regIpAddress3_c_din;
wire    entry_proc_U0_regIpAddress3_c_write;
wire   [31:0] entry_proc_U0_regIpAddress4_c_din;
wire    entry_proc_U0_regIpAddress4_c_write;
wire   [31:0] entry_proc_U0_regIpAddress5_c_din;
wire    entry_proc_U0_regIpAddress5_c_write;
wire   [31:0] entry_proc_U0_regIpAddress6_c_din;
wire    entry_proc_U0_regIpAddress6_c_write;
wire   [31:0] entry_proc_U0_regIpAddress7_c_din;
wire    entry_proc_U0_regIpAddress7_c_write;
wire   [31:0] entry_proc_U0_regIpAddress8_c_din;
wire    entry_proc_U0_regIpAddress8_c_write;
wire   [31:0] entry_proc_U0_regIpAddress9_c_din;
wire    entry_proc_U0_regIpAddress9_c_write;
wire   [31:0] entry_proc_U0_regIpAddress10_c_din;
wire    entry_proc_U0_regIpAddress10_c_write;
wire    openStatus_handler_U0_ap_start;
wire    openStatus_handler_U0_ap_done;
wire    openStatus_handler_U0_ap_continue;
wire    openStatus_handler_U0_ap_idle;
wire    openStatus_handler_U0_ap_ready;
wire   [95:0] openStatus_handler_U0_openConStatusBuffer_din;
wire    openStatus_handler_U0_openConStatusBuffer_write;
wire    openStatus_handler_U0_s_axis_open_status_TREADY;
wire    txStatus_handler_U0_ap_start;
wire    txStatus_handler_U0_ap_done;
wire    txStatus_handler_U0_ap_continue;
wire    txStatus_handler_U0_ap_idle;
wire    txStatus_handler_U0_ap_ready;
wire   [95:0] txStatus_handler_U0_txStatusBuffer_din;
wire    txStatus_handler_U0_txStatusBuffer_write;
wire    txStatus_handler_U0_s_axis_tx_status_TREADY;
wire    txDataBuffer_handler_512_U0_ap_start;
wire    txDataBuffer_handler_512_U0_ap_done;
wire    txDataBuffer_handler_512_U0_ap_continue;
wire    txDataBuffer_handler_512_U0_ap_idle;
wire    txDataBuffer_handler_512_U0_ap_ready;
wire    txDataBuffer_handler_512_U0_txDataBuffer_read;
wire   [511:0] txDataBuffer_handler_512_U0_m_axis_tx_data_TDATA;
wire    txDataBuffer_handler_512_U0_m_axis_tx_data_TVALID;
wire   [63:0] txDataBuffer_handler_512_U0_m_axis_tx_data_TKEEP;
wire   [63:0] txDataBuffer_handler_512_U0_m_axis_tx_data_TSTRB;
wire   [0:0] txDataBuffer_handler_512_U0_m_axis_tx_data_TLAST;
wire    rxDataBuffer_handler_512_U0_ap_start;
wire    rxDataBuffer_handler_512_U0_ap_done;
wire    rxDataBuffer_handler_512_U0_ap_continue;
wire    rxDataBuffer_handler_512_U0_ap_idle;
wire    rxDataBuffer_handler_512_U0_ap_ready;
wire   [1023:0] rxDataBuffer_handler_512_U0_rxDataBuffer_din;
wire    rxDataBuffer_handler_512_U0_rxDataBuffer_write;
wire    rxDataBuffer_handler_512_U0_s_axis_rx_data_TREADY;
wire    client_512_U0_ap_start;
wire    client_512_U0_ap_done;
wire    client_512_U0_ap_continue;
wire    client_512_U0_ap_idle;
wire    client_512_U0_ap_ready;
wire    client_512_U0_regIpAddress10_read;
wire    client_512_U0_regIpAddress9_read;
wire    client_512_U0_regIpAddress8_read;
wire    client_512_U0_regIpAddress7_read;
wire    client_512_U0_regIpAddress6_read;
wire    client_512_U0_regIpAddress5_read;
wire    client_512_U0_regIpAddress4_read;
wire    client_512_U0_regIpAddress3_read;
wire    client_512_U0_regIpAddress2_read;
wire    client_512_U0_regIpAddress1_read;
wire    client_512_U0_regIpAddress0_read;
wire    client_512_U0_clientPkgNum_read;
wire    client_512_U0_expectedRespInKB_read;
wire    client_512_U0_regBasePort_read;
wire    client_512_U0_pkgWordCount_read;
wire    client_512_U0_useIpAddr_read;
wire    client_512_U0_useConn_read;
wire    client_512_U0_runExperiment_read;
wire    client_512_U0_txStatusBuffer_read;
wire    client_512_U0_openConStatusBuffer_read;
wire   [31:0] client_512_U0_txMetaDataBuffer_din;
wire    client_512_U0_txMetaDataBuffer_write;
wire   [1023:0] client_512_U0_txDataBuffer_din;
wire    client_512_U0_txDataBuffer_write;
wire   [15:0] client_512_U0_closeConnectionBuffer_din;
wire    client_512_U0_closeConnectionBuffer_write;
wire   [47:0] client_512_U0_m_axis_open_connection_TDATA;
wire    client_512_U0_m_axis_open_connection_TVALID;
wire    txMetaData_handler_U0_ap_start;
wire    txMetaData_handler_U0_ap_done;
wire    txMetaData_handler_U0_ap_continue;
wire    txMetaData_handler_U0_ap_idle;
wire    txMetaData_handler_U0_ap_ready;
wire    txMetaData_handler_U0_txMetaDataBuffer_read;
wire   [31:0] txMetaData_handler_U0_m_axis_tx_metadata_TDATA;
wire    txMetaData_handler_U0_m_axis_tx_metadata_TVALID;
wire    closeConnection_handler_U0_ap_start;
wire    closeConnection_handler_U0_ap_done;
wire    closeConnection_handler_U0_ap_continue;
wire    closeConnection_handler_U0_ap_idle;
wire    closeConnection_handler_U0_ap_ready;
wire    closeConnection_handler_U0_closeConnectionBuffer_read;
wire   [15:0] closeConnection_handler_U0_m_axis_close_connection_TDATA;
wire    closeConnection_handler_U0_m_axis_close_connection_TVALID;
wire    server_512_U0_ap_start;
wire    server_512_U0_ap_done;
wire    server_512_U0_ap_continue;
wire    server_512_U0_ap_idle;
wire    server_512_U0_ap_ready;
wire    server_512_U0_usePort_read;
wire    server_512_U0_regBasePort_read;
wire    server_512_U0_runExperiment_read;
wire    server_512_U0_rxDataBuffer_read;
wire   [15:0] server_512_U0_m_axis_listen_port_TDATA;
wire    server_512_U0_m_axis_listen_port_TVALID;
wire    server_512_U0_s_axis_listen_port_status_TREADY;
wire    server_512_U0_s_axis_notifications_TREADY;
wire   [31:0] server_512_U0_m_axis_read_package_TDATA;
wire    server_512_U0_m_axis_read_package_TVALID;
wire    server_512_U0_s_axis_rx_metadata_TREADY;
wire    runExperiment_c_full_n;
wire   [0:0] runExperiment_c_dout;
wire   [2:0] runExperiment_c_num_data_valid;
wire   [2:0] runExperiment_c_fifo_cap;
wire    runExperiment_c_empty_n;
wire    runExperiment_c40_full_n;
wire   [0:0] runExperiment_c40_dout;
wire   [2:0] runExperiment_c40_num_data_valid;
wire   [2:0] runExperiment_c40_fifo_cap;
wire    runExperiment_c40_empty_n;
wire    useConn_c_full_n;
wire   [15:0] useConn_c_dout;
wire   [2:0] useConn_c_num_data_valid;
wire   [2:0] useConn_c_fifo_cap;
wire    useConn_c_empty_n;
wire    useIpAddr_c_full_n;
wire   [15:0] useIpAddr_c_dout;
wire   [2:0] useIpAddr_c_num_data_valid;
wire   [2:0] useIpAddr_c_fifo_cap;
wire    useIpAddr_c_empty_n;
wire    pkgWordCount_c_full_n;
wire   [15:0] pkgWordCount_c_dout;
wire   [2:0] pkgWordCount_c_num_data_valid;
wire   [2:0] pkgWordCount_c_fifo_cap;
wire    pkgWordCount_c_empty_n;
wire    regBasePort_c_full_n;
wire   [15:0] regBasePort_c_dout;
wire   [2:0] regBasePort_c_num_data_valid;
wire   [2:0] regBasePort_c_fifo_cap;
wire    regBasePort_c_empty_n;
wire    regBasePort_c41_full_n;
wire   [15:0] regBasePort_c41_dout;
wire   [2:0] regBasePort_c41_num_data_valid;
wire   [2:0] regBasePort_c41_fifo_cap;
wire    regBasePort_c41_empty_n;
wire    usePort_c_full_n;
wire   [15:0] usePort_c_dout;
wire   [2:0] usePort_c_num_data_valid;
wire   [2:0] usePort_c_fifo_cap;
wire    usePort_c_empty_n;
wire    expectedRespInKB_c_full_n;
wire   [15:0] expectedRespInKB_c_dout;
wire   [2:0] expectedRespInKB_c_num_data_valid;
wire   [2:0] expectedRespInKB_c_fifo_cap;
wire    expectedRespInKB_c_empty_n;
wire    clientPkgNum_c_full_n;
wire   [31:0] clientPkgNum_c_dout;
wire   [2:0] clientPkgNum_c_num_data_valid;
wire   [2:0] clientPkgNum_c_fifo_cap;
wire    clientPkgNum_c_empty_n;
wire    regIpAddress0_c_full_n;
wire   [31:0] regIpAddress0_c_dout;
wire   [2:0] regIpAddress0_c_num_data_valid;
wire   [2:0] regIpAddress0_c_fifo_cap;
wire    regIpAddress0_c_empty_n;
wire    regIpAddress1_c_full_n;
wire   [31:0] regIpAddress1_c_dout;
wire   [2:0] regIpAddress1_c_num_data_valid;
wire   [2:0] regIpAddress1_c_fifo_cap;
wire    regIpAddress1_c_empty_n;
wire    regIpAddress2_c_full_n;
wire   [31:0] regIpAddress2_c_dout;
wire   [2:0] regIpAddress2_c_num_data_valid;
wire   [2:0] regIpAddress2_c_fifo_cap;
wire    regIpAddress2_c_empty_n;
wire    regIpAddress3_c_full_n;
wire   [31:0] regIpAddress3_c_dout;
wire   [2:0] regIpAddress3_c_num_data_valid;
wire   [2:0] regIpAddress3_c_fifo_cap;
wire    regIpAddress3_c_empty_n;
wire    regIpAddress4_c_full_n;
wire   [31:0] regIpAddress4_c_dout;
wire   [2:0] regIpAddress4_c_num_data_valid;
wire   [2:0] regIpAddress4_c_fifo_cap;
wire    regIpAddress4_c_empty_n;
wire    regIpAddress5_c_full_n;
wire   [31:0] regIpAddress5_c_dout;
wire   [2:0] regIpAddress5_c_num_data_valid;
wire   [2:0] regIpAddress5_c_fifo_cap;
wire    regIpAddress5_c_empty_n;
wire    regIpAddress6_c_full_n;
wire   [31:0] regIpAddress6_c_dout;
wire   [2:0] regIpAddress6_c_num_data_valid;
wire   [2:0] regIpAddress6_c_fifo_cap;
wire    regIpAddress6_c_empty_n;
wire    regIpAddress7_c_full_n;
wire   [31:0] regIpAddress7_c_dout;
wire   [2:0] regIpAddress7_c_num_data_valid;
wire   [2:0] regIpAddress7_c_fifo_cap;
wire    regIpAddress7_c_empty_n;
wire    regIpAddress8_c_full_n;
wire   [31:0] regIpAddress8_c_dout;
wire   [2:0] regIpAddress8_c_num_data_valid;
wire   [2:0] regIpAddress8_c_fifo_cap;
wire    regIpAddress8_c_empty_n;
wire    regIpAddress9_c_full_n;
wire   [31:0] regIpAddress9_c_dout;
wire   [2:0] regIpAddress9_c_num_data_valid;
wire   [2:0] regIpAddress9_c_fifo_cap;
wire    regIpAddress9_c_empty_n;
wire    regIpAddress10_c_full_n;
wire   [31:0] regIpAddress10_c_dout;
wire   [2:0] regIpAddress10_c_num_data_valid;
wire   [2:0] regIpAddress10_c_fifo_cap;
wire    regIpAddress10_c_empty_n;
wire    openConStatusBuffer_full_n;
wire   [95:0] openConStatusBuffer_dout;
wire   [9:0] openConStatusBuffer_num_data_valid;
wire   [9:0] openConStatusBuffer_fifo_cap;
wire    openConStatusBuffer_empty_n;
wire    txStatusBuffer_full_n;
wire   [95:0] txStatusBuffer_dout;
wire   [9:0] txStatusBuffer_num_data_valid;
wire   [9:0] txStatusBuffer_fifo_cap;
wire    txStatusBuffer_empty_n;
wire    txDataBuffer_full_n;
wire   [1023:0] txDataBuffer_dout;
wire   [9:0] txDataBuffer_num_data_valid;
wire   [9:0] txDataBuffer_fifo_cap;
wire    txDataBuffer_empty_n;
wire    rxDataBuffer_full_n;
wire   [1023:0] rxDataBuffer_dout;
wire   [9:0] rxDataBuffer_num_data_valid;
wire   [9:0] rxDataBuffer_fifo_cap;
wire    rxDataBuffer_empty_n;
wire    txMetaDataBuffer_full_n;
wire   [31:0] txMetaDataBuffer_dout;
wire   [9:0] txMetaDataBuffer_num_data_valid;
wire   [9:0] txMetaDataBuffer_fifo_cap;
wire    txMetaDataBuffer_empty_n;
wire    closeConnectionBuffer_full_n;
wire   [15:0] closeConnectionBuffer_dout;
wire   [9:0] closeConnectionBuffer_num_data_valid;
wire   [9:0] closeConnectionBuffer_fifo_cap;
wire    closeConnectionBuffer_empty_n;

scatter_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .runExperiment(runExperiment),
    .runExperiment_c_din(entry_proc_U0_runExperiment_c_din),
    .runExperiment_c_num_data_valid(runExperiment_c_num_data_valid),
    .runExperiment_c_fifo_cap(runExperiment_c_fifo_cap),
    .runExperiment_c_full_n(runExperiment_c_full_n),
    .runExperiment_c_write(entry_proc_U0_runExperiment_c_write),
    .runExperiment_c40_din(entry_proc_U0_runExperiment_c40_din),
    .runExperiment_c40_num_data_valid(runExperiment_c40_num_data_valid),
    .runExperiment_c40_fifo_cap(runExperiment_c40_fifo_cap),
    .runExperiment_c40_full_n(runExperiment_c40_full_n),
    .runExperiment_c40_write(entry_proc_U0_runExperiment_c40_write),
    .useConn(useConn),
    .useConn_c_din(entry_proc_U0_useConn_c_din),
    .useConn_c_num_data_valid(useConn_c_num_data_valid),
    .useConn_c_fifo_cap(useConn_c_fifo_cap),
    .useConn_c_full_n(useConn_c_full_n),
    .useConn_c_write(entry_proc_U0_useConn_c_write),
    .useIpAddr(useIpAddr),
    .useIpAddr_c_din(entry_proc_U0_useIpAddr_c_din),
    .useIpAddr_c_num_data_valid(useIpAddr_c_num_data_valid),
    .useIpAddr_c_fifo_cap(useIpAddr_c_fifo_cap),
    .useIpAddr_c_full_n(useIpAddr_c_full_n),
    .useIpAddr_c_write(entry_proc_U0_useIpAddr_c_write),
    .pkgWordCount(pkgWordCount),
    .pkgWordCount_c_din(entry_proc_U0_pkgWordCount_c_din),
    .pkgWordCount_c_num_data_valid(pkgWordCount_c_num_data_valid),
    .pkgWordCount_c_fifo_cap(pkgWordCount_c_fifo_cap),
    .pkgWordCount_c_full_n(pkgWordCount_c_full_n),
    .pkgWordCount_c_write(entry_proc_U0_pkgWordCount_c_write),
    .regBasePort(regBasePort),
    .regBasePort_c_din(entry_proc_U0_regBasePort_c_din),
    .regBasePort_c_num_data_valid(regBasePort_c_num_data_valid),
    .regBasePort_c_fifo_cap(regBasePort_c_fifo_cap),
    .regBasePort_c_full_n(regBasePort_c_full_n),
    .regBasePort_c_write(entry_proc_U0_regBasePort_c_write),
    .regBasePort_c41_din(entry_proc_U0_regBasePort_c41_din),
    .regBasePort_c41_num_data_valid(regBasePort_c41_num_data_valid),
    .regBasePort_c41_fifo_cap(regBasePort_c41_fifo_cap),
    .regBasePort_c41_full_n(regBasePort_c41_full_n),
    .regBasePort_c41_write(entry_proc_U0_regBasePort_c41_write),
    .usePort(usePort),
    .usePort_c_din(entry_proc_U0_usePort_c_din),
    .usePort_c_num_data_valid(usePort_c_num_data_valid),
    .usePort_c_fifo_cap(usePort_c_fifo_cap),
    .usePort_c_full_n(usePort_c_full_n),
    .usePort_c_write(entry_proc_U0_usePort_c_write),
    .expectedRespInKB(expectedRespInKB),
    .expectedRespInKB_c_din(entry_proc_U0_expectedRespInKB_c_din),
    .expectedRespInKB_c_num_data_valid(expectedRespInKB_c_num_data_valid),
    .expectedRespInKB_c_fifo_cap(expectedRespInKB_c_fifo_cap),
    .expectedRespInKB_c_full_n(expectedRespInKB_c_full_n),
    .expectedRespInKB_c_write(entry_proc_U0_expectedRespInKB_c_write),
    .clientPkgNum(clientPkgNum),
    .clientPkgNum_c_din(entry_proc_U0_clientPkgNum_c_din),
    .clientPkgNum_c_num_data_valid(clientPkgNum_c_num_data_valid),
    .clientPkgNum_c_fifo_cap(clientPkgNum_c_fifo_cap),
    .clientPkgNum_c_full_n(clientPkgNum_c_full_n),
    .clientPkgNum_c_write(entry_proc_U0_clientPkgNum_c_write),
    .regIpAddress0(regIpAddress0),
    .regIpAddress0_c_din(entry_proc_U0_regIpAddress0_c_din),
    .regIpAddress0_c_num_data_valid(regIpAddress0_c_num_data_valid),
    .regIpAddress0_c_fifo_cap(regIpAddress0_c_fifo_cap),
    .regIpAddress0_c_full_n(regIpAddress0_c_full_n),
    .regIpAddress0_c_write(entry_proc_U0_regIpAddress0_c_write),
    .regIpAddress1(regIpAddress1),
    .regIpAddress1_c_din(entry_proc_U0_regIpAddress1_c_din),
    .regIpAddress1_c_num_data_valid(regIpAddress1_c_num_data_valid),
    .regIpAddress1_c_fifo_cap(regIpAddress1_c_fifo_cap),
    .regIpAddress1_c_full_n(regIpAddress1_c_full_n),
    .regIpAddress1_c_write(entry_proc_U0_regIpAddress1_c_write),
    .regIpAddress2(regIpAddress2),
    .regIpAddress2_c_din(entry_proc_U0_regIpAddress2_c_din),
    .regIpAddress2_c_num_data_valid(regIpAddress2_c_num_data_valid),
    .regIpAddress2_c_fifo_cap(regIpAddress2_c_fifo_cap),
    .regIpAddress2_c_full_n(regIpAddress2_c_full_n),
    .regIpAddress2_c_write(entry_proc_U0_regIpAddress2_c_write),
    .regIpAddress3(regIpAddress3),
    .regIpAddress3_c_din(entry_proc_U0_regIpAddress3_c_din),
    .regIpAddress3_c_num_data_valid(regIpAddress3_c_num_data_valid),
    .regIpAddress3_c_fifo_cap(regIpAddress3_c_fifo_cap),
    .regIpAddress3_c_full_n(regIpAddress3_c_full_n),
    .regIpAddress3_c_write(entry_proc_U0_regIpAddress3_c_write),
    .regIpAddress4(regIpAddress4),
    .regIpAddress4_c_din(entry_proc_U0_regIpAddress4_c_din),
    .regIpAddress4_c_num_data_valid(regIpAddress4_c_num_data_valid),
    .regIpAddress4_c_fifo_cap(regIpAddress4_c_fifo_cap),
    .regIpAddress4_c_full_n(regIpAddress4_c_full_n),
    .regIpAddress4_c_write(entry_proc_U0_regIpAddress4_c_write),
    .regIpAddress5(regIpAddress5),
    .regIpAddress5_c_din(entry_proc_U0_regIpAddress5_c_din),
    .regIpAddress5_c_num_data_valid(regIpAddress5_c_num_data_valid),
    .regIpAddress5_c_fifo_cap(regIpAddress5_c_fifo_cap),
    .regIpAddress5_c_full_n(regIpAddress5_c_full_n),
    .regIpAddress5_c_write(entry_proc_U0_regIpAddress5_c_write),
    .regIpAddress6(regIpAddress6),
    .regIpAddress6_c_din(entry_proc_U0_regIpAddress6_c_din),
    .regIpAddress6_c_num_data_valid(regIpAddress6_c_num_data_valid),
    .regIpAddress6_c_fifo_cap(regIpAddress6_c_fifo_cap),
    .regIpAddress6_c_full_n(regIpAddress6_c_full_n),
    .regIpAddress6_c_write(entry_proc_U0_regIpAddress6_c_write),
    .regIpAddress7(regIpAddress7),
    .regIpAddress7_c_din(entry_proc_U0_regIpAddress7_c_din),
    .regIpAddress7_c_num_data_valid(regIpAddress7_c_num_data_valid),
    .regIpAddress7_c_fifo_cap(regIpAddress7_c_fifo_cap),
    .regIpAddress7_c_full_n(regIpAddress7_c_full_n),
    .regIpAddress7_c_write(entry_proc_U0_regIpAddress7_c_write),
    .regIpAddress8(regIpAddress8),
    .regIpAddress8_c_din(entry_proc_U0_regIpAddress8_c_din),
    .regIpAddress8_c_num_data_valid(regIpAddress8_c_num_data_valid),
    .regIpAddress8_c_fifo_cap(regIpAddress8_c_fifo_cap),
    .regIpAddress8_c_full_n(regIpAddress8_c_full_n),
    .regIpAddress8_c_write(entry_proc_U0_regIpAddress8_c_write),
    .regIpAddress9(regIpAddress9),
    .regIpAddress9_c_din(entry_proc_U0_regIpAddress9_c_din),
    .regIpAddress9_c_num_data_valid(regIpAddress9_c_num_data_valid),
    .regIpAddress9_c_fifo_cap(regIpAddress9_c_fifo_cap),
    .regIpAddress9_c_full_n(regIpAddress9_c_full_n),
    .regIpAddress9_c_write(entry_proc_U0_regIpAddress9_c_write),
    .regIpAddress10(regIpAddress10),
    .regIpAddress10_c_din(entry_proc_U0_regIpAddress10_c_din),
    .regIpAddress10_c_num_data_valid(regIpAddress10_c_num_data_valid),
    .regIpAddress10_c_fifo_cap(regIpAddress10_c_fifo_cap),
    .regIpAddress10_c_full_n(regIpAddress10_c_full_n),
    .regIpAddress10_c_write(entry_proc_U0_regIpAddress10_c_write)
);

scatter_openStatus_handler openStatus_handler_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(openStatus_handler_U0_ap_start),
    .ap_done(openStatus_handler_U0_ap_done),
    .ap_continue(openStatus_handler_U0_ap_continue),
    .ap_idle(openStatus_handler_U0_ap_idle),
    .ap_ready(openStatus_handler_U0_ap_ready),
    .s_axis_open_status_TVALID(s_axis_open_status_TVALID),
    .openConStatusBuffer_din(openStatus_handler_U0_openConStatusBuffer_din),
    .openConStatusBuffer_num_data_valid(openConStatusBuffer_num_data_valid),
    .openConStatusBuffer_fifo_cap(openConStatusBuffer_fifo_cap),
    .openConStatusBuffer_full_n(openConStatusBuffer_full_n),
    .openConStatusBuffer_write(openStatus_handler_U0_openConStatusBuffer_write),
    .s_axis_open_status_TDATA(s_axis_open_status_TDATA),
    .s_axis_open_status_TREADY(openStatus_handler_U0_s_axis_open_status_TREADY)
);

scatter_txStatus_handler txStatus_handler_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(txStatus_handler_U0_ap_start),
    .ap_done(txStatus_handler_U0_ap_done),
    .ap_continue(txStatus_handler_U0_ap_continue),
    .ap_idle(txStatus_handler_U0_ap_idle),
    .ap_ready(txStatus_handler_U0_ap_ready),
    .s_axis_tx_status_TVALID(s_axis_tx_status_TVALID),
    .txStatusBuffer_din(txStatus_handler_U0_txStatusBuffer_din),
    .txStatusBuffer_num_data_valid(txStatusBuffer_num_data_valid),
    .txStatusBuffer_fifo_cap(txStatusBuffer_fifo_cap),
    .txStatusBuffer_full_n(txStatusBuffer_full_n),
    .txStatusBuffer_write(txStatus_handler_U0_txStatusBuffer_write),
    .s_axis_tx_status_TDATA(s_axis_tx_status_TDATA),
    .s_axis_tx_status_TREADY(txStatus_handler_U0_s_axis_tx_status_TREADY)
);

scatter_txDataBuffer_handler_512_s txDataBuffer_handler_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(txDataBuffer_handler_512_U0_ap_start),
    .ap_done(txDataBuffer_handler_512_U0_ap_done),
    .ap_continue(txDataBuffer_handler_512_U0_ap_continue),
    .ap_idle(txDataBuffer_handler_512_U0_ap_idle),
    .ap_ready(txDataBuffer_handler_512_U0_ap_ready),
    .txDataBuffer_dout(txDataBuffer_dout),
    .txDataBuffer_num_data_valid(txDataBuffer_num_data_valid),
    .txDataBuffer_fifo_cap(txDataBuffer_fifo_cap),
    .txDataBuffer_empty_n(txDataBuffer_empty_n),
    .txDataBuffer_read(txDataBuffer_handler_512_U0_txDataBuffer_read),
    .m_axis_tx_data_TREADY(m_axis_tx_data_TREADY),
    .m_axis_tx_data_TDATA(txDataBuffer_handler_512_U0_m_axis_tx_data_TDATA),
    .m_axis_tx_data_TVALID(txDataBuffer_handler_512_U0_m_axis_tx_data_TVALID),
    .m_axis_tx_data_TKEEP(txDataBuffer_handler_512_U0_m_axis_tx_data_TKEEP),
    .m_axis_tx_data_TSTRB(txDataBuffer_handler_512_U0_m_axis_tx_data_TSTRB),
    .m_axis_tx_data_TLAST(txDataBuffer_handler_512_U0_m_axis_tx_data_TLAST)
);

scatter_rxDataBuffer_handler_512_s rxDataBuffer_handler_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(rxDataBuffer_handler_512_U0_ap_start),
    .ap_done(rxDataBuffer_handler_512_U0_ap_done),
    .ap_continue(rxDataBuffer_handler_512_U0_ap_continue),
    .ap_idle(rxDataBuffer_handler_512_U0_ap_idle),
    .ap_ready(rxDataBuffer_handler_512_U0_ap_ready),
    .s_axis_rx_data_TVALID(s_axis_rx_data_TVALID),
    .rxDataBuffer_din(rxDataBuffer_handler_512_U0_rxDataBuffer_din),
    .rxDataBuffer_num_data_valid(rxDataBuffer_num_data_valid),
    .rxDataBuffer_fifo_cap(rxDataBuffer_fifo_cap),
    .rxDataBuffer_full_n(rxDataBuffer_full_n),
    .rxDataBuffer_write(rxDataBuffer_handler_512_U0_rxDataBuffer_write),
    .s_axis_rx_data_TDATA(s_axis_rx_data_TDATA),
    .s_axis_rx_data_TREADY(rxDataBuffer_handler_512_U0_s_axis_rx_data_TREADY),
    .s_axis_rx_data_TKEEP(s_axis_rx_data_TKEEP),
    .s_axis_rx_data_TSTRB(s_axis_rx_data_TSTRB),
    .s_axis_rx_data_TLAST(s_axis_rx_data_TLAST)
);

scatter_client_512_s client_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(client_512_U0_ap_start),
    .ap_done(client_512_U0_ap_done),
    .ap_continue(client_512_U0_ap_continue),
    .ap_idle(client_512_U0_ap_idle),
    .ap_ready(client_512_U0_ap_ready),
    .regIpAddress10_dout(regIpAddress10_c_dout),
    .regIpAddress10_num_data_valid(regIpAddress10_c_num_data_valid),
    .regIpAddress10_fifo_cap(regIpAddress10_c_fifo_cap),
    .regIpAddress10_empty_n(regIpAddress10_c_empty_n),
    .regIpAddress10_read(client_512_U0_regIpAddress10_read),
    .regIpAddress9_dout(regIpAddress9_c_dout),
    .regIpAddress9_num_data_valid(regIpAddress9_c_num_data_valid),
    .regIpAddress9_fifo_cap(regIpAddress9_c_fifo_cap),
    .regIpAddress9_empty_n(regIpAddress9_c_empty_n),
    .regIpAddress9_read(client_512_U0_regIpAddress9_read),
    .regIpAddress8_dout(regIpAddress8_c_dout),
    .regIpAddress8_num_data_valid(regIpAddress8_c_num_data_valid),
    .regIpAddress8_fifo_cap(regIpAddress8_c_fifo_cap),
    .regIpAddress8_empty_n(regIpAddress8_c_empty_n),
    .regIpAddress8_read(client_512_U0_regIpAddress8_read),
    .regIpAddress7_dout(regIpAddress7_c_dout),
    .regIpAddress7_num_data_valid(regIpAddress7_c_num_data_valid),
    .regIpAddress7_fifo_cap(regIpAddress7_c_fifo_cap),
    .regIpAddress7_empty_n(regIpAddress7_c_empty_n),
    .regIpAddress7_read(client_512_U0_regIpAddress7_read),
    .regIpAddress6_dout(regIpAddress6_c_dout),
    .regIpAddress6_num_data_valid(regIpAddress6_c_num_data_valid),
    .regIpAddress6_fifo_cap(regIpAddress6_c_fifo_cap),
    .regIpAddress6_empty_n(regIpAddress6_c_empty_n),
    .regIpAddress6_read(client_512_U0_regIpAddress6_read),
    .regIpAddress5_dout(regIpAddress5_c_dout),
    .regIpAddress5_num_data_valid(regIpAddress5_c_num_data_valid),
    .regIpAddress5_fifo_cap(regIpAddress5_c_fifo_cap),
    .regIpAddress5_empty_n(regIpAddress5_c_empty_n),
    .regIpAddress5_read(client_512_U0_regIpAddress5_read),
    .regIpAddress4_dout(regIpAddress4_c_dout),
    .regIpAddress4_num_data_valid(regIpAddress4_c_num_data_valid),
    .regIpAddress4_fifo_cap(regIpAddress4_c_fifo_cap),
    .regIpAddress4_empty_n(regIpAddress4_c_empty_n),
    .regIpAddress4_read(client_512_U0_regIpAddress4_read),
    .regIpAddress3_dout(regIpAddress3_c_dout),
    .regIpAddress3_num_data_valid(regIpAddress3_c_num_data_valid),
    .regIpAddress3_fifo_cap(regIpAddress3_c_fifo_cap),
    .regIpAddress3_empty_n(regIpAddress3_c_empty_n),
    .regIpAddress3_read(client_512_U0_regIpAddress3_read),
    .regIpAddress2_dout(regIpAddress2_c_dout),
    .regIpAddress2_num_data_valid(regIpAddress2_c_num_data_valid),
    .regIpAddress2_fifo_cap(regIpAddress2_c_fifo_cap),
    .regIpAddress2_empty_n(regIpAddress2_c_empty_n),
    .regIpAddress2_read(client_512_U0_regIpAddress2_read),
    .regIpAddress1_dout(regIpAddress1_c_dout),
    .regIpAddress1_num_data_valid(regIpAddress1_c_num_data_valid),
    .regIpAddress1_fifo_cap(regIpAddress1_c_fifo_cap),
    .regIpAddress1_empty_n(regIpAddress1_c_empty_n),
    .regIpAddress1_read(client_512_U0_regIpAddress1_read),
    .regIpAddress0_dout(regIpAddress0_c_dout),
    .regIpAddress0_num_data_valid(regIpAddress0_c_num_data_valid),
    .regIpAddress0_fifo_cap(regIpAddress0_c_fifo_cap),
    .regIpAddress0_empty_n(regIpAddress0_c_empty_n),
    .regIpAddress0_read(client_512_U0_regIpAddress0_read),
    .clientPkgNum_dout(clientPkgNum_c_dout),
    .clientPkgNum_num_data_valid(clientPkgNum_c_num_data_valid),
    .clientPkgNum_fifo_cap(clientPkgNum_c_fifo_cap),
    .clientPkgNum_empty_n(clientPkgNum_c_empty_n),
    .clientPkgNum_read(client_512_U0_clientPkgNum_read),
    .expectedRespInKB_dout(expectedRespInKB_c_dout),
    .expectedRespInKB_num_data_valid(expectedRespInKB_c_num_data_valid),
    .expectedRespInKB_fifo_cap(expectedRespInKB_c_fifo_cap),
    .expectedRespInKB_empty_n(expectedRespInKB_c_empty_n),
    .expectedRespInKB_read(client_512_U0_expectedRespInKB_read),
    .regBasePort_dout(regBasePort_c41_dout),
    .regBasePort_num_data_valid(regBasePort_c41_num_data_valid),
    .regBasePort_fifo_cap(regBasePort_c41_fifo_cap),
    .regBasePort_empty_n(regBasePort_c41_empty_n),
    .regBasePort_read(client_512_U0_regBasePort_read),
    .pkgWordCount_dout(pkgWordCount_c_dout),
    .pkgWordCount_num_data_valid(pkgWordCount_c_num_data_valid),
    .pkgWordCount_fifo_cap(pkgWordCount_c_fifo_cap),
    .pkgWordCount_empty_n(pkgWordCount_c_empty_n),
    .pkgWordCount_read(client_512_U0_pkgWordCount_read),
    .useIpAddr_dout(useIpAddr_c_dout),
    .useIpAddr_num_data_valid(useIpAddr_c_num_data_valid),
    .useIpAddr_fifo_cap(useIpAddr_c_fifo_cap),
    .useIpAddr_empty_n(useIpAddr_c_empty_n),
    .useIpAddr_read(client_512_U0_useIpAddr_read),
    .useConn_dout(useConn_c_dout),
    .useConn_num_data_valid(useConn_c_num_data_valid),
    .useConn_fifo_cap(useConn_c_fifo_cap),
    .useConn_empty_n(useConn_c_empty_n),
    .useConn_read(client_512_U0_useConn_read),
    .runExperiment_dout(runExperiment_c40_dout),
    .runExperiment_num_data_valid(runExperiment_c40_num_data_valid),
    .runExperiment_fifo_cap(runExperiment_c40_fifo_cap),
    .runExperiment_empty_n(runExperiment_c40_empty_n),
    .runExperiment_read(client_512_U0_runExperiment_read),
    .txStatusBuffer_dout(txStatusBuffer_dout),
    .txStatusBuffer_num_data_valid(txStatusBuffer_num_data_valid),
    .txStatusBuffer_fifo_cap(txStatusBuffer_fifo_cap),
    .txStatusBuffer_empty_n(txStatusBuffer_empty_n),
    .txStatusBuffer_read(client_512_U0_txStatusBuffer_read),
    .openConStatusBuffer_dout(openConStatusBuffer_dout),
    .openConStatusBuffer_num_data_valid(openConStatusBuffer_num_data_valid),
    .openConStatusBuffer_fifo_cap(openConStatusBuffer_fifo_cap),
    .openConStatusBuffer_empty_n(openConStatusBuffer_empty_n),
    .openConStatusBuffer_read(client_512_U0_openConStatusBuffer_read),
    .txMetaDataBuffer_din(client_512_U0_txMetaDataBuffer_din),
    .txMetaDataBuffer_num_data_valid(txMetaDataBuffer_num_data_valid),
    .txMetaDataBuffer_fifo_cap(txMetaDataBuffer_fifo_cap),
    .txMetaDataBuffer_full_n(txMetaDataBuffer_full_n),
    .txMetaDataBuffer_write(client_512_U0_txMetaDataBuffer_write),
    .txDataBuffer_din(client_512_U0_txDataBuffer_din),
    .txDataBuffer_num_data_valid(txDataBuffer_num_data_valid),
    .txDataBuffer_fifo_cap(txDataBuffer_fifo_cap),
    .txDataBuffer_full_n(txDataBuffer_full_n),
    .txDataBuffer_write(client_512_U0_txDataBuffer_write),
    .m_axis_open_connection_TREADY(m_axis_open_connection_TREADY),
    .closeConnectionBuffer_din(client_512_U0_closeConnectionBuffer_din),
    .closeConnectionBuffer_num_data_valid(closeConnectionBuffer_num_data_valid),
    .closeConnectionBuffer_fifo_cap(closeConnectionBuffer_fifo_cap),
    .closeConnectionBuffer_full_n(closeConnectionBuffer_full_n),
    .closeConnectionBuffer_write(client_512_U0_closeConnectionBuffer_write),
    .m_axis_open_connection_TDATA(client_512_U0_m_axis_open_connection_TDATA),
    .m_axis_open_connection_TVALID(client_512_U0_m_axis_open_connection_TVALID)
);

scatter_txMetaData_handler txMetaData_handler_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(txMetaData_handler_U0_ap_start),
    .ap_done(txMetaData_handler_U0_ap_done),
    .ap_continue(txMetaData_handler_U0_ap_continue),
    .ap_idle(txMetaData_handler_U0_ap_idle),
    .ap_ready(txMetaData_handler_U0_ap_ready),
    .txMetaDataBuffer_dout(txMetaDataBuffer_dout),
    .txMetaDataBuffer_num_data_valid(txMetaDataBuffer_num_data_valid),
    .txMetaDataBuffer_fifo_cap(txMetaDataBuffer_fifo_cap),
    .txMetaDataBuffer_empty_n(txMetaDataBuffer_empty_n),
    .txMetaDataBuffer_read(txMetaData_handler_U0_txMetaDataBuffer_read),
    .m_axis_tx_metadata_TREADY(m_axis_tx_metadata_TREADY),
    .m_axis_tx_metadata_TDATA(txMetaData_handler_U0_m_axis_tx_metadata_TDATA),
    .m_axis_tx_metadata_TVALID(txMetaData_handler_U0_m_axis_tx_metadata_TVALID)
);

scatter_closeConnection_handler closeConnection_handler_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(closeConnection_handler_U0_ap_start),
    .ap_done(closeConnection_handler_U0_ap_done),
    .ap_continue(closeConnection_handler_U0_ap_continue),
    .ap_idle(closeConnection_handler_U0_ap_idle),
    .ap_ready(closeConnection_handler_U0_ap_ready),
    .closeConnectionBuffer_dout(closeConnectionBuffer_dout),
    .closeConnectionBuffer_num_data_valid(closeConnectionBuffer_num_data_valid),
    .closeConnectionBuffer_fifo_cap(closeConnectionBuffer_fifo_cap),
    .closeConnectionBuffer_empty_n(closeConnectionBuffer_empty_n),
    .closeConnectionBuffer_read(closeConnection_handler_U0_closeConnectionBuffer_read),
    .m_axis_close_connection_TREADY(m_axis_close_connection_TREADY),
    .m_axis_close_connection_TDATA(closeConnection_handler_U0_m_axis_close_connection_TDATA),
    .m_axis_close_connection_TVALID(closeConnection_handler_U0_m_axis_close_connection_TVALID)
);

scatter_server_512_s server_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(server_512_U0_ap_start),
    .ap_done(server_512_U0_ap_done),
    .ap_continue(server_512_U0_ap_continue),
    .ap_idle(server_512_U0_ap_idle),
    .ap_ready(server_512_U0_ap_ready),
    .usePort_dout(usePort_c_dout),
    .usePort_num_data_valid(usePort_c_num_data_valid),
    .usePort_fifo_cap(usePort_c_fifo_cap),
    .usePort_empty_n(usePort_c_empty_n),
    .usePort_read(server_512_U0_usePort_read),
    .regBasePort_dout(regBasePort_c_dout),
    .regBasePort_num_data_valid(regBasePort_c_num_data_valid),
    .regBasePort_fifo_cap(regBasePort_c_fifo_cap),
    .regBasePort_empty_n(regBasePort_c_empty_n),
    .regBasePort_read(server_512_U0_regBasePort_read),
    .runExperiment_dout(runExperiment_c_dout),
    .runExperiment_num_data_valid(runExperiment_c_num_data_valid),
    .runExperiment_fifo_cap(runExperiment_c_fifo_cap),
    .runExperiment_empty_n(runExperiment_c_empty_n),
    .runExperiment_read(server_512_U0_runExperiment_read),
    .s_axis_listen_port_status_TVALID(s_axis_listen_port_status_TVALID),
    .s_axis_notifications_TVALID(s_axis_notifications_TVALID),
    .s_axis_rx_metadata_TVALID(s_axis_rx_metadata_TVALID),
    .rxDataBuffer_dout(rxDataBuffer_dout),
    .rxDataBuffer_num_data_valid(rxDataBuffer_num_data_valid),
    .rxDataBuffer_fifo_cap(rxDataBuffer_fifo_cap),
    .rxDataBuffer_empty_n(rxDataBuffer_empty_n),
    .rxDataBuffer_read(server_512_U0_rxDataBuffer_read),
    .m_axis_listen_port_TREADY(m_axis_listen_port_TREADY),
    .m_axis_read_package_TREADY(m_axis_read_package_TREADY),
    .m_axis_listen_port_TDATA(server_512_U0_m_axis_listen_port_TDATA),
    .m_axis_listen_port_TVALID(server_512_U0_m_axis_listen_port_TVALID),
    .s_axis_listen_port_status_TDATA(s_axis_listen_port_status_TDATA),
    .s_axis_listen_port_status_TREADY(server_512_U0_s_axis_listen_port_status_TREADY),
    .s_axis_notifications_TDATA(s_axis_notifications_TDATA),
    .s_axis_notifications_TREADY(server_512_U0_s_axis_notifications_TREADY),
    .m_axis_read_package_TDATA(server_512_U0_m_axis_read_package_TDATA),
    .m_axis_read_package_TVALID(server_512_U0_m_axis_read_package_TVALID),
    .s_axis_rx_metadata_TDATA(s_axis_rx_metadata_TDATA),
    .s_axis_rx_metadata_TREADY(server_512_U0_s_axis_rx_metadata_TREADY)
);

scatter_fifo_w1_d3_S runExperiment_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_runExperiment_c_din),
    .if_full_n(runExperiment_c_full_n),
    .if_write(entry_proc_U0_runExperiment_c_write),
    .if_dout(runExperiment_c_dout),
    .if_num_data_valid(runExperiment_c_num_data_valid),
    .if_fifo_cap(runExperiment_c_fifo_cap),
    .if_empty_n(runExperiment_c_empty_n),
    .if_read(server_512_U0_runExperiment_read)
);

scatter_fifo_w1_d3_S runExperiment_c40_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_runExperiment_c40_din),
    .if_full_n(runExperiment_c40_full_n),
    .if_write(entry_proc_U0_runExperiment_c40_write),
    .if_dout(runExperiment_c40_dout),
    .if_num_data_valid(runExperiment_c40_num_data_valid),
    .if_fifo_cap(runExperiment_c40_fifo_cap),
    .if_empty_n(runExperiment_c40_empty_n),
    .if_read(client_512_U0_runExperiment_read)
);

scatter_fifo_w16_d3_S useConn_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_useConn_c_din),
    .if_full_n(useConn_c_full_n),
    .if_write(entry_proc_U0_useConn_c_write),
    .if_dout(useConn_c_dout),
    .if_num_data_valid(useConn_c_num_data_valid),
    .if_fifo_cap(useConn_c_fifo_cap),
    .if_empty_n(useConn_c_empty_n),
    .if_read(client_512_U0_useConn_read)
);

scatter_fifo_w16_d3_S useIpAddr_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_useIpAddr_c_din),
    .if_full_n(useIpAddr_c_full_n),
    .if_write(entry_proc_U0_useIpAddr_c_write),
    .if_dout(useIpAddr_c_dout),
    .if_num_data_valid(useIpAddr_c_num_data_valid),
    .if_fifo_cap(useIpAddr_c_fifo_cap),
    .if_empty_n(useIpAddr_c_empty_n),
    .if_read(client_512_U0_useIpAddr_read)
);

scatter_fifo_w16_d3_S pkgWordCount_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_pkgWordCount_c_din),
    .if_full_n(pkgWordCount_c_full_n),
    .if_write(entry_proc_U0_pkgWordCount_c_write),
    .if_dout(pkgWordCount_c_dout),
    .if_num_data_valid(pkgWordCount_c_num_data_valid),
    .if_fifo_cap(pkgWordCount_c_fifo_cap),
    .if_empty_n(pkgWordCount_c_empty_n),
    .if_read(client_512_U0_pkgWordCount_read)
);

scatter_fifo_w16_d3_S regBasePort_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regBasePort_c_din),
    .if_full_n(regBasePort_c_full_n),
    .if_write(entry_proc_U0_regBasePort_c_write),
    .if_dout(regBasePort_c_dout),
    .if_num_data_valid(regBasePort_c_num_data_valid),
    .if_fifo_cap(regBasePort_c_fifo_cap),
    .if_empty_n(regBasePort_c_empty_n),
    .if_read(server_512_U0_regBasePort_read)
);

scatter_fifo_w16_d3_S regBasePort_c41_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regBasePort_c41_din),
    .if_full_n(regBasePort_c41_full_n),
    .if_write(entry_proc_U0_regBasePort_c41_write),
    .if_dout(regBasePort_c41_dout),
    .if_num_data_valid(regBasePort_c41_num_data_valid),
    .if_fifo_cap(regBasePort_c41_fifo_cap),
    .if_empty_n(regBasePort_c41_empty_n),
    .if_read(client_512_U0_regBasePort_read)
);

scatter_fifo_w16_d3_S usePort_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_usePort_c_din),
    .if_full_n(usePort_c_full_n),
    .if_write(entry_proc_U0_usePort_c_write),
    .if_dout(usePort_c_dout),
    .if_num_data_valid(usePort_c_num_data_valid),
    .if_fifo_cap(usePort_c_fifo_cap),
    .if_empty_n(usePort_c_empty_n),
    .if_read(server_512_U0_usePort_read)
);

scatter_fifo_w16_d3_S expectedRespInKB_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_expectedRespInKB_c_din),
    .if_full_n(expectedRespInKB_c_full_n),
    .if_write(entry_proc_U0_expectedRespInKB_c_write),
    .if_dout(expectedRespInKB_c_dout),
    .if_num_data_valid(expectedRespInKB_c_num_data_valid),
    .if_fifo_cap(expectedRespInKB_c_fifo_cap),
    .if_empty_n(expectedRespInKB_c_empty_n),
    .if_read(client_512_U0_expectedRespInKB_read)
);

scatter_fifo_w32_d3_S clientPkgNum_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_clientPkgNum_c_din),
    .if_full_n(clientPkgNum_c_full_n),
    .if_write(entry_proc_U0_clientPkgNum_c_write),
    .if_dout(clientPkgNum_c_dout),
    .if_num_data_valid(clientPkgNum_c_num_data_valid),
    .if_fifo_cap(clientPkgNum_c_fifo_cap),
    .if_empty_n(clientPkgNum_c_empty_n),
    .if_read(client_512_U0_clientPkgNum_read)
);

scatter_fifo_w32_d3_S regIpAddress0_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress0_c_din),
    .if_full_n(regIpAddress0_c_full_n),
    .if_write(entry_proc_U0_regIpAddress0_c_write),
    .if_dout(regIpAddress0_c_dout),
    .if_num_data_valid(regIpAddress0_c_num_data_valid),
    .if_fifo_cap(regIpAddress0_c_fifo_cap),
    .if_empty_n(regIpAddress0_c_empty_n),
    .if_read(client_512_U0_regIpAddress0_read)
);

scatter_fifo_w32_d3_S regIpAddress1_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress1_c_din),
    .if_full_n(regIpAddress1_c_full_n),
    .if_write(entry_proc_U0_regIpAddress1_c_write),
    .if_dout(regIpAddress1_c_dout),
    .if_num_data_valid(regIpAddress1_c_num_data_valid),
    .if_fifo_cap(regIpAddress1_c_fifo_cap),
    .if_empty_n(regIpAddress1_c_empty_n),
    .if_read(client_512_U0_regIpAddress1_read)
);

scatter_fifo_w32_d3_S regIpAddress2_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress2_c_din),
    .if_full_n(regIpAddress2_c_full_n),
    .if_write(entry_proc_U0_regIpAddress2_c_write),
    .if_dout(regIpAddress2_c_dout),
    .if_num_data_valid(regIpAddress2_c_num_data_valid),
    .if_fifo_cap(regIpAddress2_c_fifo_cap),
    .if_empty_n(regIpAddress2_c_empty_n),
    .if_read(client_512_U0_regIpAddress2_read)
);

scatter_fifo_w32_d3_S regIpAddress3_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress3_c_din),
    .if_full_n(regIpAddress3_c_full_n),
    .if_write(entry_proc_U0_regIpAddress3_c_write),
    .if_dout(regIpAddress3_c_dout),
    .if_num_data_valid(regIpAddress3_c_num_data_valid),
    .if_fifo_cap(regIpAddress3_c_fifo_cap),
    .if_empty_n(regIpAddress3_c_empty_n),
    .if_read(client_512_U0_regIpAddress3_read)
);

scatter_fifo_w32_d3_S regIpAddress4_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress4_c_din),
    .if_full_n(regIpAddress4_c_full_n),
    .if_write(entry_proc_U0_regIpAddress4_c_write),
    .if_dout(regIpAddress4_c_dout),
    .if_num_data_valid(regIpAddress4_c_num_data_valid),
    .if_fifo_cap(regIpAddress4_c_fifo_cap),
    .if_empty_n(regIpAddress4_c_empty_n),
    .if_read(client_512_U0_regIpAddress4_read)
);

scatter_fifo_w32_d3_S regIpAddress5_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress5_c_din),
    .if_full_n(regIpAddress5_c_full_n),
    .if_write(entry_proc_U0_regIpAddress5_c_write),
    .if_dout(regIpAddress5_c_dout),
    .if_num_data_valid(regIpAddress5_c_num_data_valid),
    .if_fifo_cap(regIpAddress5_c_fifo_cap),
    .if_empty_n(regIpAddress5_c_empty_n),
    .if_read(client_512_U0_regIpAddress5_read)
);

scatter_fifo_w32_d3_S regIpAddress6_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress6_c_din),
    .if_full_n(regIpAddress6_c_full_n),
    .if_write(entry_proc_U0_regIpAddress6_c_write),
    .if_dout(regIpAddress6_c_dout),
    .if_num_data_valid(regIpAddress6_c_num_data_valid),
    .if_fifo_cap(regIpAddress6_c_fifo_cap),
    .if_empty_n(regIpAddress6_c_empty_n),
    .if_read(client_512_U0_regIpAddress6_read)
);

scatter_fifo_w32_d3_S regIpAddress7_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress7_c_din),
    .if_full_n(regIpAddress7_c_full_n),
    .if_write(entry_proc_U0_regIpAddress7_c_write),
    .if_dout(regIpAddress7_c_dout),
    .if_num_data_valid(regIpAddress7_c_num_data_valid),
    .if_fifo_cap(regIpAddress7_c_fifo_cap),
    .if_empty_n(regIpAddress7_c_empty_n),
    .if_read(client_512_U0_regIpAddress7_read)
);

scatter_fifo_w32_d3_S regIpAddress8_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress8_c_din),
    .if_full_n(regIpAddress8_c_full_n),
    .if_write(entry_proc_U0_regIpAddress8_c_write),
    .if_dout(regIpAddress8_c_dout),
    .if_num_data_valid(regIpAddress8_c_num_data_valid),
    .if_fifo_cap(regIpAddress8_c_fifo_cap),
    .if_empty_n(regIpAddress8_c_empty_n),
    .if_read(client_512_U0_regIpAddress8_read)
);

scatter_fifo_w32_d3_S regIpAddress9_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress9_c_din),
    .if_full_n(regIpAddress9_c_full_n),
    .if_write(entry_proc_U0_regIpAddress9_c_write),
    .if_dout(regIpAddress9_c_dout),
    .if_num_data_valid(regIpAddress9_c_num_data_valid),
    .if_fifo_cap(regIpAddress9_c_fifo_cap),
    .if_empty_n(regIpAddress9_c_empty_n),
    .if_read(client_512_U0_regIpAddress9_read)
);

scatter_fifo_w32_d3_S regIpAddress10_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_regIpAddress10_c_din),
    .if_full_n(regIpAddress10_c_full_n),
    .if_write(entry_proc_U0_regIpAddress10_c_write),
    .if_dout(regIpAddress10_c_dout),
    .if_num_data_valid(regIpAddress10_c_num_data_valid),
    .if_fifo_cap(regIpAddress10_c_fifo_cap),
    .if_empty_n(regIpAddress10_c_empty_n),
    .if_read(client_512_U0_regIpAddress10_read)
);

scatter_fifo_w96_d512_A openConStatusBuffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(openStatus_handler_U0_openConStatusBuffer_din),
    .if_full_n(openConStatusBuffer_full_n),
    .if_write(openStatus_handler_U0_openConStatusBuffer_write),
    .if_dout(openConStatusBuffer_dout),
    .if_num_data_valid(openConStatusBuffer_num_data_valid),
    .if_fifo_cap(openConStatusBuffer_fifo_cap),
    .if_empty_n(openConStatusBuffer_empty_n),
    .if_read(client_512_U0_openConStatusBuffer_read)
);

scatter_fifo_w96_d512_A txStatusBuffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(txStatus_handler_U0_txStatusBuffer_din),
    .if_full_n(txStatusBuffer_full_n),
    .if_write(txStatus_handler_U0_txStatusBuffer_write),
    .if_dout(txStatusBuffer_dout),
    .if_num_data_valid(txStatusBuffer_num_data_valid),
    .if_fifo_cap(txStatusBuffer_fifo_cap),
    .if_empty_n(txStatusBuffer_empty_n),
    .if_read(client_512_U0_txStatusBuffer_read)
);

scatter_fifo_w1024_d512_A txDataBuffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(client_512_U0_txDataBuffer_din),
    .if_full_n(txDataBuffer_full_n),
    .if_write(client_512_U0_txDataBuffer_write),
    .if_dout(txDataBuffer_dout),
    .if_num_data_valid(txDataBuffer_num_data_valid),
    .if_fifo_cap(txDataBuffer_fifo_cap),
    .if_empty_n(txDataBuffer_empty_n),
    .if_read(txDataBuffer_handler_512_U0_txDataBuffer_read)
);

scatter_fifo_w1024_d512_A rxDataBuffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rxDataBuffer_handler_512_U0_rxDataBuffer_din),
    .if_full_n(rxDataBuffer_full_n),
    .if_write(rxDataBuffer_handler_512_U0_rxDataBuffer_write),
    .if_dout(rxDataBuffer_dout),
    .if_num_data_valid(rxDataBuffer_num_data_valid),
    .if_fifo_cap(rxDataBuffer_fifo_cap),
    .if_empty_n(rxDataBuffer_empty_n),
    .if_read(server_512_U0_rxDataBuffer_read)
);

scatter_fifo_w32_d512_A txMetaDataBuffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(client_512_U0_txMetaDataBuffer_din),
    .if_full_n(txMetaDataBuffer_full_n),
    .if_write(client_512_U0_txMetaDataBuffer_write),
    .if_dout(txMetaDataBuffer_dout),
    .if_num_data_valid(txMetaDataBuffer_num_data_valid),
    .if_fifo_cap(txMetaDataBuffer_fifo_cap),
    .if_empty_n(txMetaDataBuffer_empty_n),
    .if_read(txMetaData_handler_U0_txMetaDataBuffer_read)
);

scatter_fifo_w16_d512_A closeConnectionBuffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(client_512_U0_closeConnectionBuffer_din),
    .if_full_n(closeConnectionBuffer_full_n),
    .if_write(client_512_U0_closeConnectionBuffer_write),
    .if_dout(closeConnectionBuffer_dout),
    .if_num_data_valid(closeConnectionBuffer_num_data_valid),
    .if_fifo_cap(closeConnectionBuffer_fifo_cap),
    .if_empty_n(closeConnectionBuffer_empty_n),
    .if_read(closeConnection_handler_U0_closeConnectionBuffer_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign client_512_U0_ap_continue = 1'b1;

assign client_512_U0_ap_start = 1'b1;

assign closeConnection_handler_U0_ap_continue = 1'b1;

assign closeConnection_handler_U0_ap_start = 1'b1;

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = 1'b1;

assign m_axis_close_connection_TDATA = closeConnection_handler_U0_m_axis_close_connection_TDATA;

assign m_axis_close_connection_TVALID = closeConnection_handler_U0_m_axis_close_connection_TVALID;

assign m_axis_listen_port_TDATA = server_512_U0_m_axis_listen_port_TDATA;

assign m_axis_listen_port_TVALID = server_512_U0_m_axis_listen_port_TVALID;

assign m_axis_open_connection_TDATA = client_512_U0_m_axis_open_connection_TDATA;

assign m_axis_open_connection_TVALID = client_512_U0_m_axis_open_connection_TVALID;

assign m_axis_read_package_TDATA = server_512_U0_m_axis_read_package_TDATA;

assign m_axis_read_package_TVALID = server_512_U0_m_axis_read_package_TVALID;

assign m_axis_tx_data_TDATA = txDataBuffer_handler_512_U0_m_axis_tx_data_TDATA;

assign m_axis_tx_data_TKEEP = txDataBuffer_handler_512_U0_m_axis_tx_data_TKEEP;

assign m_axis_tx_data_TLAST = txDataBuffer_handler_512_U0_m_axis_tx_data_TLAST;

assign m_axis_tx_data_TSTRB = txDataBuffer_handler_512_U0_m_axis_tx_data_TSTRB;

assign m_axis_tx_data_TVALID = txDataBuffer_handler_512_U0_m_axis_tx_data_TVALID;

assign m_axis_tx_metadata_TDATA = txMetaData_handler_U0_m_axis_tx_metadata_TDATA;

assign m_axis_tx_metadata_TVALID = txMetaData_handler_U0_m_axis_tx_metadata_TVALID;

assign openStatus_handler_U0_ap_continue = 1'b1;

assign openStatus_handler_U0_ap_start = 1'b1;

assign rxDataBuffer_handler_512_U0_ap_continue = 1'b1;

assign rxDataBuffer_handler_512_U0_ap_start = 1'b1;

assign s_axis_listen_port_status_TREADY = server_512_U0_s_axis_listen_port_status_TREADY;

assign s_axis_notifications_TREADY = server_512_U0_s_axis_notifications_TREADY;

assign s_axis_open_status_TREADY = openStatus_handler_U0_s_axis_open_status_TREADY;

assign s_axis_rx_data_TREADY = rxDataBuffer_handler_512_U0_s_axis_rx_data_TREADY;

assign s_axis_rx_metadata_TREADY = server_512_U0_s_axis_rx_metadata_TREADY;

assign s_axis_tx_status_TREADY = txStatus_handler_U0_s_axis_tx_status_TREADY;

assign server_512_U0_ap_continue = 1'b1;

assign server_512_U0_ap_start = 1'b1;

assign txDataBuffer_handler_512_U0_ap_continue = 1'b1;

assign txDataBuffer_handler_512_U0_ap_start = 1'b1;

assign txMetaData_handler_U0_ap_continue = 1'b1;

assign txMetaData_handler_U0_ap_start = 1'b1;

assign txStatus_handler_U0_ap_continue = 1'b1;

assign txStatus_handler_U0_ap_start = 1'b1;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "scatter_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "scatter_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //scatter

