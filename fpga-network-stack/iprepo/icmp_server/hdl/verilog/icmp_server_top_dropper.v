// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module icmp_server_top_dropper (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        packageBuffer1_dout,
        packageBuffer1_num_data_valid,
        packageBuffer1_fifo_cap,
        packageBuffer1_empty_n,
        packageBuffer1_read,
        validFifo_dout,
        validFifo_num_data_valid,
        validFifo_fifo_cap,
        validFifo_empty_n,
        validFifo_read,
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_din,
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_num_data_valid,
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_fifo_cap,
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n,
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_write
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [72:0] packageBuffer1_dout;
input  [6:0] packageBuffer1_num_data_valid;
input  [6:0] packageBuffer1_fifo_cap;
input   packageBuffer1_empty_n;
output   packageBuffer1_read;
input  [0:0] validFifo_dout;
input  [3:0] validFifo_num_data_valid;
input  [3:0] validFifo_fifo_cap;
input   validFifo_empty_n;
output   validFifo_read;
output  [127:0] icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_din;
input  [4:0] icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_num_data_valid;
input  [4:0] icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_fifo_cap;
input   icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n;
output   icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg packageBuffer1_read;
reg validFifo_read;
reg[127:0] icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_din;
reg icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire   [0:0] tmp_i_nbreadreq_fu_44_p3;
reg    ap_predicate_op21_read_state1;
wire   [0:0] tmp_i_49_nbreadreq_fu_58_p3;
reg    ap_predicate_op28_read_state1;
reg    ap_predicate_op30_read_state1;
reg    ap_done_reg;
reg    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] tmp_i_reg_200;
reg   [0:0] d_isFirstWord_load_reg_204;
reg   [0:0] d_drop_load_reg_208;
reg    ap_predicate_op48_write_state2;
reg   [0:0] tmp_i_49_reg_215;
reg   [0:0] d_valid_reg_222;
reg    ap_predicate_op50_write_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] d_isFirstWord;
reg   [0:0] d_drop;
reg    packageBuffer1_blk_n;
wire    ap_block_pp0_stage0;
reg    validFifo_blk_n;
reg    icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_blk_n;
reg   [72:0] reg_166;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] d_drop_load_load_fu_174_p1;
wire   [0:0] d_valid_read_fu_66_p2;
reg   [0:0] ap_phi_mux_d_drop_flag_0_i_phi_fu_82_p4;
wire   [0:0] ap_phi_reg_pp0_iter0_d_drop_flag_0_i_reg_79;
reg   [0:0] ap_phi_mux_d_isFirstWord_flag_0_i_phi_fu_93_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_d_isFirstWord_flag_0_i_reg_90;
wire   [0:0] grp_fu_158_p3;
reg   [0:0] ap_phi_mux_d_isFirstWord_new_0_i_phi_fu_110_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_d_isFirstWord_new_0_i_reg_107;
reg   [0:0] ap_phi_mux_d_drop_flag_1_i_phi_fu_127_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_d_drop_flag_1_i_reg_124;
reg   [0:0] ap_phi_mux_d_drop_new_1_i_phi_fu_144_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_d_drop_new_1_i_reg_141;
wire   [127:0] p_06_fu_190_p1;
reg    ap_block_pp0_stage0_01001;
wire   [127:0] p_0_fu_195_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_51;
reg    ap_condition_218;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
#0 d_isFirstWord = 1'd1;
#0 d_drop = 1'd0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_d_drop_flag_1_i_phi_fu_127_p8 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_drop <= ap_phi_mux_d_drop_new_1_i_phi_fu_144_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_drop_load_reg_208 <= d_drop;
        d_isFirstWord_load_reg_204 <= d_isFirstWord;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_d_isFirstWord_flag_0_i_phi_fu_93_p8 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_isFirstWord <= ap_phi_mux_d_isFirstWord_new_0_i_phi_fu_110_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op30_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        d_valid_reg_222 <= validFifo_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_predicate_op28_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op21_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_166 <= packageBuffer1_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_49_reg_215 <= tmp_i_49_nbreadreq_fu_58_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_i_reg_200 <= tmp_i_nbreadreq_fu_44_p3;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_51)) begin
        if ((d_valid_read_fu_66_p2 == 1'd0)) begin
            ap_phi_mux_d_drop_flag_0_i_phi_fu_82_p4 = 1'd1;
        end else if ((d_valid_read_fu_66_p2 == 1'd1)) begin
            ap_phi_mux_d_drop_flag_0_i_phi_fu_82_p4 = 1'd0;
        end else begin
            ap_phi_mux_d_drop_flag_0_i_phi_fu_82_p4 = ap_phi_reg_pp0_iter0_d_drop_flag_0_i_reg_79;
        end
    end else begin
        ap_phi_mux_d_drop_flag_0_i_phi_fu_82_p4 = ap_phi_reg_pp0_iter0_d_drop_flag_0_i_reg_79;
    end
end

always @ (*) begin
    if ((((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0) & (d_drop_load_load_fu_174_p1 == 1'd0)) | ((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0) & (d_drop_load_load_fu_174_p1 == 1'd1)))) begin
        ap_phi_mux_d_drop_flag_1_i_phi_fu_127_p8 = 1'd0;
    end else if (((tmp_i_49_nbreadreq_fu_58_p3 == 1'd1) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0))) begin
        ap_phi_mux_d_drop_flag_1_i_phi_fu_127_p8 = ap_phi_mux_d_drop_flag_0_i_phi_fu_82_p4;
    end else if (((((d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)) | ((tmp_i_49_nbreadreq_fu_58_p3 == 1'd0) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1))) | ((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)))) begin
        ap_phi_mux_d_drop_flag_1_i_phi_fu_127_p8 = 1'd1;
    end else begin
        ap_phi_mux_d_drop_flag_1_i_phi_fu_127_p8 = ap_phi_reg_pp0_iter0_d_drop_flag_1_i_reg_124;
    end
end

always @ (*) begin
    if (((tmp_i_49_nbreadreq_fu_58_p3 == 1'd1) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0))) begin
        ap_phi_mux_d_drop_new_1_i_phi_fu_144_p8 = 1'd1;
    end else if (((((d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)) | ((tmp_i_49_nbreadreq_fu_58_p3 == 1'd0) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1))) | ((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)))) begin
        ap_phi_mux_d_drop_new_1_i_phi_fu_144_p8 = 1'd0;
    end else begin
        ap_phi_mux_d_drop_new_1_i_phi_fu_144_p8 = ap_phi_reg_pp0_iter0_d_drop_new_1_i_reg_141;
    end
end

always @ (*) begin
    if ((((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0) & (d_drop_load_load_fu_174_p1 == 1'd0)) | ((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0) & (d_drop_load_load_fu_174_p1 == 1'd1)))) begin
        ap_phi_mux_d_isFirstWord_flag_0_i_phi_fu_93_p8 = 1'd0;
    end else if ((((tmp_i_49_nbreadreq_fu_58_p3 == 1'd1) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0)) | ((d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)) | ((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)) | ((tmp_i_49_nbreadreq_fu_58_p3 == 1'd0) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1)))) begin
        ap_phi_mux_d_isFirstWord_flag_0_i_phi_fu_93_p8 = 1'd1;
    end else begin
        ap_phi_mux_d_isFirstWord_flag_0_i_phi_fu_93_p8 = ap_phi_reg_pp0_iter0_d_isFirstWord_flag_0_i_reg_90;
    end
end

always @ (*) begin
    if (((tmp_i_49_nbreadreq_fu_58_p3 == 1'd1) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd0))) begin
        ap_phi_mux_d_isFirstWord_new_0_i_phi_fu_110_p8 = 1'd0;
    end else if (((((d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)) | ((tmp_i_49_nbreadreq_fu_58_p3 == 1'd0) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1))) | ((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1) & (grp_fu_158_p3 == 1'd1)))) begin
        ap_phi_mux_d_isFirstWord_new_0_i_phi_fu_110_p8 = 1'd1;
    end else begin
        ap_phi_mux_d_isFirstWord_new_0_i_phi_fu_110_p8 = ap_phi_reg_pp0_iter0_d_isFirstWord_new_0_i_reg_107;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_predicate_op50_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_blk_n = icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n;
    end else begin
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_218)) begin
        if ((ap_predicate_op50_write_state2 == 1'b1)) begin
            icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_din = p_0_fu_195_p1;
        end else if ((ap_predicate_op48_write_state2 == 1'b1)) begin
            icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_din = p_06_fu_190_p1;
        end else begin
            icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_din = 'bx;
        end
    end else begin
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_din = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op48_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op50_write_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_write = 1'b1;
    end else begin
        icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_write = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_done_reg == 1'b0) & (ap_predicate_op28_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((ap_done_reg == 1'b0) & (ap_predicate_op21_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)))) begin
        packageBuffer1_blk_n = packageBuffer1_empty_n;
    end else begin
        packageBuffer1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op28_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op21_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        packageBuffer1_read = 1'b1;
    end else begin
        packageBuffer1_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b0) & (ap_predicate_op30_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        validFifo_blk_n = validFifo_empty_n;
    end else begin
        validFifo_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op30_read_state1 == 1'b1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        validFifo_read = 1'b1;
    end else begin
        validFifo_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op30_read_state1 == 1'b1) & (validFifo_empty_n == 1'b0)) | ((ap_predicate_op28_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)) | ((ap_predicate_op21_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op48_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)) | ((ap_predicate_op50_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op30_read_state1 == 1'b1) & (validFifo_empty_n == 1'b0)) | ((ap_predicate_op28_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)) | ((ap_predicate_op21_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op48_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)) | ((ap_predicate_op50_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_start == 1'b1) & ((ap_done_reg == 1'b1) | ((ap_predicate_op30_read_state1 == 1'b1) & (validFifo_empty_n == 1'b0)) | ((ap_predicate_op28_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)) | ((ap_predicate_op21_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op48_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)) | ((ap_predicate_op50_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_done_reg == 1'b1) | ((ap_predicate_op30_read_state1 == 1'b1) & (validFifo_empty_n == 1'b0)) | ((ap_predicate_op28_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)) | ((ap_predicate_op21_read_state1 == 1'b1) & (packageBuffer1_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (((ap_predicate_op48_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)) | ((ap_predicate_op50_write_state2 == 1'b1) & (icmp_server_stream_stream_stream_stream_net_axis_64_0_dataStreams_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_218 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001));
end

always @ (*) begin
    ap_condition_51 = ((tmp_i_49_nbreadreq_fu_58_p3 == 1'd1) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_d_drop_flag_0_i_reg_79 = 'bx;

assign ap_phi_reg_pp0_iter0_d_drop_flag_1_i_reg_124 = 'bx;

assign ap_phi_reg_pp0_iter0_d_drop_new_1_i_reg_141 = 'bx;

assign ap_phi_reg_pp0_iter0_d_isFirstWord_flag_0_i_reg_90 = 'bx;

assign ap_phi_reg_pp0_iter0_d_isFirstWord_new_0_i_reg_107 = 'bx;

always @ (*) begin
    ap_predicate_op21_read_state1 = ((d_isFirstWord == 1'd0) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op28_read_state1 = ((tmp_i_49_nbreadreq_fu_58_p3 == 1'd1) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op30_read_state1 = ((tmp_i_49_nbreadreq_fu_58_p3 == 1'd1) & (d_isFirstWord == 1'd1) & (tmp_i_nbreadreq_fu_44_p3 == 1'd1));
end

always @ (*) begin
    ap_predicate_op48_write_state2 = ((d_drop_load_reg_208 == 1'd0) & (d_isFirstWord_load_reg_204 == 1'd0) & (tmp_i_reg_200 == 1'd1));
end

always @ (*) begin
    ap_predicate_op50_write_state2 = ((d_valid_reg_222 == 1'd1) & (tmp_i_49_reg_215 == 1'd1) & (d_isFirstWord_load_reg_204 == 1'd1) & (tmp_i_reg_200 == 1'd1));
end

assign d_drop_load_load_fu_174_p1 = d_drop;

assign d_valid_read_fu_66_p2 = validFifo_dout;

assign grp_fu_158_p3 = packageBuffer1_dout[32'd72];

assign p_06_fu_190_p1 = reg_166;

assign p_0_fu_195_p1 = reg_166;

assign tmp_i_49_nbreadreq_fu_58_p3 = validFifo_empty_n;

assign tmp_i_nbreadreq_fu_44_p3 = packageBuffer1_empty_n;

endmodule //icmp_server_top_dropper
