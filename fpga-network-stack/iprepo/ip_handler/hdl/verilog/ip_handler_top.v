// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ip_handler_top_ip_handler_top,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=3.200000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=2.644000,HLS_SYN_LAT=27,HLS_SYN_TPT=1,HLS_SYN_MEM=29,HLS_SYN_DSP=0,HLS_SYN_FF=58608,HLS_SYN_LUT=30191,HLS_VERSION=2022_1}" *)

module ip_handler_top (
        s_axis_raw_TDATA,
        s_axis_raw_TKEEP,
        s_axis_raw_TSTRB,
        s_axis_raw_TLAST,
        m_axis_arp_TDATA,
        m_axis_arp_TKEEP,
        m_axis_arp_TSTRB,
        m_axis_arp_TLAST,
        m_axis_icmpv6_TDATA,
        m_axis_icmpv6_TKEEP,
        m_axis_icmpv6_TSTRB,
        m_axis_icmpv6_TLAST,
        m_axis_ipv6udp_TDATA,
        m_axis_ipv6udp_TKEEP,
        m_axis_ipv6udp_TSTRB,
        m_axis_ipv6udp_TLAST,
        m_axis_icmp_TDATA,
        m_axis_icmp_TKEEP,
        m_axis_icmp_TSTRB,
        m_axis_icmp_TLAST,
        m_axis_udp_TDATA,
        m_axis_udp_TKEEP,
        m_axis_udp_TSTRB,
        m_axis_udp_TLAST,
        m_axis_tcp_TDATA,
        m_axis_tcp_TKEEP,
        m_axis_tcp_TSTRB,
        m_axis_tcp_TLAST,
        m_axis_roce_TDATA,
        m_axis_roce_TKEEP,
        m_axis_roce_TSTRB,
        m_axis_roce_TLAST,
        myIpAddress,
        ap_clk,
        ap_rst_n,
        s_axis_raw_TVALID,
        s_axis_raw_TREADY,
        m_axis_arp_TVALID,
        m_axis_arp_TREADY,
        m_axis_icmpv6_TVALID,
        m_axis_icmpv6_TREADY,
        m_axis_ipv6udp_TVALID,
        m_axis_ipv6udp_TREADY,
        m_axis_icmp_TVALID,
        m_axis_icmp_TREADY,
        m_axis_udp_TVALID,
        m_axis_udp_TREADY,
        m_axis_tcp_TVALID,
        m_axis_tcp_TREADY,
        m_axis_roce_TVALID,
        m_axis_roce_TREADY
);


input  [511:0] s_axis_raw_TDATA;
input  [63:0] s_axis_raw_TKEEP;
input  [63:0] s_axis_raw_TSTRB;
input  [0:0] s_axis_raw_TLAST;
output  [511:0] m_axis_arp_TDATA;
output  [63:0] m_axis_arp_TKEEP;
output  [63:0] m_axis_arp_TSTRB;
output  [0:0] m_axis_arp_TLAST;
output  [511:0] m_axis_icmpv6_TDATA;
output  [63:0] m_axis_icmpv6_TKEEP;
output  [63:0] m_axis_icmpv6_TSTRB;
output  [0:0] m_axis_icmpv6_TLAST;
output  [511:0] m_axis_ipv6udp_TDATA;
output  [63:0] m_axis_ipv6udp_TKEEP;
output  [63:0] m_axis_ipv6udp_TSTRB;
output  [0:0] m_axis_ipv6udp_TLAST;
output  [511:0] m_axis_icmp_TDATA;
output  [63:0] m_axis_icmp_TKEEP;
output  [63:0] m_axis_icmp_TSTRB;
output  [0:0] m_axis_icmp_TLAST;
output  [511:0] m_axis_udp_TDATA;
output  [63:0] m_axis_udp_TKEEP;
output  [63:0] m_axis_udp_TSTRB;
output  [0:0] m_axis_udp_TLAST;
output  [511:0] m_axis_tcp_TDATA;
output  [63:0] m_axis_tcp_TKEEP;
output  [63:0] m_axis_tcp_TSTRB;
output  [0:0] m_axis_tcp_TLAST;
output  [511:0] m_axis_roce_TDATA;
output  [63:0] m_axis_roce_TKEEP;
output  [63:0] m_axis_roce_TSTRB;
output  [0:0] m_axis_roce_TLAST;
input  [31:0] myIpAddress;
input   ap_clk;
input   ap_rst_n;
input   s_axis_raw_TVALID;
output   s_axis_raw_TREADY;
output   m_axis_arp_TVALID;
input   m_axis_arp_TREADY;
output   m_axis_icmpv6_TVALID;
input   m_axis_icmpv6_TREADY;
output   m_axis_ipv6udp_TVALID;
input   m_axis_ipv6udp_TREADY;
output   m_axis_icmp_TVALID;
input   m_axis_icmp_TREADY;
output   m_axis_udp_TVALID;
input   m_axis_udp_TREADY;
output   m_axis_tcp_TVALID;
input   m_axis_tcp_TREADY;
output   m_axis_roce_TVALID;
input   m_axis_roce_TREADY;

 reg    ap_rst_n_inv;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [31:0] entry_proc_U0_myIpAddress_c_din;
wire    entry_proc_U0_myIpAddress_c_write;
wire    convert_axis_to_net_axis_512_U0_ap_start;
wire    convert_axis_to_net_axis_512_U0_ap_done;
wire    convert_axis_to_net_axis_512_U0_ap_continue;
wire    convert_axis_to_net_axis_512_U0_ap_idle;
wire    convert_axis_to_net_axis_512_U0_ap_ready;
wire   [1023:0] convert_axis_to_net_axis_512_U0_s_axis_raw_internal_din;
wire    convert_axis_to_net_axis_512_U0_s_axis_raw_internal_write;
wire    convert_axis_to_net_axis_512_U0_s_axis_raw_TREADY;
wire    convert_net_axis_to_axis_512_U0_ap_start;
wire    convert_net_axis_to_axis_512_U0_ap_done;
wire    convert_net_axis_to_axis_512_U0_ap_continue;
wire    convert_net_axis_to_axis_512_U0_ap_idle;
wire    convert_net_axis_to_axis_512_U0_ap_ready;
wire    convert_net_axis_to_axis_512_U0_m_axis_arp_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_U0_m_axis_arp_TDATA;
wire    convert_net_axis_to_axis_512_U0_m_axis_arp_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_U0_m_axis_arp_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_U0_m_axis_arp_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_U0_m_axis_arp_TLAST;
wire    convert_net_axis_to_axis_512_1_U0_ap_start;
wire    convert_net_axis_to_axis_512_1_U0_ap_done;
wire    convert_net_axis_to_axis_512_1_U0_ap_continue;
wire    convert_net_axis_to_axis_512_1_U0_ap_idle;
wire    convert_net_axis_to_axis_512_1_U0_ap_ready;
wire    convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TDATA;
wire    convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TLAST;
wire    convert_net_axis_to_axis_512_2_U0_ap_start;
wire    convert_net_axis_to_axis_512_2_U0_ap_done;
wire    convert_net_axis_to_axis_512_2_U0_ap_continue;
wire    convert_net_axis_to_axis_512_2_U0_ap_idle;
wire    convert_net_axis_to_axis_512_2_U0_ap_ready;
wire    convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TDATA;
wire    convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TLAST;
wire    convert_net_axis_to_axis_512_3_U0_ap_start;
wire    convert_net_axis_to_axis_512_3_U0_ap_done;
wire    convert_net_axis_to_axis_512_3_U0_ap_continue;
wire    convert_net_axis_to_axis_512_3_U0_ap_idle;
wire    convert_net_axis_to_axis_512_3_U0_ap_ready;
wire    convert_net_axis_to_axis_512_3_U0_m_axis_icmp_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TDATA;
wire    convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TLAST;
wire    convert_net_axis_to_axis_512_4_U0_ap_start;
wire    convert_net_axis_to_axis_512_4_U0_ap_done;
wire    convert_net_axis_to_axis_512_4_U0_ap_continue;
wire    convert_net_axis_to_axis_512_4_U0_ap_idle;
wire    convert_net_axis_to_axis_512_4_U0_ap_ready;
wire    convert_net_axis_to_axis_512_4_U0_m_axis_udp_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_4_U0_m_axis_udp_TDATA;
wire    convert_net_axis_to_axis_512_4_U0_m_axis_udp_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_4_U0_m_axis_udp_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_4_U0_m_axis_udp_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_4_U0_m_axis_udp_TLAST;
wire    convert_net_axis_to_axis_512_5_U0_ap_start;
wire    convert_net_axis_to_axis_512_5_U0_ap_done;
wire    convert_net_axis_to_axis_512_5_U0_ap_continue;
wire    convert_net_axis_to_axis_512_5_U0_ap_idle;
wire    convert_net_axis_to_axis_512_5_U0_ap_ready;
wire    convert_net_axis_to_axis_512_5_U0_m_axis_tcp_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TDATA;
wire    convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TLAST;
wire    convert_net_axis_to_axis_512_6_U0_ap_start;
wire    convert_net_axis_to_axis_512_6_U0_ap_done;
wire    convert_net_axis_to_axis_512_6_U0_ap_continue;
wire    convert_net_axis_to_axis_512_6_U0_ap_idle;
wire    convert_net_axis_to_axis_512_6_U0_ap_ready;
wire    convert_net_axis_to_axis_512_6_U0_m_axis_roce_internal_read;
wire   [511:0] convert_net_axis_to_axis_512_6_U0_m_axis_roce_TDATA;
wire    convert_net_axis_to_axis_512_6_U0_m_axis_roce_TVALID;
wire   [63:0] convert_net_axis_to_axis_512_6_U0_m_axis_roce_TKEEP;
wire   [63:0] convert_net_axis_to_axis_512_6_U0_m_axis_roce_TSTRB;
wire   [0:0] convert_net_axis_to_axis_512_6_U0_m_axis_roce_TLAST;
wire    detect_eth_protocol_512_U0_ap_start;
wire    detect_eth_protocol_512_U0_ap_done;
wire    detect_eth_protocol_512_U0_ap_continue;
wire    detect_eth_protocol_512_U0_ap_idle;
wire    detect_eth_protocol_512_U0_ap_ready;
wire    detect_eth_protocol_512_U0_s_axis_raw_internal_read;
wire   [1023:0] detect_eth_protocol_512_U0_ethDataFifo_din;
wire    detect_eth_protocol_512_U0_ethDataFifo_write;
wire   [15:0] detect_eth_protocol_512_U0_etherTypeFifo_din;
wire    detect_eth_protocol_512_U0_etherTypeFifo_write;
wire    route_by_eth_protocol_512_U0_ap_start;
wire    route_by_eth_protocol_512_U0_ap_done;
wire    route_by_eth_protocol_512_U0_ap_continue;
wire    route_by_eth_protocol_512_U0_ap_idle;
wire    route_by_eth_protocol_512_U0_ap_ready;
wire    route_by_eth_protocol_512_U0_etherTypeFifo_read;
wire    route_by_eth_protocol_512_U0_ethDataFifo_read;
wire   [1023:0] route_by_eth_protocol_512_U0_ipv6ShiftFifo_din;
wire    route_by_eth_protocol_512_U0_ipv6ShiftFifo_write;
wire   [1023:0] route_by_eth_protocol_512_U0_ipv4ShiftFifo_din;
wire    route_by_eth_protocol_512_U0_ipv4ShiftFifo_write;
wire   [1023:0] route_by_eth_protocol_512_U0_m_axis_arp_internal_din;
wire    route_by_eth_protocol_512_U0_m_axis_arp_internal_write;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_start;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_done;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_continue;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_idle;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_ready;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipv4ShiftFifo_read;
wire   [576:0] ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipDataFifo_din;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipDataFifo_write;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_start;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_done;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_continue;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_idle;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_ready;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6ShiftFifo_read;
wire   [1023:0] ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6DataFifo_din;
wire    ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6DataFifo_write;
wire    extract_ip_meta_512_U0_ap_start;
wire    extract_ip_meta_512_U0_ap_done;
wire    extract_ip_meta_512_U0_ap_continue;
wire    extract_ip_meta_512_U0_ap_idle;
wire    extract_ip_meta_512_U0_ap_ready;
wire    extract_ip_meta_512_U0_myIpAddress_read;
wire    extract_ip_meta_512_U0_ipDataFifo_read;
wire   [1023:0] extract_ip_meta_512_U0_ipDataMetaFifo_din;
wire    extract_ip_meta_512_U0_ipDataMetaFifo_write;
wire   [0:0] extract_ip_meta_512_U0_validIpAddressFifo_din;
wire    extract_ip_meta_512_U0_validIpAddressFifo_write;
wire   [7:0] extract_ip_meta_512_U0_ipv4ProtocolFifo_din;
wire    extract_ip_meta_512_U0_ipv4ProtocolFifo_write;
wire    ip_handler_compute_ipv4_checksum_U0_ap_start;
wire    ip_handler_compute_ipv4_checksum_U0_ap_done;
wire    ip_handler_compute_ipv4_checksum_U0_ap_continue;
wire    ip_handler_compute_ipv4_checksum_U0_ap_idle;
wire    ip_handler_compute_ipv4_checksum_U0_ap_ready;
wire    ip_handler_compute_ipv4_checksum_U0_ipDataMetaFifo_read;
wire   [576:0] ip_handler_compute_ipv4_checksum_U0_ipDataCheckFifo_din;
wire    ip_handler_compute_ipv4_checksum_U0_ipDataCheckFifo_write;
wire   [543:0] ip_handler_compute_ipv4_checksum_U0_iph_subSumsFifoOut_din;
wire    ip_handler_compute_ipv4_checksum_U0_iph_subSumsFifoOut_write;
wire    ip_handler_check_ipv4_checksum_32_U0_ap_start;
wire    ip_handler_check_ipv4_checksum_32_U0_ap_done;
wire    ip_handler_check_ipv4_checksum_32_U0_ap_continue;
wire    ip_handler_check_ipv4_checksum_32_U0_ap_idle;
wire    ip_handler_check_ipv4_checksum_32_U0_ap_ready;
wire    ip_handler_check_ipv4_checksum_32_U0_iph_subSumsFifoOut_read;
wire   [0:0] ip_handler_check_ipv4_checksum_32_U0_validChecksumFifo_din;
wire    ip_handler_check_ipv4_checksum_32_U0_validChecksumFifo_write;
wire    ip_invalid_dropper_512_U0_ap_start;
wire    ip_invalid_dropper_512_U0_ap_done;
wire    ip_invalid_dropper_512_U0_ap_continue;
wire    ip_invalid_dropper_512_U0_ap_idle;
wire    ip_invalid_dropper_512_U0_ap_ready;
wire    ip_invalid_dropper_512_U0_ipDataCheckFifo_read;
wire    ip_invalid_dropper_512_U0_validChecksumFifo_read;
wire    ip_invalid_dropper_512_U0_validIpAddressFifo_read;
wire   [576:0] ip_invalid_dropper_512_U0_ipDataDropFifo_din;
wire    ip_invalid_dropper_512_U0_ipDataDropFifo_write;
wire   [0:0] ip_invalid_dropper_512_U0_ipv4ValidFifo_din;
wire    ip_invalid_dropper_512_U0_ipv4ValidFifo_write;
wire    cut_length_U0_ap_start;
wire    cut_length_U0_ap_done;
wire    cut_length_U0_ap_continue;
wire    cut_length_U0_ap_idle;
wire    cut_length_U0_ap_ready;
wire    cut_length_U0_ipDataDropFifo_read;
wire   [576:0] cut_length_U0_ipDataCutFifo_din;
wire    cut_length_U0_ipDataCutFifo_write;
wire    detect_ipv4_protocol_512_U0_ap_start;
wire    detect_ipv4_protocol_512_U0_ap_done;
wire    detect_ipv4_protocol_512_U0_ap_continue;
wire    detect_ipv4_protocol_512_U0_ap_idle;
wire    detect_ipv4_protocol_512_U0_ap_ready;
wire    detect_ipv4_protocol_512_U0_ipv4ProtocolFifo_read;
wire    detect_ipv4_protocol_512_U0_ipv4ValidFifo_read;
wire    detect_ipv4_protocol_512_U0_ipDataCutFifo_read;
wire   [1023:0] detect_ipv4_protocol_512_U0_m_axis_tcp_internal_din;
wire    detect_ipv4_protocol_512_U0_m_axis_tcp_internal_write;
wire   [576:0] detect_ipv4_protocol_512_U0_udpDataFifo_din;
wire    detect_ipv4_protocol_512_U0_udpDataFifo_write;
wire   [1023:0] detect_ipv4_protocol_512_U0_m_axis_icmp_internal_din;
wire    detect_ipv4_protocol_512_U0_m_axis_icmp_internal_write;
wire    detect_ipv6_protocol_512_U0_ap_start;
wire    detect_ipv6_protocol_512_U0_ap_done;
wire    detect_ipv6_protocol_512_U0_ap_continue;
wire    detect_ipv6_protocol_512_U0_ap_idle;
wire    detect_ipv6_protocol_512_U0_ap_ready;
wire    detect_ipv6_protocol_512_U0_ipv6DataFifo_read;
wire   [1023:0] detect_ipv6_protocol_512_U0_m_axis_ipv6udp_internal_din;
wire    detect_ipv6_protocol_512_U0_m_axis_ipv6udp_internal_write;
wire   [1023:0] detect_ipv6_protocol_512_U0_m_axis_icmpv6_internal_din;
wire    detect_ipv6_protocol_512_U0_m_axis_icmpv6_internal_write;
wire    ip_handler_duplicate_stream_net_axis_512_U0_ap_start;
wire    ip_handler_duplicate_stream_net_axis_512_U0_ap_done;
wire    ip_handler_duplicate_stream_net_axis_512_U0_ap_continue;
wire    ip_handler_duplicate_stream_net_axis_512_U0_ap_idle;
wire    ip_handler_duplicate_stream_net_axis_512_U0_ap_ready;
wire    ip_handler_duplicate_stream_net_axis_512_U0_udpDataFifo_read;
wire   [1023:0] ip_handler_duplicate_stream_net_axis_512_U0_m_axis_udp_internal_din;
wire    ip_handler_duplicate_stream_net_axis_512_U0_m_axis_udp_internal_write;
wire   [1023:0] ip_handler_duplicate_stream_net_axis_512_U0_m_axis_roce_internal_din;
wire    ip_handler_duplicate_stream_net_axis_512_U0_m_axis_roce_internal_write;
wire    myIpAddress_c_full_n;
wire   [31:0] myIpAddress_c_dout;
wire   [3:0] myIpAddress_c_num_data_valid;
wire   [3:0] myIpAddress_c_fifo_cap;
wire    myIpAddress_c_empty_n;
wire    s_axis_raw_internal_full_n;
wire   [1023:0] s_axis_raw_internal_dout;
wire   [1:0] s_axis_raw_internal_num_data_valid;
wire   [1:0] s_axis_raw_internal_fifo_cap;
wire    s_axis_raw_internal_empty_n;
wire    m_axis_arp_internal_full_n;
wire   [1023:0] m_axis_arp_internal_dout;
wire   [1:0] m_axis_arp_internal_num_data_valid;
wire   [1:0] m_axis_arp_internal_fifo_cap;
wire    m_axis_arp_internal_empty_n;
wire    m_axis_icmpv6_internal_full_n;
wire   [1023:0] m_axis_icmpv6_internal_dout;
wire   [1:0] m_axis_icmpv6_internal_num_data_valid;
wire   [1:0] m_axis_icmpv6_internal_fifo_cap;
wire    m_axis_icmpv6_internal_empty_n;
wire    m_axis_ipv6udp_internal_full_n;
wire   [1023:0] m_axis_ipv6udp_internal_dout;
wire   [1:0] m_axis_ipv6udp_internal_num_data_valid;
wire   [1:0] m_axis_ipv6udp_internal_fifo_cap;
wire    m_axis_ipv6udp_internal_empty_n;
wire    m_axis_icmp_internal_full_n;
wire   [1023:0] m_axis_icmp_internal_dout;
wire   [1:0] m_axis_icmp_internal_num_data_valid;
wire   [1:0] m_axis_icmp_internal_fifo_cap;
wire    m_axis_icmp_internal_empty_n;
wire    m_axis_udp_internal_full_n;
wire   [1023:0] m_axis_udp_internal_dout;
wire   [1:0] m_axis_udp_internal_num_data_valid;
wire   [1:0] m_axis_udp_internal_fifo_cap;
wire    m_axis_udp_internal_empty_n;
wire    m_axis_tcp_internal_full_n;
wire   [1023:0] m_axis_tcp_internal_dout;
wire   [1:0] m_axis_tcp_internal_num_data_valid;
wire   [1:0] m_axis_tcp_internal_fifo_cap;
wire    m_axis_tcp_internal_empty_n;
wire    m_axis_roce_internal_full_n;
wire   [1023:0] m_axis_roce_internal_dout;
wire   [1:0] m_axis_roce_internal_num_data_valid;
wire   [1:0] m_axis_roce_internal_fifo_cap;
wire    m_axis_roce_internal_empty_n;
wire    etherTypeFifo_full_n;
wire   [15:0] etherTypeFifo_dout;
wire   [1:0] etherTypeFifo_num_data_valid;
wire   [1:0] etherTypeFifo_fifo_cap;
wire    etherTypeFifo_empty_n;
wire    ethDataFifo_full_n;
wire   [1023:0] ethDataFifo_dout;
wire   [2:0] ethDataFifo_num_data_valid;
wire   [2:0] ethDataFifo_fifo_cap;
wire    ethDataFifo_empty_n;
wire    ipv4ShiftFifo_full_n;
wire   [1023:0] ipv4ShiftFifo_dout;
wire   [1:0] ipv4ShiftFifo_num_data_valid;
wire   [1:0] ipv4ShiftFifo_fifo_cap;
wire    ipv4ShiftFifo_empty_n;
wire    ipv6ShiftFifo_full_n;
wire   [1023:0] ipv6ShiftFifo_dout;
wire   [1:0] ipv6ShiftFifo_num_data_valid;
wire   [1:0] ipv6ShiftFifo_fifo_cap;
wire    ipv6ShiftFifo_empty_n;
wire    ipDataFifo_full_n;
wire   [576:0] ipDataFifo_dout;
wire   [1:0] ipDataFifo_num_data_valid;
wire   [1:0] ipDataFifo_fifo_cap;
wire    ipDataFifo_empty_n;
wire    ipv6DataFifo_full_n;
wire   [1023:0] ipv6DataFifo_dout;
wire   [1:0] ipv6DataFifo_num_data_valid;
wire   [1:0] ipv6DataFifo_fifo_cap;
wire    ipv6DataFifo_empty_n;
wire    ipDataMetaFifo_full_n;
wire   [1023:0] ipDataMetaFifo_dout;
wire   [1:0] ipDataMetaFifo_num_data_valid;
wire   [1:0] ipDataMetaFifo_fifo_cap;
wire    ipDataMetaFifo_empty_n;
wire    validIpAddressFifo_full_n;
wire   [0:0] validIpAddressFifo_dout;
wire   [5:0] validIpAddressFifo_num_data_valid;
wire   [5:0] validIpAddressFifo_fifo_cap;
wire    validIpAddressFifo_empty_n;
wire    ipv4ProtocolFifo_full_n;
wire   [7:0] ipv4ProtocolFifo_dout;
wire   [5:0] ipv4ProtocolFifo_num_data_valid;
wire   [5:0] ipv4ProtocolFifo_fifo_cap;
wire    ipv4ProtocolFifo_empty_n;
wire    ipDataCheckFifo_full_n;
wire   [576:0] ipDataCheckFifo_dout;
wire   [6:0] ipDataCheckFifo_num_data_valid;
wire   [6:0] ipDataCheckFifo_fifo_cap;
wire    ipDataCheckFifo_empty_n;
wire    iph_subSumsFifoOut_full_n;
wire   [543:0] iph_subSumsFifoOut_dout;
wire   [1:0] iph_subSumsFifoOut_num_data_valid;
wire   [1:0] iph_subSumsFifoOut_fifo_cap;
wire    iph_subSumsFifoOut_empty_n;
wire    validChecksumFifo_full_n;
wire   [0:0] validChecksumFifo_dout;
wire   [2:0] validChecksumFifo_num_data_valid;
wire   [2:0] validChecksumFifo_fifo_cap;
wire    validChecksumFifo_empty_n;
wire    ipv4ValidFifo_full_n;
wire   [0:0] ipv4ValidFifo_dout;
wire   [3:0] ipv4ValidFifo_num_data_valid;
wire   [3:0] ipv4ValidFifo_fifo_cap;
wire    ipv4ValidFifo_empty_n;
wire    ipDataDropFifo_full_n;
wire   [576:0] ipDataDropFifo_dout;
wire   [1:0] ipDataDropFifo_num_data_valid;
wire   [1:0] ipDataDropFifo_fifo_cap;
wire    ipDataDropFifo_empty_n;
wire    ipDataCutFifo_full_n;
wire   [576:0] ipDataCutFifo_dout;
wire   [1:0] ipDataCutFifo_num_data_valid;
wire   [1:0] ipDataCutFifo_fifo_cap;
wire    ipDataCutFifo_empty_n;
wire    udpDataFifo_full_n;
wire   [576:0] udpDataFifo_dout;
wire   [1:0] udpDataFifo_num_data_valid;
wire   [1:0] udpDataFifo_fifo_cap;
wire    udpDataFifo_empty_n;

ip_handler_top_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .myIpAddress(myIpAddress),
    .myIpAddress_c_din(entry_proc_U0_myIpAddress_c_din),
    .myIpAddress_c_num_data_valid(myIpAddress_c_num_data_valid),
    .myIpAddress_c_fifo_cap(myIpAddress_c_fifo_cap),
    .myIpAddress_c_full_n(myIpAddress_c_full_n),
    .myIpAddress_c_write(entry_proc_U0_myIpAddress_c_write)
);

ip_handler_top_convert_axis_to_net_axis_512_s convert_axis_to_net_axis_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_axis_to_net_axis_512_U0_ap_start),
    .ap_done(convert_axis_to_net_axis_512_U0_ap_done),
    .ap_continue(convert_axis_to_net_axis_512_U0_ap_continue),
    .ap_idle(convert_axis_to_net_axis_512_U0_ap_idle),
    .ap_ready(convert_axis_to_net_axis_512_U0_ap_ready),
    .s_axis_raw_TVALID(s_axis_raw_TVALID),
    .s_axis_raw_internal_din(convert_axis_to_net_axis_512_U0_s_axis_raw_internal_din),
    .s_axis_raw_internal_num_data_valid(s_axis_raw_internal_num_data_valid),
    .s_axis_raw_internal_fifo_cap(s_axis_raw_internal_fifo_cap),
    .s_axis_raw_internal_full_n(s_axis_raw_internal_full_n),
    .s_axis_raw_internal_write(convert_axis_to_net_axis_512_U0_s_axis_raw_internal_write),
    .s_axis_raw_TDATA(s_axis_raw_TDATA),
    .s_axis_raw_TREADY(convert_axis_to_net_axis_512_U0_s_axis_raw_TREADY),
    .s_axis_raw_TKEEP(s_axis_raw_TKEEP),
    .s_axis_raw_TSTRB(s_axis_raw_TSTRB),
    .s_axis_raw_TLAST(s_axis_raw_TLAST)
);

ip_handler_top_convert_net_axis_to_axis_512_s convert_net_axis_to_axis_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_U0_ap_ready),
    .m_axis_arp_internal_dout(m_axis_arp_internal_dout),
    .m_axis_arp_internal_num_data_valid(m_axis_arp_internal_num_data_valid),
    .m_axis_arp_internal_fifo_cap(m_axis_arp_internal_fifo_cap),
    .m_axis_arp_internal_empty_n(m_axis_arp_internal_empty_n),
    .m_axis_arp_internal_read(convert_net_axis_to_axis_512_U0_m_axis_arp_internal_read),
    .m_axis_arp_TREADY(m_axis_arp_TREADY),
    .m_axis_arp_TDATA(convert_net_axis_to_axis_512_U0_m_axis_arp_TDATA),
    .m_axis_arp_TVALID(convert_net_axis_to_axis_512_U0_m_axis_arp_TVALID),
    .m_axis_arp_TKEEP(convert_net_axis_to_axis_512_U0_m_axis_arp_TKEEP),
    .m_axis_arp_TSTRB(convert_net_axis_to_axis_512_U0_m_axis_arp_TSTRB),
    .m_axis_arp_TLAST(convert_net_axis_to_axis_512_U0_m_axis_arp_TLAST)
);

ip_handler_top_convert_net_axis_to_axis_512_1 convert_net_axis_to_axis_512_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_1_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_1_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_1_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_1_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_1_U0_ap_ready),
    .m_axis_icmpv6_internal_dout(m_axis_icmpv6_internal_dout),
    .m_axis_icmpv6_internal_num_data_valid(m_axis_icmpv6_internal_num_data_valid),
    .m_axis_icmpv6_internal_fifo_cap(m_axis_icmpv6_internal_fifo_cap),
    .m_axis_icmpv6_internal_empty_n(m_axis_icmpv6_internal_empty_n),
    .m_axis_icmpv6_internal_read(convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_internal_read),
    .m_axis_icmpv6_TREADY(m_axis_icmpv6_TREADY),
    .m_axis_icmpv6_TDATA(convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TDATA),
    .m_axis_icmpv6_TVALID(convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TVALID),
    .m_axis_icmpv6_TKEEP(convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TKEEP),
    .m_axis_icmpv6_TSTRB(convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TSTRB),
    .m_axis_icmpv6_TLAST(convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TLAST)
);

ip_handler_top_convert_net_axis_to_axis_512_2 convert_net_axis_to_axis_512_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_2_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_2_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_2_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_2_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_2_U0_ap_ready),
    .m_axis_ipv6udp_internal_dout(m_axis_ipv6udp_internal_dout),
    .m_axis_ipv6udp_internal_num_data_valid(m_axis_ipv6udp_internal_num_data_valid),
    .m_axis_ipv6udp_internal_fifo_cap(m_axis_ipv6udp_internal_fifo_cap),
    .m_axis_ipv6udp_internal_empty_n(m_axis_ipv6udp_internal_empty_n),
    .m_axis_ipv6udp_internal_read(convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_internal_read),
    .m_axis_ipv6udp_TREADY(m_axis_ipv6udp_TREADY),
    .m_axis_ipv6udp_TDATA(convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TDATA),
    .m_axis_ipv6udp_TVALID(convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TVALID),
    .m_axis_ipv6udp_TKEEP(convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TKEEP),
    .m_axis_ipv6udp_TSTRB(convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TSTRB),
    .m_axis_ipv6udp_TLAST(convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TLAST)
);

ip_handler_top_convert_net_axis_to_axis_512_3 convert_net_axis_to_axis_512_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_3_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_3_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_3_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_3_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_3_U0_ap_ready),
    .m_axis_icmp_internal_dout(m_axis_icmp_internal_dout),
    .m_axis_icmp_internal_num_data_valid(m_axis_icmp_internal_num_data_valid),
    .m_axis_icmp_internal_fifo_cap(m_axis_icmp_internal_fifo_cap),
    .m_axis_icmp_internal_empty_n(m_axis_icmp_internal_empty_n),
    .m_axis_icmp_internal_read(convert_net_axis_to_axis_512_3_U0_m_axis_icmp_internal_read),
    .m_axis_icmp_TREADY(m_axis_icmp_TREADY),
    .m_axis_icmp_TDATA(convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TDATA),
    .m_axis_icmp_TVALID(convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TVALID),
    .m_axis_icmp_TKEEP(convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TKEEP),
    .m_axis_icmp_TSTRB(convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TSTRB),
    .m_axis_icmp_TLAST(convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TLAST)
);

ip_handler_top_convert_net_axis_to_axis_512_4 convert_net_axis_to_axis_512_4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_4_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_4_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_4_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_4_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_4_U0_ap_ready),
    .m_axis_udp_internal_dout(m_axis_udp_internal_dout),
    .m_axis_udp_internal_num_data_valid(m_axis_udp_internal_num_data_valid),
    .m_axis_udp_internal_fifo_cap(m_axis_udp_internal_fifo_cap),
    .m_axis_udp_internal_empty_n(m_axis_udp_internal_empty_n),
    .m_axis_udp_internal_read(convert_net_axis_to_axis_512_4_U0_m_axis_udp_internal_read),
    .m_axis_udp_TREADY(m_axis_udp_TREADY),
    .m_axis_udp_TDATA(convert_net_axis_to_axis_512_4_U0_m_axis_udp_TDATA),
    .m_axis_udp_TVALID(convert_net_axis_to_axis_512_4_U0_m_axis_udp_TVALID),
    .m_axis_udp_TKEEP(convert_net_axis_to_axis_512_4_U0_m_axis_udp_TKEEP),
    .m_axis_udp_TSTRB(convert_net_axis_to_axis_512_4_U0_m_axis_udp_TSTRB),
    .m_axis_udp_TLAST(convert_net_axis_to_axis_512_4_U0_m_axis_udp_TLAST)
);

ip_handler_top_convert_net_axis_to_axis_512_5 convert_net_axis_to_axis_512_5_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_5_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_5_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_5_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_5_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_5_U0_ap_ready),
    .m_axis_tcp_internal_dout(m_axis_tcp_internal_dout),
    .m_axis_tcp_internal_num_data_valid(m_axis_tcp_internal_num_data_valid),
    .m_axis_tcp_internal_fifo_cap(m_axis_tcp_internal_fifo_cap),
    .m_axis_tcp_internal_empty_n(m_axis_tcp_internal_empty_n),
    .m_axis_tcp_internal_read(convert_net_axis_to_axis_512_5_U0_m_axis_tcp_internal_read),
    .m_axis_tcp_TREADY(m_axis_tcp_TREADY),
    .m_axis_tcp_TDATA(convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TDATA),
    .m_axis_tcp_TVALID(convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TVALID),
    .m_axis_tcp_TKEEP(convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TKEEP),
    .m_axis_tcp_TSTRB(convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TSTRB),
    .m_axis_tcp_TLAST(convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TLAST)
);

ip_handler_top_convert_net_axis_to_axis_512_6 convert_net_axis_to_axis_512_6_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(convert_net_axis_to_axis_512_6_U0_ap_start),
    .ap_done(convert_net_axis_to_axis_512_6_U0_ap_done),
    .ap_continue(convert_net_axis_to_axis_512_6_U0_ap_continue),
    .ap_idle(convert_net_axis_to_axis_512_6_U0_ap_idle),
    .ap_ready(convert_net_axis_to_axis_512_6_U0_ap_ready),
    .m_axis_roce_internal_dout(m_axis_roce_internal_dout),
    .m_axis_roce_internal_num_data_valid(m_axis_roce_internal_num_data_valid),
    .m_axis_roce_internal_fifo_cap(m_axis_roce_internal_fifo_cap),
    .m_axis_roce_internal_empty_n(m_axis_roce_internal_empty_n),
    .m_axis_roce_internal_read(convert_net_axis_to_axis_512_6_U0_m_axis_roce_internal_read),
    .m_axis_roce_TREADY(m_axis_roce_TREADY),
    .m_axis_roce_TDATA(convert_net_axis_to_axis_512_6_U0_m_axis_roce_TDATA),
    .m_axis_roce_TVALID(convert_net_axis_to_axis_512_6_U0_m_axis_roce_TVALID),
    .m_axis_roce_TKEEP(convert_net_axis_to_axis_512_6_U0_m_axis_roce_TKEEP),
    .m_axis_roce_TSTRB(convert_net_axis_to_axis_512_6_U0_m_axis_roce_TSTRB),
    .m_axis_roce_TLAST(convert_net_axis_to_axis_512_6_U0_m_axis_roce_TLAST)
);

ip_handler_top_detect_eth_protocol_512_s detect_eth_protocol_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(detect_eth_protocol_512_U0_ap_start),
    .ap_done(detect_eth_protocol_512_U0_ap_done),
    .ap_continue(detect_eth_protocol_512_U0_ap_continue),
    .ap_idle(detect_eth_protocol_512_U0_ap_idle),
    .ap_ready(detect_eth_protocol_512_U0_ap_ready),
    .s_axis_raw_internal_dout(s_axis_raw_internal_dout),
    .s_axis_raw_internal_num_data_valid(s_axis_raw_internal_num_data_valid),
    .s_axis_raw_internal_fifo_cap(s_axis_raw_internal_fifo_cap),
    .s_axis_raw_internal_empty_n(s_axis_raw_internal_empty_n),
    .s_axis_raw_internal_read(detect_eth_protocol_512_U0_s_axis_raw_internal_read),
    .ethDataFifo_din(detect_eth_protocol_512_U0_ethDataFifo_din),
    .ethDataFifo_num_data_valid(ethDataFifo_num_data_valid),
    .ethDataFifo_fifo_cap(ethDataFifo_fifo_cap),
    .ethDataFifo_full_n(ethDataFifo_full_n),
    .ethDataFifo_write(detect_eth_protocol_512_U0_ethDataFifo_write),
    .etherTypeFifo_din(detect_eth_protocol_512_U0_etherTypeFifo_din),
    .etherTypeFifo_num_data_valid(etherTypeFifo_num_data_valid),
    .etherTypeFifo_fifo_cap(etherTypeFifo_fifo_cap),
    .etherTypeFifo_full_n(etherTypeFifo_full_n),
    .etherTypeFifo_write(detect_eth_protocol_512_U0_etherTypeFifo_write)
);

ip_handler_top_route_by_eth_protocol_512_s route_by_eth_protocol_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(route_by_eth_protocol_512_U0_ap_start),
    .ap_done(route_by_eth_protocol_512_U0_ap_done),
    .ap_continue(route_by_eth_protocol_512_U0_ap_continue),
    .ap_idle(route_by_eth_protocol_512_U0_ap_idle),
    .ap_ready(route_by_eth_protocol_512_U0_ap_ready),
    .etherTypeFifo_dout(etherTypeFifo_dout),
    .etherTypeFifo_num_data_valid(etherTypeFifo_num_data_valid),
    .etherTypeFifo_fifo_cap(etherTypeFifo_fifo_cap),
    .etherTypeFifo_empty_n(etherTypeFifo_empty_n),
    .etherTypeFifo_read(route_by_eth_protocol_512_U0_etherTypeFifo_read),
    .ethDataFifo_dout(ethDataFifo_dout),
    .ethDataFifo_num_data_valid(ethDataFifo_num_data_valid),
    .ethDataFifo_fifo_cap(ethDataFifo_fifo_cap),
    .ethDataFifo_empty_n(ethDataFifo_empty_n),
    .ethDataFifo_read(route_by_eth_protocol_512_U0_ethDataFifo_read),
    .ipv6ShiftFifo_din(route_by_eth_protocol_512_U0_ipv6ShiftFifo_din),
    .ipv6ShiftFifo_num_data_valid(ipv6ShiftFifo_num_data_valid),
    .ipv6ShiftFifo_fifo_cap(ipv6ShiftFifo_fifo_cap),
    .ipv6ShiftFifo_full_n(ipv6ShiftFifo_full_n),
    .ipv6ShiftFifo_write(route_by_eth_protocol_512_U0_ipv6ShiftFifo_write),
    .ipv4ShiftFifo_din(route_by_eth_protocol_512_U0_ipv4ShiftFifo_din),
    .ipv4ShiftFifo_num_data_valid(ipv4ShiftFifo_num_data_valid),
    .ipv4ShiftFifo_fifo_cap(ipv4ShiftFifo_fifo_cap),
    .ipv4ShiftFifo_full_n(ipv4ShiftFifo_full_n),
    .ipv4ShiftFifo_write(route_by_eth_protocol_512_U0_ipv4ShiftFifo_write),
    .m_axis_arp_internal_din(route_by_eth_protocol_512_U0_m_axis_arp_internal_din),
    .m_axis_arp_internal_num_data_valid(m_axis_arp_internal_num_data_valid),
    .m_axis_arp_internal_fifo_cap(m_axis_arp_internal_fifo_cap),
    .m_axis_arp_internal_full_n(m_axis_arp_internal_full_n),
    .m_axis_arp_internal_write(route_by_eth_protocol_512_U0_m_axis_arp_internal_write)
);

ip_handler_top_ip_handler_rshiftWordByOctet_net_axis_512_512_1_s ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_start),
    .ap_done(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_done),
    .ap_continue(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_continue),
    .ap_idle(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_idle),
    .ap_ready(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_ready),
    .ipv4ShiftFifo_dout(ipv4ShiftFifo_dout),
    .ipv4ShiftFifo_num_data_valid(ipv4ShiftFifo_num_data_valid),
    .ipv4ShiftFifo_fifo_cap(ipv4ShiftFifo_fifo_cap),
    .ipv4ShiftFifo_empty_n(ipv4ShiftFifo_empty_n),
    .ipv4ShiftFifo_read(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipv4ShiftFifo_read),
    .ipDataFifo_din(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipDataFifo_din),
    .ipDataFifo_num_data_valid(ipDataFifo_num_data_valid),
    .ipDataFifo_fifo_cap(ipDataFifo_fifo_cap),
    .ipDataFifo_full_n(ipDataFifo_full_n),
    .ipDataFifo_write(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipDataFifo_write)
);

ip_handler_top_ip_handler_rshiftWordByOctet_net_axis_512_512_3_s ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_start),
    .ap_done(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_done),
    .ap_continue(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_continue),
    .ap_idle(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_idle),
    .ap_ready(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_ready),
    .ipv6ShiftFifo_dout(ipv6ShiftFifo_dout),
    .ipv6ShiftFifo_num_data_valid(ipv6ShiftFifo_num_data_valid),
    .ipv6ShiftFifo_fifo_cap(ipv6ShiftFifo_fifo_cap),
    .ipv6ShiftFifo_empty_n(ipv6ShiftFifo_empty_n),
    .ipv6ShiftFifo_read(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6ShiftFifo_read),
    .ipv6DataFifo_din(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6DataFifo_din),
    .ipv6DataFifo_num_data_valid(ipv6DataFifo_num_data_valid),
    .ipv6DataFifo_fifo_cap(ipv6DataFifo_fifo_cap),
    .ipv6DataFifo_full_n(ipv6DataFifo_full_n),
    .ipv6DataFifo_write(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6DataFifo_write)
);

ip_handler_top_extract_ip_meta_512_s extract_ip_meta_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(extract_ip_meta_512_U0_ap_start),
    .ap_done(extract_ip_meta_512_U0_ap_done),
    .ap_continue(extract_ip_meta_512_U0_ap_continue),
    .ap_idle(extract_ip_meta_512_U0_ap_idle),
    .ap_ready(extract_ip_meta_512_U0_ap_ready),
    .myIpAddress_dout(myIpAddress_c_dout),
    .myIpAddress_num_data_valid(myIpAddress_c_num_data_valid),
    .myIpAddress_fifo_cap(myIpAddress_c_fifo_cap),
    .myIpAddress_empty_n(myIpAddress_c_empty_n),
    .myIpAddress_read(extract_ip_meta_512_U0_myIpAddress_read),
    .ipDataFifo_dout(ipDataFifo_dout),
    .ipDataFifo_num_data_valid(ipDataFifo_num_data_valid),
    .ipDataFifo_fifo_cap(ipDataFifo_fifo_cap),
    .ipDataFifo_empty_n(ipDataFifo_empty_n),
    .ipDataFifo_read(extract_ip_meta_512_U0_ipDataFifo_read),
    .ipDataMetaFifo_din(extract_ip_meta_512_U0_ipDataMetaFifo_din),
    .ipDataMetaFifo_num_data_valid(ipDataMetaFifo_num_data_valid),
    .ipDataMetaFifo_fifo_cap(ipDataMetaFifo_fifo_cap),
    .ipDataMetaFifo_full_n(ipDataMetaFifo_full_n),
    .ipDataMetaFifo_write(extract_ip_meta_512_U0_ipDataMetaFifo_write),
    .validIpAddressFifo_din(extract_ip_meta_512_U0_validIpAddressFifo_din),
    .validIpAddressFifo_num_data_valid(validIpAddressFifo_num_data_valid),
    .validIpAddressFifo_fifo_cap(validIpAddressFifo_fifo_cap),
    .validIpAddressFifo_full_n(validIpAddressFifo_full_n),
    .validIpAddressFifo_write(extract_ip_meta_512_U0_validIpAddressFifo_write),
    .ipv4ProtocolFifo_din(extract_ip_meta_512_U0_ipv4ProtocolFifo_din),
    .ipv4ProtocolFifo_num_data_valid(ipv4ProtocolFifo_num_data_valid),
    .ipv4ProtocolFifo_fifo_cap(ipv4ProtocolFifo_fifo_cap),
    .ipv4ProtocolFifo_full_n(ipv4ProtocolFifo_full_n),
    .ipv4ProtocolFifo_write(extract_ip_meta_512_U0_ipv4ProtocolFifo_write)
);

ip_handler_top_ip_handler_compute_ipv4_checksum ip_handler_compute_ipv4_checksum_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_compute_ipv4_checksum_U0_ap_start),
    .ap_done(ip_handler_compute_ipv4_checksum_U0_ap_done),
    .ap_continue(ip_handler_compute_ipv4_checksum_U0_ap_continue),
    .ap_idle(ip_handler_compute_ipv4_checksum_U0_ap_idle),
    .ap_ready(ip_handler_compute_ipv4_checksum_U0_ap_ready),
    .ipDataMetaFifo_dout(ipDataMetaFifo_dout),
    .ipDataMetaFifo_num_data_valid(ipDataMetaFifo_num_data_valid),
    .ipDataMetaFifo_fifo_cap(ipDataMetaFifo_fifo_cap),
    .ipDataMetaFifo_empty_n(ipDataMetaFifo_empty_n),
    .ipDataMetaFifo_read(ip_handler_compute_ipv4_checksum_U0_ipDataMetaFifo_read),
    .ipDataCheckFifo_din(ip_handler_compute_ipv4_checksum_U0_ipDataCheckFifo_din),
    .ipDataCheckFifo_num_data_valid(ipDataCheckFifo_num_data_valid),
    .ipDataCheckFifo_fifo_cap(ipDataCheckFifo_fifo_cap),
    .ipDataCheckFifo_full_n(ipDataCheckFifo_full_n),
    .ipDataCheckFifo_write(ip_handler_compute_ipv4_checksum_U0_ipDataCheckFifo_write),
    .iph_subSumsFifoOut_din(ip_handler_compute_ipv4_checksum_U0_iph_subSumsFifoOut_din),
    .iph_subSumsFifoOut_num_data_valid(iph_subSumsFifoOut_num_data_valid),
    .iph_subSumsFifoOut_fifo_cap(iph_subSumsFifoOut_fifo_cap),
    .iph_subSumsFifoOut_full_n(iph_subSumsFifoOut_full_n),
    .iph_subSumsFifoOut_write(ip_handler_compute_ipv4_checksum_U0_iph_subSumsFifoOut_write)
);

ip_handler_top_ip_handler_check_ipv4_checksum_32_s ip_handler_check_ipv4_checksum_32_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_check_ipv4_checksum_32_U0_ap_start),
    .ap_done(ip_handler_check_ipv4_checksum_32_U0_ap_done),
    .ap_continue(ip_handler_check_ipv4_checksum_32_U0_ap_continue),
    .ap_idle(ip_handler_check_ipv4_checksum_32_U0_ap_idle),
    .ap_ready(ip_handler_check_ipv4_checksum_32_U0_ap_ready),
    .iph_subSumsFifoOut_dout(iph_subSumsFifoOut_dout),
    .iph_subSumsFifoOut_num_data_valid(iph_subSumsFifoOut_num_data_valid),
    .iph_subSumsFifoOut_fifo_cap(iph_subSumsFifoOut_fifo_cap),
    .iph_subSumsFifoOut_empty_n(iph_subSumsFifoOut_empty_n),
    .iph_subSumsFifoOut_read(ip_handler_check_ipv4_checksum_32_U0_iph_subSumsFifoOut_read),
    .validChecksumFifo_din(ip_handler_check_ipv4_checksum_32_U0_validChecksumFifo_din),
    .validChecksumFifo_num_data_valid(validChecksumFifo_num_data_valid),
    .validChecksumFifo_fifo_cap(validChecksumFifo_fifo_cap),
    .validChecksumFifo_full_n(validChecksumFifo_full_n),
    .validChecksumFifo_write(ip_handler_check_ipv4_checksum_32_U0_validChecksumFifo_write)
);

ip_handler_top_ip_invalid_dropper_512_s ip_invalid_dropper_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_invalid_dropper_512_U0_ap_start),
    .ap_done(ip_invalid_dropper_512_U0_ap_done),
    .ap_continue(ip_invalid_dropper_512_U0_ap_continue),
    .ap_idle(ip_invalid_dropper_512_U0_ap_idle),
    .ap_ready(ip_invalid_dropper_512_U0_ap_ready),
    .ipDataCheckFifo_dout(ipDataCheckFifo_dout),
    .ipDataCheckFifo_num_data_valid(ipDataCheckFifo_num_data_valid),
    .ipDataCheckFifo_fifo_cap(ipDataCheckFifo_fifo_cap),
    .ipDataCheckFifo_empty_n(ipDataCheckFifo_empty_n),
    .ipDataCheckFifo_read(ip_invalid_dropper_512_U0_ipDataCheckFifo_read),
    .validChecksumFifo_dout(validChecksumFifo_dout),
    .validChecksumFifo_num_data_valid(validChecksumFifo_num_data_valid),
    .validChecksumFifo_fifo_cap(validChecksumFifo_fifo_cap),
    .validChecksumFifo_empty_n(validChecksumFifo_empty_n),
    .validChecksumFifo_read(ip_invalid_dropper_512_U0_validChecksumFifo_read),
    .validIpAddressFifo_dout(validIpAddressFifo_dout),
    .validIpAddressFifo_num_data_valid(validIpAddressFifo_num_data_valid),
    .validIpAddressFifo_fifo_cap(validIpAddressFifo_fifo_cap),
    .validIpAddressFifo_empty_n(validIpAddressFifo_empty_n),
    .validIpAddressFifo_read(ip_invalid_dropper_512_U0_validIpAddressFifo_read),
    .ipDataDropFifo_din(ip_invalid_dropper_512_U0_ipDataDropFifo_din),
    .ipDataDropFifo_num_data_valid(ipDataDropFifo_num_data_valid),
    .ipDataDropFifo_fifo_cap(ipDataDropFifo_fifo_cap),
    .ipDataDropFifo_full_n(ipDataDropFifo_full_n),
    .ipDataDropFifo_write(ip_invalid_dropper_512_U0_ipDataDropFifo_write),
    .ipv4ValidFifo_din(ip_invalid_dropper_512_U0_ipv4ValidFifo_din),
    .ipv4ValidFifo_num_data_valid(ipv4ValidFifo_num_data_valid),
    .ipv4ValidFifo_fifo_cap(ipv4ValidFifo_fifo_cap),
    .ipv4ValidFifo_full_n(ipv4ValidFifo_full_n),
    .ipv4ValidFifo_write(ip_invalid_dropper_512_U0_ipv4ValidFifo_write)
);

ip_handler_top_cut_length cut_length_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(cut_length_U0_ap_start),
    .ap_done(cut_length_U0_ap_done),
    .ap_continue(cut_length_U0_ap_continue),
    .ap_idle(cut_length_U0_ap_idle),
    .ap_ready(cut_length_U0_ap_ready),
    .ipDataDropFifo_dout(ipDataDropFifo_dout),
    .ipDataDropFifo_num_data_valid(ipDataDropFifo_num_data_valid),
    .ipDataDropFifo_fifo_cap(ipDataDropFifo_fifo_cap),
    .ipDataDropFifo_empty_n(ipDataDropFifo_empty_n),
    .ipDataDropFifo_read(cut_length_U0_ipDataDropFifo_read),
    .ipDataCutFifo_din(cut_length_U0_ipDataCutFifo_din),
    .ipDataCutFifo_num_data_valid(ipDataCutFifo_num_data_valid),
    .ipDataCutFifo_fifo_cap(ipDataCutFifo_fifo_cap),
    .ipDataCutFifo_full_n(ipDataCutFifo_full_n),
    .ipDataCutFifo_write(cut_length_U0_ipDataCutFifo_write)
);

ip_handler_top_detect_ipv4_protocol_512_s detect_ipv4_protocol_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(detect_ipv4_protocol_512_U0_ap_start),
    .ap_done(detect_ipv4_protocol_512_U0_ap_done),
    .ap_continue(detect_ipv4_protocol_512_U0_ap_continue),
    .ap_idle(detect_ipv4_protocol_512_U0_ap_idle),
    .ap_ready(detect_ipv4_protocol_512_U0_ap_ready),
    .ipv4ProtocolFifo_dout(ipv4ProtocolFifo_dout),
    .ipv4ProtocolFifo_num_data_valid(ipv4ProtocolFifo_num_data_valid),
    .ipv4ProtocolFifo_fifo_cap(ipv4ProtocolFifo_fifo_cap),
    .ipv4ProtocolFifo_empty_n(ipv4ProtocolFifo_empty_n),
    .ipv4ProtocolFifo_read(detect_ipv4_protocol_512_U0_ipv4ProtocolFifo_read),
    .ipv4ValidFifo_dout(ipv4ValidFifo_dout),
    .ipv4ValidFifo_num_data_valid(ipv4ValidFifo_num_data_valid),
    .ipv4ValidFifo_fifo_cap(ipv4ValidFifo_fifo_cap),
    .ipv4ValidFifo_empty_n(ipv4ValidFifo_empty_n),
    .ipv4ValidFifo_read(detect_ipv4_protocol_512_U0_ipv4ValidFifo_read),
    .ipDataCutFifo_dout(ipDataCutFifo_dout),
    .ipDataCutFifo_num_data_valid(ipDataCutFifo_num_data_valid),
    .ipDataCutFifo_fifo_cap(ipDataCutFifo_fifo_cap),
    .ipDataCutFifo_empty_n(ipDataCutFifo_empty_n),
    .ipDataCutFifo_read(detect_ipv4_protocol_512_U0_ipDataCutFifo_read),
    .m_axis_tcp_internal_din(detect_ipv4_protocol_512_U0_m_axis_tcp_internal_din),
    .m_axis_tcp_internal_num_data_valid(m_axis_tcp_internal_num_data_valid),
    .m_axis_tcp_internal_fifo_cap(m_axis_tcp_internal_fifo_cap),
    .m_axis_tcp_internal_full_n(m_axis_tcp_internal_full_n),
    .m_axis_tcp_internal_write(detect_ipv4_protocol_512_U0_m_axis_tcp_internal_write),
    .udpDataFifo_din(detect_ipv4_protocol_512_U0_udpDataFifo_din),
    .udpDataFifo_num_data_valid(udpDataFifo_num_data_valid),
    .udpDataFifo_fifo_cap(udpDataFifo_fifo_cap),
    .udpDataFifo_full_n(udpDataFifo_full_n),
    .udpDataFifo_write(detect_ipv4_protocol_512_U0_udpDataFifo_write),
    .m_axis_icmp_internal_din(detect_ipv4_protocol_512_U0_m_axis_icmp_internal_din),
    .m_axis_icmp_internal_num_data_valid(m_axis_icmp_internal_num_data_valid),
    .m_axis_icmp_internal_fifo_cap(m_axis_icmp_internal_fifo_cap),
    .m_axis_icmp_internal_full_n(m_axis_icmp_internal_full_n),
    .m_axis_icmp_internal_write(detect_ipv4_protocol_512_U0_m_axis_icmp_internal_write)
);

ip_handler_top_detect_ipv6_protocol_512_s detect_ipv6_protocol_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(detect_ipv6_protocol_512_U0_ap_start),
    .ap_done(detect_ipv6_protocol_512_U0_ap_done),
    .ap_continue(detect_ipv6_protocol_512_U0_ap_continue),
    .ap_idle(detect_ipv6_protocol_512_U0_ap_idle),
    .ap_ready(detect_ipv6_protocol_512_U0_ap_ready),
    .ipv6DataFifo_dout(ipv6DataFifo_dout),
    .ipv6DataFifo_num_data_valid(ipv6DataFifo_num_data_valid),
    .ipv6DataFifo_fifo_cap(ipv6DataFifo_fifo_cap),
    .ipv6DataFifo_empty_n(ipv6DataFifo_empty_n),
    .ipv6DataFifo_read(detect_ipv6_protocol_512_U0_ipv6DataFifo_read),
    .m_axis_ipv6udp_internal_din(detect_ipv6_protocol_512_U0_m_axis_ipv6udp_internal_din),
    .m_axis_ipv6udp_internal_num_data_valid(m_axis_ipv6udp_internal_num_data_valid),
    .m_axis_ipv6udp_internal_fifo_cap(m_axis_ipv6udp_internal_fifo_cap),
    .m_axis_ipv6udp_internal_full_n(m_axis_ipv6udp_internal_full_n),
    .m_axis_ipv6udp_internal_write(detect_ipv6_protocol_512_U0_m_axis_ipv6udp_internal_write),
    .m_axis_icmpv6_internal_din(detect_ipv6_protocol_512_U0_m_axis_icmpv6_internal_din),
    .m_axis_icmpv6_internal_num_data_valid(m_axis_icmpv6_internal_num_data_valid),
    .m_axis_icmpv6_internal_fifo_cap(m_axis_icmpv6_internal_fifo_cap),
    .m_axis_icmpv6_internal_full_n(m_axis_icmpv6_internal_full_n),
    .m_axis_icmpv6_internal_write(detect_ipv6_protocol_512_U0_m_axis_icmpv6_internal_write)
);

ip_handler_top_ip_handler_duplicate_stream_net_axis_512_s ip_handler_duplicate_stream_net_axis_512_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ip_handler_duplicate_stream_net_axis_512_U0_ap_start),
    .ap_done(ip_handler_duplicate_stream_net_axis_512_U0_ap_done),
    .ap_continue(ip_handler_duplicate_stream_net_axis_512_U0_ap_continue),
    .ap_idle(ip_handler_duplicate_stream_net_axis_512_U0_ap_idle),
    .ap_ready(ip_handler_duplicate_stream_net_axis_512_U0_ap_ready),
    .udpDataFifo_dout(udpDataFifo_dout),
    .udpDataFifo_num_data_valid(udpDataFifo_num_data_valid),
    .udpDataFifo_fifo_cap(udpDataFifo_fifo_cap),
    .udpDataFifo_empty_n(udpDataFifo_empty_n),
    .udpDataFifo_read(ip_handler_duplicate_stream_net_axis_512_U0_udpDataFifo_read),
    .m_axis_udp_internal_din(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_udp_internal_din),
    .m_axis_udp_internal_num_data_valid(m_axis_udp_internal_num_data_valid),
    .m_axis_udp_internal_fifo_cap(m_axis_udp_internal_fifo_cap),
    .m_axis_udp_internal_full_n(m_axis_udp_internal_full_n),
    .m_axis_udp_internal_write(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_udp_internal_write),
    .m_axis_roce_internal_din(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_roce_internal_din),
    .m_axis_roce_internal_num_data_valid(m_axis_roce_internal_num_data_valid),
    .m_axis_roce_internal_fifo_cap(m_axis_roce_internal_fifo_cap),
    .m_axis_roce_internal_full_n(m_axis_roce_internal_full_n),
    .m_axis_roce_internal_write(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_roce_internal_write)
);

ip_handler_top_fifo_w32_d6_S myIpAddress_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_myIpAddress_c_din),
    .if_full_n(myIpAddress_c_full_n),
    .if_write(entry_proc_U0_myIpAddress_c_write),
    .if_dout(myIpAddress_c_dout),
    .if_num_data_valid(myIpAddress_c_num_data_valid),
    .if_fifo_cap(myIpAddress_c_fifo_cap),
    .if_empty_n(myIpAddress_c_empty_n),
    .if_read(extract_ip_meta_512_U0_myIpAddress_read)
);

ip_handler_top_fifo_w1024_d2_S s_axis_raw_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(convert_axis_to_net_axis_512_U0_s_axis_raw_internal_din),
    .if_full_n(s_axis_raw_internal_full_n),
    .if_write(convert_axis_to_net_axis_512_U0_s_axis_raw_internal_write),
    .if_dout(s_axis_raw_internal_dout),
    .if_num_data_valid(s_axis_raw_internal_num_data_valid),
    .if_fifo_cap(s_axis_raw_internal_fifo_cap),
    .if_empty_n(s_axis_raw_internal_empty_n),
    .if_read(detect_eth_protocol_512_U0_s_axis_raw_internal_read)
);

ip_handler_top_fifo_w1024_d2_S m_axis_arp_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protocol_512_U0_m_axis_arp_internal_din),
    .if_full_n(m_axis_arp_internal_full_n),
    .if_write(route_by_eth_protocol_512_U0_m_axis_arp_internal_write),
    .if_dout(m_axis_arp_internal_dout),
    .if_num_data_valid(m_axis_arp_internal_num_data_valid),
    .if_fifo_cap(m_axis_arp_internal_fifo_cap),
    .if_empty_n(m_axis_arp_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_U0_m_axis_arp_internal_read)
);

ip_handler_top_fifo_w1024_d2_S m_axis_icmpv6_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_ipv6_protocol_512_U0_m_axis_icmpv6_internal_din),
    .if_full_n(m_axis_icmpv6_internal_full_n),
    .if_write(detect_ipv6_protocol_512_U0_m_axis_icmpv6_internal_write),
    .if_dout(m_axis_icmpv6_internal_dout),
    .if_num_data_valid(m_axis_icmpv6_internal_num_data_valid),
    .if_fifo_cap(m_axis_icmpv6_internal_fifo_cap),
    .if_empty_n(m_axis_icmpv6_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_internal_read)
);

ip_handler_top_fifo_w1024_d2_S m_axis_ipv6udp_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_ipv6_protocol_512_U0_m_axis_ipv6udp_internal_din),
    .if_full_n(m_axis_ipv6udp_internal_full_n),
    .if_write(detect_ipv6_protocol_512_U0_m_axis_ipv6udp_internal_write),
    .if_dout(m_axis_ipv6udp_internal_dout),
    .if_num_data_valid(m_axis_ipv6udp_internal_num_data_valid),
    .if_fifo_cap(m_axis_ipv6udp_internal_fifo_cap),
    .if_empty_n(m_axis_ipv6udp_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_internal_read)
);

ip_handler_top_fifo_w1024_d2_S m_axis_icmp_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_ipv4_protocol_512_U0_m_axis_icmp_internal_din),
    .if_full_n(m_axis_icmp_internal_full_n),
    .if_write(detect_ipv4_protocol_512_U0_m_axis_icmp_internal_write),
    .if_dout(m_axis_icmp_internal_dout),
    .if_num_data_valid(m_axis_icmp_internal_num_data_valid),
    .if_fifo_cap(m_axis_icmp_internal_fifo_cap),
    .if_empty_n(m_axis_icmp_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_3_U0_m_axis_icmp_internal_read)
);

ip_handler_top_fifo_w1024_d2_S m_axis_udp_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_udp_internal_din),
    .if_full_n(m_axis_udp_internal_full_n),
    .if_write(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_udp_internal_write),
    .if_dout(m_axis_udp_internal_dout),
    .if_num_data_valid(m_axis_udp_internal_num_data_valid),
    .if_fifo_cap(m_axis_udp_internal_fifo_cap),
    .if_empty_n(m_axis_udp_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_4_U0_m_axis_udp_internal_read)
);

ip_handler_top_fifo_w1024_d2_S m_axis_tcp_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_ipv4_protocol_512_U0_m_axis_tcp_internal_din),
    .if_full_n(m_axis_tcp_internal_full_n),
    .if_write(detect_ipv4_protocol_512_U0_m_axis_tcp_internal_write),
    .if_dout(m_axis_tcp_internal_dout),
    .if_num_data_valid(m_axis_tcp_internal_num_data_valid),
    .if_fifo_cap(m_axis_tcp_internal_fifo_cap),
    .if_empty_n(m_axis_tcp_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_5_U0_m_axis_tcp_internal_read)
);

ip_handler_top_fifo_w1024_d2_S m_axis_roce_internal_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_roce_internal_din),
    .if_full_n(m_axis_roce_internal_full_n),
    .if_write(ip_handler_duplicate_stream_net_axis_512_U0_m_axis_roce_internal_write),
    .if_dout(m_axis_roce_internal_dout),
    .if_num_data_valid(m_axis_roce_internal_num_data_valid),
    .if_fifo_cap(m_axis_roce_internal_fifo_cap),
    .if_empty_n(m_axis_roce_internal_empty_n),
    .if_read(convert_net_axis_to_axis_512_6_U0_m_axis_roce_internal_read)
);

ip_handler_top_fifo_w16_d2_S etherTypeFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_eth_protocol_512_U0_etherTypeFifo_din),
    .if_full_n(etherTypeFifo_full_n),
    .if_write(detect_eth_protocol_512_U0_etherTypeFifo_write),
    .if_dout(etherTypeFifo_dout),
    .if_num_data_valid(etherTypeFifo_num_data_valid),
    .if_fifo_cap(etherTypeFifo_fifo_cap),
    .if_empty_n(etherTypeFifo_empty_n),
    .if_read(route_by_eth_protocol_512_U0_etherTypeFifo_read)
);

ip_handler_top_fifo_w1024_d4_A ethDataFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_eth_protocol_512_U0_ethDataFifo_din),
    .if_full_n(ethDataFifo_full_n),
    .if_write(detect_eth_protocol_512_U0_ethDataFifo_write),
    .if_dout(ethDataFifo_dout),
    .if_num_data_valid(ethDataFifo_num_data_valid),
    .if_fifo_cap(ethDataFifo_fifo_cap),
    .if_empty_n(ethDataFifo_empty_n),
    .if_read(route_by_eth_protocol_512_U0_ethDataFifo_read)
);

ip_handler_top_fifo_w1024_d2_S ipv4ShiftFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protocol_512_U0_ipv4ShiftFifo_din),
    .if_full_n(ipv4ShiftFifo_full_n),
    .if_write(route_by_eth_protocol_512_U0_ipv4ShiftFifo_write),
    .if_dout(ipv4ShiftFifo_dout),
    .if_num_data_valid(ipv4ShiftFifo_num_data_valid),
    .if_fifo_cap(ipv4ShiftFifo_fifo_cap),
    .if_empty_n(ipv4ShiftFifo_empty_n),
    .if_read(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipv4ShiftFifo_read)
);

ip_handler_top_fifo_w1024_d2_S ipv6ShiftFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(route_by_eth_protocol_512_U0_ipv6ShiftFifo_din),
    .if_full_n(ipv6ShiftFifo_full_n),
    .if_write(route_by_eth_protocol_512_U0_ipv6ShiftFifo_write),
    .if_dout(ipv6ShiftFifo_dout),
    .if_num_data_valid(ipv6ShiftFifo_num_data_valid),
    .if_fifo_cap(ipv6ShiftFifo_fifo_cap),
    .if_empty_n(ipv6ShiftFifo_empty_n),
    .if_read(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6ShiftFifo_read)
);

ip_handler_top_fifo_w577_d2_S ipDataFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipDataFifo_din),
    .if_full_n(ipDataFifo_full_n),
    .if_write(ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ipDataFifo_write),
    .if_dout(ipDataFifo_dout),
    .if_num_data_valid(ipDataFifo_num_data_valid),
    .if_fifo_cap(ipDataFifo_fifo_cap),
    .if_empty_n(ipDataFifo_empty_n),
    .if_read(extract_ip_meta_512_U0_ipDataFifo_read)
);

ip_handler_top_fifo_w1024_d2_S ipv6DataFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6DataFifo_din),
    .if_full_n(ipv6DataFifo_full_n),
    .if_write(ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ipv6DataFifo_write),
    .if_dout(ipv6DataFifo_dout),
    .if_num_data_valid(ipv6DataFifo_num_data_valid),
    .if_fifo_cap(ipv6DataFifo_fifo_cap),
    .if_empty_n(ipv6DataFifo_empty_n),
    .if_read(detect_ipv6_protocol_512_U0_ipv6DataFifo_read)
);

ip_handler_top_fifo_w1024_d2_S ipDataMetaFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_ipDataMetaFifo_din),
    .if_full_n(ipDataMetaFifo_full_n),
    .if_write(extract_ip_meta_512_U0_ipDataMetaFifo_write),
    .if_dout(ipDataMetaFifo_dout),
    .if_num_data_valid(ipDataMetaFifo_num_data_valid),
    .if_fifo_cap(ipDataMetaFifo_fifo_cap),
    .if_empty_n(ipDataMetaFifo_empty_n),
    .if_read(ip_handler_compute_ipv4_checksum_U0_ipDataMetaFifo_read)
);

ip_handler_top_fifo_w1_d32_S validIpAddressFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_validIpAddressFifo_din),
    .if_full_n(validIpAddressFifo_full_n),
    .if_write(extract_ip_meta_512_U0_validIpAddressFifo_write),
    .if_dout(validIpAddressFifo_dout),
    .if_num_data_valid(validIpAddressFifo_num_data_valid),
    .if_fifo_cap(validIpAddressFifo_fifo_cap),
    .if_empty_n(validIpAddressFifo_empty_n),
    .if_read(ip_invalid_dropper_512_U0_validIpAddressFifo_read)
);

ip_handler_top_fifo_w8_d32_S ipv4ProtocolFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_ip_meta_512_U0_ipv4ProtocolFifo_din),
    .if_full_n(ipv4ProtocolFifo_full_n),
    .if_write(extract_ip_meta_512_U0_ipv4ProtocolFifo_write),
    .if_dout(ipv4ProtocolFifo_dout),
    .if_num_data_valid(ipv4ProtocolFifo_num_data_valid),
    .if_fifo_cap(ipv4ProtocolFifo_fifo_cap),
    .if_empty_n(ipv4ProtocolFifo_empty_n),
    .if_read(detect_ipv4_protocol_512_U0_ipv4ProtocolFifo_read)
);

ip_handler_top_fifo_w577_d64_A ipDataCheckFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_compute_ipv4_checksum_U0_ipDataCheckFifo_din),
    .if_full_n(ipDataCheckFifo_full_n),
    .if_write(ip_handler_compute_ipv4_checksum_U0_ipDataCheckFifo_write),
    .if_dout(ipDataCheckFifo_dout),
    .if_num_data_valid(ipDataCheckFifo_num_data_valid),
    .if_fifo_cap(ipDataCheckFifo_fifo_cap),
    .if_empty_n(ipDataCheckFifo_empty_n),
    .if_read(ip_invalid_dropper_512_U0_ipDataCheckFifo_read)
);

ip_handler_top_fifo_w544_d2_S iph_subSumsFifoOut_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_compute_ipv4_checksum_U0_iph_subSumsFifoOut_din),
    .if_full_n(iph_subSumsFifoOut_full_n),
    .if_write(ip_handler_compute_ipv4_checksum_U0_iph_subSumsFifoOut_write),
    .if_dout(iph_subSumsFifoOut_dout),
    .if_num_data_valid(iph_subSumsFifoOut_num_data_valid),
    .if_fifo_cap(iph_subSumsFifoOut_fifo_cap),
    .if_empty_n(iph_subSumsFifoOut_empty_n),
    .if_read(ip_handler_check_ipv4_checksum_32_U0_iph_subSumsFifoOut_read)
);

ip_handler_top_fifo_w1_d4_S validChecksumFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_handler_check_ipv4_checksum_32_U0_validChecksumFifo_din),
    .if_full_n(validChecksumFifo_full_n),
    .if_write(ip_handler_check_ipv4_checksum_32_U0_validChecksumFifo_write),
    .if_dout(validChecksumFifo_dout),
    .if_num_data_valid(validChecksumFifo_num_data_valid),
    .if_fifo_cap(validChecksumFifo_fifo_cap),
    .if_empty_n(validChecksumFifo_empty_n),
    .if_read(ip_invalid_dropper_512_U0_validChecksumFifo_read)
);

ip_handler_top_fifo_w1_d8_S ipv4ValidFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_invalid_dropper_512_U0_ipv4ValidFifo_din),
    .if_full_n(ipv4ValidFifo_full_n),
    .if_write(ip_invalid_dropper_512_U0_ipv4ValidFifo_write),
    .if_dout(ipv4ValidFifo_dout),
    .if_num_data_valid(ipv4ValidFifo_num_data_valid),
    .if_fifo_cap(ipv4ValidFifo_fifo_cap),
    .if_empty_n(ipv4ValidFifo_empty_n),
    .if_read(detect_ipv4_protocol_512_U0_ipv4ValidFifo_read)
);

ip_handler_top_fifo_w577_d2_S ipDataDropFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(ip_invalid_dropper_512_U0_ipDataDropFifo_din),
    .if_full_n(ipDataDropFifo_full_n),
    .if_write(ip_invalid_dropper_512_U0_ipDataDropFifo_write),
    .if_dout(ipDataDropFifo_dout),
    .if_num_data_valid(ipDataDropFifo_num_data_valid),
    .if_fifo_cap(ipDataDropFifo_fifo_cap),
    .if_empty_n(ipDataDropFifo_empty_n),
    .if_read(cut_length_U0_ipDataDropFifo_read)
);

ip_handler_top_fifo_w577_d2_S ipDataCutFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(cut_length_U0_ipDataCutFifo_din),
    .if_full_n(ipDataCutFifo_full_n),
    .if_write(cut_length_U0_ipDataCutFifo_write),
    .if_dout(ipDataCutFifo_dout),
    .if_num_data_valid(ipDataCutFifo_num_data_valid),
    .if_fifo_cap(ipDataCutFifo_fifo_cap),
    .if_empty_n(ipDataCutFifo_empty_n),
    .if_read(detect_ipv4_protocol_512_U0_ipDataCutFifo_read)
);

ip_handler_top_fifo_w577_d2_S udpDataFifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(detect_ipv4_protocol_512_U0_udpDataFifo_din),
    .if_full_n(udpDataFifo_full_n),
    .if_write(detect_ipv4_protocol_512_U0_udpDataFifo_write),
    .if_dout(udpDataFifo_dout),
    .if_num_data_valid(udpDataFifo_num_data_valid),
    .if_fifo_cap(udpDataFifo_fifo_cap),
    .if_empty_n(udpDataFifo_empty_n),
    .if_read(ip_handler_duplicate_stream_net_axis_512_U0_udpDataFifo_read)
);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign convert_axis_to_net_axis_512_U0_ap_continue = 1'b1;

assign convert_axis_to_net_axis_512_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_1_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_1_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_2_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_2_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_3_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_3_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_4_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_4_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_5_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_5_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_6_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_6_U0_ap_start = 1'b1;

assign convert_net_axis_to_axis_512_U0_ap_continue = 1'b1;

assign convert_net_axis_to_axis_512_U0_ap_start = 1'b1;

assign cut_length_U0_ap_continue = 1'b1;

assign cut_length_U0_ap_start = 1'b1;

assign detect_eth_protocol_512_U0_ap_continue = 1'b1;

assign detect_eth_protocol_512_U0_ap_start = 1'b1;

assign detect_ipv4_protocol_512_U0_ap_continue = 1'b1;

assign detect_ipv4_protocol_512_U0_ap_start = 1'b1;

assign detect_ipv6_protocol_512_U0_ap_continue = 1'b1;

assign detect_ipv6_protocol_512_U0_ap_start = 1'b1;

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = 1'b1;

assign extract_ip_meta_512_U0_ap_continue = 1'b1;

assign extract_ip_meta_512_U0_ap_start = 1'b1;

assign ip_handler_check_ipv4_checksum_32_U0_ap_continue = 1'b1;

assign ip_handler_check_ipv4_checksum_32_U0_ap_start = 1'b1;

assign ip_handler_compute_ipv4_checksum_U0_ap_continue = 1'b1;

assign ip_handler_compute_ipv4_checksum_U0_ap_start = 1'b1;

assign ip_handler_duplicate_stream_net_axis_512_U0_ap_continue = 1'b1;

assign ip_handler_duplicate_stream_net_axis_512_U0_ap_start = 1'b1;

assign ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_continue = 1'b1;

assign ip_handler_rshiftWordByOctet_net_axis_512_512_1_U0_ap_start = 1'b1;

assign ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_continue = 1'b1;

assign ip_handler_rshiftWordByOctet_net_axis_512_512_3_U0_ap_start = 1'b1;

assign ip_invalid_dropper_512_U0_ap_continue = 1'b1;

assign ip_invalid_dropper_512_U0_ap_start = 1'b1;

assign m_axis_arp_TDATA = convert_net_axis_to_axis_512_U0_m_axis_arp_TDATA;

assign m_axis_arp_TKEEP = convert_net_axis_to_axis_512_U0_m_axis_arp_TKEEP;

assign m_axis_arp_TLAST = convert_net_axis_to_axis_512_U0_m_axis_arp_TLAST;

assign m_axis_arp_TSTRB = convert_net_axis_to_axis_512_U0_m_axis_arp_TSTRB;

assign m_axis_arp_TVALID = convert_net_axis_to_axis_512_U0_m_axis_arp_TVALID;

assign m_axis_icmp_TDATA = convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TDATA;

assign m_axis_icmp_TKEEP = convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TKEEP;

assign m_axis_icmp_TLAST = convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TLAST;

assign m_axis_icmp_TSTRB = convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TSTRB;

assign m_axis_icmp_TVALID = convert_net_axis_to_axis_512_3_U0_m_axis_icmp_TVALID;

assign m_axis_icmpv6_TDATA = convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TDATA;

assign m_axis_icmpv6_TKEEP = convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TKEEP;

assign m_axis_icmpv6_TLAST = convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TLAST;

assign m_axis_icmpv6_TSTRB = convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TSTRB;

assign m_axis_icmpv6_TVALID = convert_net_axis_to_axis_512_1_U0_m_axis_icmpv6_TVALID;

assign m_axis_ipv6udp_TDATA = convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TDATA;

assign m_axis_ipv6udp_TKEEP = convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TKEEP;

assign m_axis_ipv6udp_TLAST = convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TLAST;

assign m_axis_ipv6udp_TSTRB = convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TSTRB;

assign m_axis_ipv6udp_TVALID = convert_net_axis_to_axis_512_2_U0_m_axis_ipv6udp_TVALID;

assign m_axis_roce_TDATA = convert_net_axis_to_axis_512_6_U0_m_axis_roce_TDATA;

assign m_axis_roce_TKEEP = convert_net_axis_to_axis_512_6_U0_m_axis_roce_TKEEP;

assign m_axis_roce_TLAST = convert_net_axis_to_axis_512_6_U0_m_axis_roce_TLAST;

assign m_axis_roce_TSTRB = convert_net_axis_to_axis_512_6_U0_m_axis_roce_TSTRB;

assign m_axis_roce_TVALID = convert_net_axis_to_axis_512_6_U0_m_axis_roce_TVALID;

assign m_axis_tcp_TDATA = convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TDATA;

assign m_axis_tcp_TKEEP = convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TKEEP;

assign m_axis_tcp_TLAST = convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TLAST;

assign m_axis_tcp_TSTRB = convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TSTRB;

assign m_axis_tcp_TVALID = convert_net_axis_to_axis_512_5_U0_m_axis_tcp_TVALID;

assign m_axis_udp_TDATA = convert_net_axis_to_axis_512_4_U0_m_axis_udp_TDATA;

assign m_axis_udp_TKEEP = convert_net_axis_to_axis_512_4_U0_m_axis_udp_TKEEP;

assign m_axis_udp_TLAST = convert_net_axis_to_axis_512_4_U0_m_axis_udp_TLAST;

assign m_axis_udp_TSTRB = convert_net_axis_to_axis_512_4_U0_m_axis_udp_TSTRB;

assign m_axis_udp_TVALID = convert_net_axis_to_axis_512_4_U0_m_axis_udp_TVALID;

assign route_by_eth_protocol_512_U0_ap_continue = 1'b1;

assign route_by_eth_protocol_512_U0_ap_start = 1'b1;

assign s_axis_raw_TREADY = convert_axis_to_net_axis_512_U0_s_axis_raw_TREADY;


reg find_df_deadlock = 0;
// synthesis translate_off
`include "ip_handler_top_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "ip_handler_top_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //ip_handler_top

